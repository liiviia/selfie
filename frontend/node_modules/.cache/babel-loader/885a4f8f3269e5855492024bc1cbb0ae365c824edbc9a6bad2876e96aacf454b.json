{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport NotificationManager from '../components/NotificationManager.vue';\nexport default {\n  components: {\n    NotificationManager\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const email = localStorage.getItem('email');\n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      email: email,\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: localStorage.getItem('username') || 'Guest',\n      altri: false\n    });\n    onMounted(() => {\n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n      fetchUsers(); // Carica gli utenti quando il componente viene montato\n    });\n    const message = ref('');\n    const selectedParticipants = ref([]);\n    const users = ref([]);\n    const createEvent = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n\n        // console.log(\"chiamata a scheduler\");\n        // console.log(\"notitiche\", newEvent.value.notificationMechanism);\n        // ///////////\n        // const notificationManager = proxy.$refs.notificationManager;\n        // const emaill = localStorage.getItem('email');\n        // notificationManager.scheduleNotification(newEvent.value, emaill);\n\n        //aggiunge i partecipanti selezionati\n\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento creato con successo:', response.data);\n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n          email: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest',\n          participants: [],\n          // definire come array vuoto\n          altri: false\n        };\n        selectedParticipants.value = [];\n        message.value = 'Evento creato con successo!';\n        console.log(\"evento creato\", response.data);\n        console.log('Partecipanti selezionati:', newEvent.value.participants);\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale'); ////\n        }, 3000);\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        users.value = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n    return {\n      newEvent,\n      selectedParticipants,\n      users,\n      message,\n      createEvent\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","axios","NotificationManager","components","setup","route","router","email","localStorage","getItem","newEvent","title","description","date","startTime","duration","location","isRecurring","frequency","numberOfOccurrences","notificationMechanism","notificationTime","repeatNotification","author","altri","query","value","fetchUsers","message","selectedParticipants","users","createEvent","token","sessionStorage","response","post","headers","Authorization","console","log","data","participants","setTimeout","push","error","get"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/addEvent.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h2>Crea un Nuovo Evento</h2>\n    <form @submit.prevent=\"createEvent\">\n      <div>\n        <label for=\"title\">Titolo:</label>\n        <input type=\"text\" v-model=\"newEvent.title\" required />\n      </div>\n      <div>\n        <label for=\"description\">Descrizione:</label>\n        <textarea v-model=\"newEvent.description\"></textarea>\n      </div>\n      <div>\n        <label for=\"date\">Data:</label>\n        <input type=\"date\" v-model=\"newEvent.date\" required />\n      </div>\n      <div>\n        <label for=\"startTime\">Ora di Inizio:</label>\n        <input type=\"time\" v-model=\"newEvent.startTime\" required />\n      </div>\n      <div>\n        <label for=\"duration\">Durata (minuti):</label>\n        <input type=\"number\" v-model=\"newEvent.duration\" required />\n      </div>\n      <div>\n        <label for=\"location\">Luogo:</label>\n        <input type=\"text\" v-model=\"newEvent.location\" />\n      </div>\n      <div>\n        <label>Ãˆ Ripetibile?</label>\n        <input type=\"checkbox\" v-model=\"newEvent.isRecurring\" />\n      </div>\n      <div v-if=\"newEvent.isRecurring\">\n        <label for=\"frequency\">Frequenza:</label>\n        <select v-model=\"newEvent.frequency\">\n          <option value=\"one-time\">Una tantum</option>\n          <option value=\"daily\">Giornaliero</option>\n          <option value=\"weekly\">Settimanale</option>\n          <option value=\"monthly\">Mensile</option>\n        </select>\n        <div> \n          <label for=\"numberOfOccurrences\">Numero di Ripetizioni:</label>\n          <input type=\"number\" v-model=\"newEvent.numberOfOccurrences\" placeholder=\"Lascia vuoto per ripetere indefinitamente\" />\n        </div>\n      </div>\n      <div>\n        <label>Meccanismo di Notifica:</label>\n        <div>\n          <input type=\"checkbox\" value=\"email\" v-model=\"newEvent.notificationMechanism\" /> Email\n          <input type=\"checkbox\" value=\"alert\" v-model=\"newEvent.notificationMechanism\" /> Alert\n        </div>\n        <div>\n          <label for=\"notificationTime\">Tempo di Notifica (minuti prima):</label>\n          <input type=\"number\" v-model=\"newEvent.notificationTime\" />\n        </div>\n        <div>\n          <label for=\"repeatNotification\">Ripeti Notifica (minuti):</label>\n          <input type=\"number\" v-model=\"newEvent.repeatNotification\" />\n        </div>\n      </div>\n      <div>\n        <label for=\"author\">Autore:</label>\n        <input type=\"text\" v-model=\"newEvent.author\" required />\n      </div>\n      const createEvent = async () => {\n  try {\n    const token = sessionStorage.getItem('token');\n\n    // Assegna i partecipanti selezionati a `newEvent.participants`\n    newEvent.value.participants = selectedParticipants.value;\n\n    const response = await axios.post('/api/events', newEvent.value, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log('Evento creato con successo:', response.data);\n\n    // Resetta i campi del form\n    newEvent.value = {\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      email: '',\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: localStorage.getItem('username') || 'Guest',\n      participants: [],\n      altri: false,\n    };\n\n    selectedParticipants.value = [];\n    message.value = 'Evento creato con successo!';\n    console.log(\"evento creato\", response.data);\n\n    setTimeout(() => {\n      message.value = '';\n      router.push('/homePrincipale');\n    }, 3000);\n\n  } catch (error) {\n    message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n    console.error('Errore:', error);\n  }\n};\n\n      <div>\n        <label>Aggiungere altri partecipanti?</label>\n        <input type=\"checkbox\" v-model=\"newEvent.altri\" />\n      </div>\n      \n      <div v-if=\"newEvent.altri\">\n        <label for=\"participants\">Partecipanti</label>\n        <select v-model=\"selectedParticipants\" multiple>\n          <option v-for=\"user in users\" :key=\"user._id\" :value=\"user._id\">\n            {{ user.username }}\n          </option>\n        </select>\n      </div>\n\n      <button type=\"submit\">Crea Evento</button>\n    </form>\n    <NotificationManager ref=\"notificationManager\" />\n    <p v-if=\"message\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport NotificationManager from '../components/NotificationManager.vue';\n\nexport default {\n  components:{\n    NotificationManager\n  },\n  \n  setup() {\n    const route = useRoute();\n    const router=useRouter();\n    const email = localStorage.getItem('email');\n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      email:email,\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: localStorage.getItem('username') || 'Guest',\n      altri:false,\n    });\n\n    onMounted(() => {\n\n     \n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n      fetchUsers(); // Carica gli utenti quando il componente viene montato\n\n    });\n\n    \n    const message = ref('');\n    const selectedParticipants = ref([]);\n    const users = ref([]);\n    \n\n    const createEvent = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n       \n        // console.log(\"chiamata a scheduler\");\n        // console.log(\"notitiche\", newEvent.value.notificationMechanism);\n        // ///////////\n        // const notificationManager = proxy.$refs.notificationManager;\n        // const emaill = localStorage.getItem('email');\n        // notificationManager.scheduleNotification(newEvent.value, emaill);\n\n        //aggiunge i partecipanti selezionati\n\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento creato con successo:', response.data);\n\n        newEvent.value = {\n  title: '',\n  description: '',\n  date: '',\n  startTime: '',\n  duration: '',\n  location: '',\n  isRecurring: false,\n  frequency: 'one-time',\n  email: '',\n  numberOfOccurrences: null,\n  notificationMechanism: [],\n  notificationTime: 0,\n  repeatNotification: 0,\n  author: localStorage.getItem('username') || 'Guest',\n  participants: [], // definire come array vuoto\n  altri: false,\n};\n\n\n        selectedParticipants.value = [];\n\n        message.value = 'Evento creato con successo!';\n        console.log(\"evento creato\", response.data);\n        console.log('Partecipanti selezionati:', newEvent.value.participants);\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale'); ////\n        }, 3000);\n\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        users.value = response.data; \n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n    return {\n      newEvent,\n      selectedParticipants,\n      users,\n      message,\n      createEvent\n    };\n  },\n\n};\n</script>\n\n<style scoped>\n.event-form {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #15172b;\n  border-radius: 12px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1); \n  transition: transform 0.3s ease; \n  box-sizing: border-box;\n}\n\n.event-form:hover {\n  transform: translateY(-5px); \n}\n\n.event-form h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  font-size: 28px;\n}\n\n.event-form div {\n  margin-bottom: 20px;\n}\n\n.event-form label {\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  display: block;\n}\n\n.event-form input[type=\"text\"],\n.event-form input[type=\"date\"],\n.event-form input[type=\"time\"],\n.event-form input[type=\"number\"],\n.event-form textarea,\n.event-form select {\n  padding: 12px;\n  border: 2px solid #ced4da;\n  border-radius: 8px;\n  font-size: 16px;\n  width: 100%;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.event-form input:focus,\n.event-form textarea:focus,\n.event-form select:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25); \n  outline: none;\n}\n\n.event-form textarea {\n  height: 120px;\n  resize: none;\n}\n\n.event-form button {\n  padding: 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  font-family: 'Poppins', sans-serif;\n  transition: background-color 0.3s ease, transform 0.2s;\n}\n\n.event-form button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\n.event-form p {\n  text-align: center;\n  margin-top: 20px;\n  color: #28a745;\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n}\n\n.event-form input,\n.event-form textarea,\n.event-form button {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \n}\n\n.event-form div {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.back-home-link {\n  color: #0016db;\n  font-family: 'Poppins', sans-serif;\n  text-decoration: none;\n  margin-bottom: 20px;\n  transition: color 0.3s ease;\n  text-align: left;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}