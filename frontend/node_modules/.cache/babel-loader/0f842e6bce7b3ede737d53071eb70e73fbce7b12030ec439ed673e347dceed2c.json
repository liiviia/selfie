{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"activity-form\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_7 = [\"value\", \"id\"];\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"status-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[13] || (_cache[13] = _createElementVNode(\"h1\", null, \"Aggiungi una nuova attività\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $setup.submitActivity && $setup.submitActivity(...args), [\"prevent\"])),\n    class: \"form-container\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Titolo:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newActivity.title = $event),\n    id: \"title\",\n    required: \"\",\n    class: \"form-input\"\n  }, null, 512), [[_vModelText, $setup.newActivity.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Descrizione:\", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newActivity.description = $event),\n    id: \"description\",\n    class: \"form-textarea\",\n    required: \"true\"\n  }, null, 512), [[_vModelText, $setup.newActivity.description]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"deadline\"\n  }, \"Scadenza:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newActivity.deadline = $event),\n    type: \"date\",\n    id: \"deadline\",\n    required: \"\",\n    class: \"form-input\"\n  }, null, 512), [[_vModelText, $setup.newActivity.deadline]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"type\"\n  }, \"Tipo di Attività:\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.newActivity.type = $event),\n    id: \"type\",\n    class: \"form-input\"\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"option\", {\n    value: \"singola\"\n  }, \"Singola\", -1), _createElementVNode(\"option\", {\n    value: \"gruppo\"\n  }, \"Gruppo\", -1)]), 512), [[_vModelSelect, $setup.newActivity.type]])]), $setup.newActivity.type === 'gruppo' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"Partecipanti:\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.users, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.username,\n      class: \"form-check\"\n    }, [user.username !== $setup.loggedInUsername ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      class: \"form-check-input\",\n      type: \"checkbox\",\n      value: user.username,\n      id: user.username,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.newActivity.participants = $event)\n    }, null, 8, _hoisted_7)), [[_vModelCheckbox, $setup.newActivity.participants]]) : _createCommentVNode(\"\", true), _createElementVNode(\"label\", {\n      class: \"form-check-label\",\n      for: user.username\n    }, _toDisplayString(user.username), 9, _hoisted_8)]);\n  }), 128))])) : _createCommentVNode(\"\", true), _cache[12] || (_cache[12] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-button\"\n  }, \"Aggiungi Attività\", -1))], 32), $setup.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, _toDisplayString($setup.message), 1)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$setup","submitActivity","_hoisted_2","for","$event","newActivity","title","id","required","_hoisted_3","description","_hoisted_4","deadline","type","_hoisted_5","value","_hoisted_6","_Fragment","_renderList","users","user","username","loggedInUsername","participants","_hoisted_7","_createCommentVNode","_hoisted_8","message","_hoisted_9","_toDisplayString"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/addActivities.vue"],"sourcesContent":["<template>\n  <div class=\"activity-form\">\n    <h1>Aggiungi una nuova attività</h1>\n\n    <form @submit.prevent=\"submitActivity\" class=\"form-container\">\n      <div class=\"form-group\">\n        <label for=\"title\">Titolo:</label>\n        <input v-model=\"newActivity.title\" id=\"title\" required class=\"form-input\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Descrizione:</label>\n        <textarea v-model=\"newActivity.description\" id=\"description\" class=\"form-textarea\" required=\"true\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"deadline\">Scadenza:</label>\n        <input v-model=\"newActivity.deadline\" type=\"date\" id=\"deadline\" required class=\"form-input\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"type\">Tipo di Attività:</label>\n        <select v-model=\"newActivity.type\" id=\"type\" class=\"form-input\">\n          <option value=\"singola\">Singola</option>\n          <option value=\"gruppo\">Gruppo</option>\n        </select>\n      </div>\n\n      <div v-if=\"newActivity.type === 'gruppo'\" class=\"form-group\">\n        <label>Partecipanti:</label>\n        <div v-for=\"user in users\" :key=\"user.username\" class=\"form-check\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\" \n            :value=\"user.username\" \n            :id=\"user.username\" \n            v-model=\"newActivity.participants\" \n            v-if=\"user.username !== loggedInUsername\"  \n          />\n          <label class=\"form-check-label\" :for=\"user.username\">\n            {{ user.username }} \n          </label>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"submit-button\">Aggiungi Attività</button>\n    </form>\n\n    <p v-if=\"message\" class=\"status-message\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n\n    const loggedInUsername = localStorage.getItem('username') || 'Guest'; \n\n    const newActivity = ref({\n      title: '',\n      description: '',\n      deadline: '',\n      author: loggedInUsername,\n      email: localStorage.getItem('email') || '',\n      completed: false,\n      type: 'singola',\n      participants: [loggedInUsername] \n    });\n\n    const users = ref([]); \n    const message = ref('');\n\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        users.value = response.data; \n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n    onMounted(async () => {\n      await fetchUsers();\n\n      if (route.query.date) {\n        newActivity.value.deadline = route.query.date;\n      }\n    });\n\n    const submitActivity = async () => {\n\n      const currentDate = new Date();\n  const activityDate = new Date(newActivity.value.deadline);\n\n  currentDate.setHours(0, 0, 0, 0);\n\n  if (activityDate < currentDate) {\n      alert(\"Data non valida\"); \n    return; \n  }\n\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.post('/api/activities', newActivity.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        newActivity.value = {\n          title: '',\n          description: '',\n          deadline: '',\n          author: loggedInUsername,\n          email: localStorage.getItem('email') || '',\n          completed: false,\n          type: 'singola',\n          participants: [loggedInUsername] \n        };\n\n        message.value = 'Attività aggiunta con successo!';\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale');\n        }, 2000);\n      } catch (error) {\n        message.value = 'Errore: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n\n    return {\n      newActivity,\n      users,\n      message,\n      submitActivity,\n      loggedInUsername\n    };\n  }\n};\n</script>\n\n\n\n\n<style scoped>\n.activity-form {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #15172b;\n  border-radius: 12px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  box-sizing: border-box;\n}\n\n.activity-form:hover {\n  transform: translateY(-5px);\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  font-size: 28px;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  display: block;\n}\n\n.form-input, .form-textarea {\n  padding: 12px;\n  border: 2px solid #ced4da;\n  border-radius: 8px;\n  font-size: 16px;\n  width: 100%;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.form-input:focus, .form-textarea:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);\n  outline: none;\n}\n\n.form-textarea {\n  height: 120px;\n  resize: none;\n}\n\n.submit-button {\n  padding: 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  font-family: 'Poppins', sans-serif;\n  transition: background-color 0.3s ease, transform 0.2s;\n}\n\n.submit-button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\n.status-message {\n  text-align: center;\n  margin-top: 20px;\n  color: #28a745;\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n}\n\n.form-input, .form-textarea, .submit-button {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.form-group {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}