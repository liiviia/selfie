{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"activity-list\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"activity-items\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-activities\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Lista delle Attività\", -1 /* HOISTED */)), $data.activities.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.activities, (activity, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"activity-item\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(activity.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(activity.description), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Scadenza:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate(activity.deadline)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Autore:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(activity.author), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Completata:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(activity.completed ? 'Sì' : 'No'), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Non ci sono attività da visualizzare.\"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","activities","length","_hoisted_2","_Fragment","_renderList","activity","index","_toDisplayString","title","description","_createTextVNode","$options","formatDate","deadline","author","completed","_hoisted_3"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/ActivitiesPage.vue"],"sourcesContent":["<template>\n  <div class=\"activity-list\">\n    <h1>Lista delle Attività</h1>\n    \n    <ul v-if=\"activities.length > 0\" class=\"activity-items\">\n      <li v-for=\"(activity, index) in activities\" :key=\"index\" class=\"activity-item\">\n        <h3>{{ activity.title }}</h3>\n        <p>{{ activity.description }}</p>\n        <p><strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}</p>\n        <p><strong>Autore:</strong> {{ activity.author }}</p>\n        <p><strong>Completata:</strong> {{ activity.completed ? 'Sì' : 'No' }}</p>\n      </li>\n    </ul>\n    \n    <p v-else class=\"no-activities\">Non ci sono attività da visualizzare.</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      activities: []\n    };\n  },\n  methods: {\n    async fetchActivities() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username'); \n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username }\n        });\n        this.activities = response.data;\n      } catch (error) {\n        console.error('Errore durante il recupero delle attività:', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  },\n  mounted() {\n    this.fetchActivities();\n  }\n};\n</script>\n\n<style scoped>\n.activity-list {\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #343a40;\n}\n\n.activity-items {\n  list-style-type: none;\n  padding: 0;\n}\n\n.activity-item {\n  padding: 15px;\n  margin-bottom: 10px;\n  background-color: #ffffff;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  transition: box-shadow 0.3s;\n}\n\n.activity-item:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n.no-activities {\n  text-align: center;\n  color: #6c757d;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAD5BC,GAAA;EAIqCD,KAAK,EAAC;;;EAJ3CC,GAAA;EAccD,KAAK,EAAC;;;uBAblBE,mBAAA,CAcM,OAdNC,UAcM,G,0BAbJC,mBAAA,CAA6B,YAAzB,sBAAoB,sBAEdC,KAAA,CAAAC,UAAU,CAACC,MAAM,Q,cAA3BL,mBAAA,CAQK,MARLM,UAQK,I,kBAPHN,mBAAA,CAMKO,SAAA,QAXXC,WAAA,CAKsCL,KAAA,CAAAC,UAAU,EALhD,CAKkBK,QAAQ,EAAEC,KAAK;yBAA3BV,mBAAA,CAMK;MANwCD,GAAG,EAAEW,KAAK;MAAEZ,KAAK,EAAC;QAC7DI,mBAAA,CAA6B,YAAAS,gBAAA,CAAtBF,QAAQ,CAACG,KAAK,kBACrBV,mBAAA,CAAiC,WAAAS,gBAAA,CAA3BF,QAAQ,CAACI,WAAW,kBAC1BX,mBAAA,CAAqE,Y,0BAAlEA,mBAAA,CAA0B,gBAAlB,WAAS,sBAR5BY,gBAAA,CAQqC,GAAC,GAAAH,gBAAA,CAAGI,QAAA,CAAAC,UAAU,CAACP,QAAQ,CAACQ,QAAQ,kB,GAC7Df,mBAAA,CAAqD,Y,0BAAlDA,mBAAA,CAAwB,gBAAhB,SAAO,sBAT1BY,gBAAA,CASmC,GAAC,GAAAH,gBAAA,CAAGF,QAAQ,CAACS,MAAM,iB,GAC9ChB,mBAAA,CAA0E,Y,0BAAvEA,mBAAA,CAA4B,gBAApB,aAAW,sBAV9BY,gBAAA,CAUuC,GAAC,GAAAH,gBAAA,CAAGF,QAAQ,CAACU,SAAS,+B;qDAIzDnB,mBAAA,CAAyE,KAAzEoB,UAAyE,EAAzC,uCAAqC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}