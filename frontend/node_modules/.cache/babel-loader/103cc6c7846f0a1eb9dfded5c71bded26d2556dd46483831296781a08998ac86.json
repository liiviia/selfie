{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, \"Eventi e Attività per \" + _toDisplayString($setup.formatDate($setup.queryDate)), 1 /* TEXT */), $setup.events.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"Eventi:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.events, event => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: event._id\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(event.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(event.date)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(event.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $setup.activities.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Attività:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.activities, activity => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: activity._id\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(activity.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(activity.deadline || activity.date)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(activity.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $setup.events.length === 0 && $setup.activities.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"Nessun evento o attività per questa data.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_toDisplayString","$setup","formatDate","queryDate","events","length","_hoisted_1","_Fragment","_renderList","event","_id","title","date","description","_createCommentVNode","activities","_hoisted_2","activity","deadline","_hoisted_3","_cache"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Eventi e Attività per {{ formatDate(queryDate) }}</h2>\n      <div v-if=\"events.length > 0\">\n        <h3>Eventi:</h3>\n        <div v-for=\"event in events\" :key=\"event._id\">\n          <h4>{{ event.title }}</h4>\n          <p>Data: {{ formatDate(event.date) }}</p>\n          <p>Descrizione: {{ event.description }}</p>\n        </div>\n      </div>\n      <div v-if=\"activities.length > 0\">\n        <h3>Attività:</h3>\n        <div v-for=\"activity in activities\" :key=\"activity._id\">\n          <h4>{{ activity.title }}</h4>\n          <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n          <p>Descrizione: {{ activity.description }}</p>\n        </div>\n      </div>\n      <div v-if=\"events.length === 0 && activities.length === 0\">\n        <p>Nessun evento o attività per questa data.</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, onMounted, computed } from 'vue';\n  import { useRoute } from 'vue-router';\n  import axios from 'axios';\n  \n  export default {\n    setup() {\n      const route = useRoute();\n      const events = ref([]);\n      const activities = ref([]);\n      const queryDate = computed(() => route.query.date);\n  \n      const fetchEvents = async () => {\n    try {\n      const { author, date } = route.query;\n      const token = sessionStorage.getItem('token');\n      console.log('Fetching events for:', author, date);\n      const response = await axios.get('/api/events/by-date', {\n        headers: { Authorization: `Bearer ${token}` },\n        params: { author, date }\n      });\n      events.value = Array.isArray(response.data) ? response.data : [response.data];\n      console.log('Fetched events:', events.value);\n  \n      const activityResponse = await axios.get('/api/activities/by-date', {\n        headers: { Authorization: `Bearer ${token}` },\n        params: { author, date }\n      });\n      activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n      console.log('Fetched activities:', activities.value);\n  \n      activities.value.forEach(activity => {\n        if (activity.deadline) {\n          const parsedDate = new Date(activity.deadline);\n          if (isNaN(parsedDate)) {\n            console.error('Data non valida per l\\'attività:', activity);\n          } else {\n            activity.date = parsedDate; \n          }\n        } else {\n          console.error('Attività senza data di scadenza:', activity);\n        }\n      });\n    } catch (error) {\n      console.error('Errore nel recupero degli eventi e delle attività:', error);\n    }\n  };\n  \n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data non disponibile';\n    const date = new Date(dateString);\n    return date instanceof Date && !isNaN(date) \n      ? date.toLocaleDateString('it-IT', { \n          year: 'numeric', \n          month: 'long', \n          day: 'numeric' \n        }) \n      : 'Data non valida';\n  };\n  \n      onMounted(fetchEvents);\n  \n      return { events,activities, formatDate, queryDate };\n    }\n  }\n  </script>"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAqBM,cApBJC,mBAAA,CAA0D,YAAtD,wBAAsB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACD,MAAA,CAAAE,SAAS,mBACtCF,MAAA,CAAAG,MAAM,CAACC,MAAM,Q,cAAxBP,mBAAA,CAOM,OAVZQ,UAAA,G,0BAIQP,mBAAA,CAAgB,YAAZ,SAAO,uB,kBACXD,mBAAA,CAIMS,SAAA,QATdC,WAAA,CAK6BP,MAAA,CAAAG,MAAM,EAAfK,KAAK;yBAAjBX,mBAAA,CAIM;MAJwBD,GAAG,EAAEY,KAAK,CAACC;QACvCX,mBAAA,CAA0B,YAAAC,gBAAA,CAAnBS,KAAK,CAACE,KAAK,kBAClBZ,mBAAA,CAAyC,WAAtC,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACO,KAAK,CAACG,IAAI,mBACjCb,mBAAA,CAA2C,WAAxC,eAAa,GAAAC,gBAAA,CAAGS,KAAK,CAACI,WAAW,iB;sCAR9CC,mBAAA,gBAWiBb,MAAA,CAAAc,UAAU,CAACV,MAAM,Q,cAA5BP,mBAAA,CAOM,OAlBZkB,UAAA,G,0BAYQjB,mBAAA,CAAkB,YAAd,WAAS,uB,kBACbD,mBAAA,CAIMS,SAAA,QAjBdC,WAAA,CAagCP,MAAA,CAAAc,UAAU,EAAtBE,QAAQ;yBAApBnB,mBAAA,CAIM;MAJ+BD,GAAG,EAAEoB,QAAQ,CAACP;QACjDX,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBiB,QAAQ,CAACN,KAAK,kBACrBZ,mBAAA,CAAiE,WAA9D,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACe,QAAQ,CAACC,QAAQ,IAAID,QAAQ,CAACL,IAAI,mBACzDb,mBAAA,CAA8C,WAA3C,eAAa,GAAAC,gBAAA,CAAGiB,QAAQ,CAACJ,WAAW,iB;sCAhBjDC,mBAAA,gBAmBiBb,MAAA,CAAAG,MAAM,CAACC,MAAM,UAAUJ,MAAA,CAAAc,UAAU,CAACV,MAAM,U,cAAnDP,mBAAA,CAEM,OArBZqB,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAoBQrB,mBAAA,CAAgD,WAA7C,2CAAyC,oB,MApBpDe,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}