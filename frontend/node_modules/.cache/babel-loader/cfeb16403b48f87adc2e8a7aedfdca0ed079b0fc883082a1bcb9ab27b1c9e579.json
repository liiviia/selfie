{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_3 = {\n  class: \"calendar-body\"\n};\nconst _hoisted_4 = {\n  class: \"weekdays\"\n};\nconst _hoisted_5 = {\n  class: \"days\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"day-content\"\n};\nconst _hoisted_8 = {\n  class: \"day-number\"\n};\nconst _hoisted_9 = {\n  class: \"indicators\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"event-indicator\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"activity-indicator\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.prevMonth && $setup.prevMonth(...args))\n  }, \"<\"), _createElementVNode(\"h2\", null, _toDisplayString($setup.currentMonthYear), 1), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.nextMonth && $setup.nextMonth(...args))\n  }, \">\")]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.weekdays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day\n    }, _toDisplayString(day), 1);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.calendarDays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day.date,\n      class: _normalizeClass({\n        'current-month': day.currentMonth,\n        'other-month': !day.currentMonth,\n        'today': day.isToday,\n        'has-events': day.hasEvents,\n        'has-activities': day.hasActivities\n      }),\n      onClick: $event => $setup.selectDate(day)\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(day.dayOfMonth), 1), _createElementVNode(\"div\", _hoisted_9, [day.hasEvents ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"Hai un evento\")) : _createCommentVNode(\"\", true), day.hasActivities ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"Hai un'attività\")) : _createCommentVNode(\"\", true)])])], 10, _hoisted_6);\n  }), 128))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","prevMonth","_toDisplayString","currentMonthYear","nextMonth","_hoisted_3","_hoisted_4","_Fragment","_renderList","weekdays","day","_hoisted_5","calendarDays","date","_normalizeClass","currentMonth","isToday","hasEvents","hasActivities","$event","selectDate","_hoisted_7","_hoisted_8","dayOfMonth","_hoisted_9","_hoisted_10","_createCommentVNode","_hoisted_11","_hoisted_6"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/calendarEvent.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button @click=\"prevMonth\">&lt;</button>\n      <h2>{{ currentMonthYear }}</h2>\n      <button @click=\"nextMonth\">&gt;</button>\n    </div>\n    <div class=\"calendar-body\">\n      <div class=\"weekdays\">\n        <div v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\n      </div>\n      <div class=\"days\">\n        <div \n          v-for=\"day in calendarDays\" \n          :key=\"day.date\" \n          :class=\"{ 'current-month': day.currentMonth, 'other-month': !day.currentMonth, 'today': day.isToday, 'has-events': day.hasEvents, 'has-activities': day.hasActivities }\"\n          @click=\"selectDate(day)\"\n        >\n          <div class=\"day-content\">\n            <span class=\"day-number\">{{ day.dayOfMonth }}</span>\n            <div class=\"indicators\">\n              <div v-if=\"day.hasEvents\" class=\"event-indicator\">Hai un evento</div>\n              <div v-if=\"day.hasActivities\" class=\"activity-indicator\">Hai un'attività</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  setup() {\n    const router = useRouter();\n\n    const currentDate = ref(new Date());\n    const weekdays = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\n    const eventsMap = ref({});\n    const activityMap = ref({});\n    const calendarDays = ref([]);\n\n    const currentMonthYear = computed(() => {\n      return currentDate.value.toLocaleString('it-IT', { month: 'long', year: 'numeric' });\n    });\n\n    // Funzione per formattare la data in formato \"YYYY-MM-DD\" locale\n    function formatDateToLocal(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // I mesi sono indicizzati da 0, quindi aggiungi 1\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n\n    function createDayObject(date, currentMonth, today) {\n      const localDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n      const dateString = formatDateToLocal(localDate); // Usa la funzione per formattare la data localmente\n      return {\n        date: localDate,\n        dayOfMonth: localDate.getDate(),\n        currentMonth: currentMonth,\n        isToday: localDate.toDateString() === today.toDateString(),\n        hasEvents: eventsMap.value[dateString] || false,\n        hasActivities: activityMap.value[dateString] || false\n      };\n    }\n\n    function updateCalendarDays() {\n      const year = currentDate.value.getFullYear();\n      const month = currentDate.value.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const calendarArray = [];\n      const today = new Date();\n\n      // Giorni del mese precedente\n      for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n        const day = new Date(year, month, -i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      // Giorni del mese corrente\n      for (let i = 1; i <= daysInMonth; i++) {\n        const day = new Date(year, month, i);\n        calendarArray.push(createDayObject(day, true, today));\n      }\n\n      // Giorni del mese successivo\n      const remainingDays = 42 - calendarArray.length;\n      for (let i = 1; i <= remainingDays; i++) {\n        const day = new Date(year, month + 1, i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      calendarDays.value = calendarArray;\n    }\n\n    async function fetchEvents() {\n      try {\n        const username = localStorage.getItem('username');\n        const token = sessionStorage.getItem('token');\n        if (!username || !token) {\n          console.error('Username o token mancante. L\\'utente potrebbe non essere autenticato.');\n          return;\n        }\n\n        const response = await axios.get(`/api/eventsGET`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n        const events = response.data;\n\n\n        const activityResponse = await axios.get(`/api/activitiesGET`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n        const activities = activityResponse.data;\n        // Resetta eventsMap\n        eventsMap.value = {};\n        activityMap.value = {};\n\n        // Popola eventsMap\n        events.forEach(event => {\n          const eventDate = new Date(event.date);\n          const dateString = formatDateToLocal(eventDate); // Formatta la data in formato locale\n          eventsMap.value[dateString] = true;\n        });\n\n        activities.forEach(activity => {\n          const activityDate = new Date(activity.deadline);\n          const dateString = formatDateToLocal(activityDate); // Formatta la data in formato locale\n          activityMap.value[dateString] = true;\n        });\n\n        updateCalendarDays();\n      } catch (error) {\n        if (error.response) {\n          console.error('Errore nella risposta del server:', error.response.status, error.response.data);\n        } else if (error.request) {\n          console.error('Nessuna risposta ricevuta dal server:', error.request);\n        } else {\n          console.error('Errore durante l\\'impostazione della richiesta:', error.message);\n        }\n      }\n    }\n\n    function prevMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() - 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function nextMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() + 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function selectDate(day) {\n      const username = localStorage.getItem('username');\n      const dateString = formatDateToLocal(day.date); \n      console.log(\"dateString\", dateString);\n      router.push({\n        name: 'eventDayCalendar',\n        query: { author: username,\n           date: dateString }\n      });\n    }\n\n    onMounted(async () => {\n      await fetchEvents();\n      updateCalendarDays();\n    });\n\n    watch(currentDate, async () => {\n      await fetchEvents();\n      updateCalendarDays();\n    });\n\n    return {\n      currentDate,\n      weekdays,\n      currentMonthYear,\n      calendarDays,\n      prevMonth,\n      nextMonth,\n      selectDate\n    };\n  }\n};\n</script>\n\n<style scoped>\n.calendar {\n  max-width: 800px;\n  margin: 0 auto;\n  font-family: Arial, sans-serif;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.calendar-header button {\n  background-color: #f0f0f0;\n  border: none;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.weekdays, .days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px;\n}\n\n.weekdays div {\n  background-color: #f0f0f0;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n}\n\n.days div {\n  border: 1px solid #ddd;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n  height: 100px;\n}\n\n.day-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n}\n\n.day-number {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.indicators {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.event-indicator, .activity-indicator {\n  font-size: 0.7em;\n  padding: 2px;\n  border-radius: 3px;\n}\n\n.event-indicator {\n  background-color: #e6f2ff;\n  color: #007bff;\n}\n\n.activity-indicator {\n  background-color: #fff5e6;\n  color: #ffa500;\n}\n\n.other-month {\n  color: #ccc;\n}\n\n.today {\n  background-color: #e6f2ff;\n  font-weight: bold;\n}\n\n.days div:hover {\n  background-color: #f0f0f0;\n}\n\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAU;;EAGhBA,KAAK,EAAC;AAAM;mBAXvB;;EAkBeA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAY;;EApBnCC,GAAA;EAqBwCD,KAAK,EAAC;;;EArB9CC,GAAA;EAsB4CD,KAAK,EAAC;;;uBArBhDE,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,mBAAA,CAIM,OAJNC,UAIM,GAHJD,mBAAA,CAAwC;IAA/BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,SAAA,IAAAD,MAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,GAAI,GAC/BJ,mBAAA,CAA+B,YAAAO,gBAAA,CAAxBF,MAAA,CAAAG,gBAAgB,OACvBR,mBAAA,CAAwC;IAA/BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAI,SAAA,IAAAJ,MAAA,CAAAI,SAAA,IAAAL,IAAA,CAAS;KAAE,GAAI,E,GAEjCJ,mBAAA,CAoBM,OApBNU,UAoBM,GAnBJV,mBAAA,CAEM,OAFNW,UAEM,I,kBADJb,mBAAA,CAAuDc,SAAA,QAT/DC,WAAA,CAS2BR,MAAA,CAAAS,QAAQ,EAAfC,GAAG;yBAAfjB,mBAAA,CAAuD;MAAzBD,GAAG,EAAEkB;IAAG,GAAAR,gBAAA,CAAKQ,GAAG;eAEhDf,mBAAA,CAeM,OAfNgB,UAeM,I,kBAdJlB,mBAAA,CAaMc,SAAA,QAzBdC,WAAA,CAawBR,MAAA,CAAAY,YAAY,EAAnBF,GAAG;yBADZjB,mBAAA,CAaM;MAXHD,GAAG,EAAEkB,GAAG,CAACG,IAAI;MACbtB,KAAK,EAfhBuB,eAAA;QAAA,iBAeqCJ,GAAG,CAACK,YAAY;QAAA,gBAAkBL,GAAG,CAACK,YAAY;QAAA,SAAWL,GAAG,CAACM,OAAO;QAAA,cAAgBN,GAAG,CAACO,SAAS;QAAA,kBAAoBP,GAAG,CAACQ;MAAa;MACpKrB,OAAK,EAAAsB,MAAA,IAAEnB,MAAA,CAAAoB,UAAU,CAACV,GAAG;QAEtBf,mBAAA,CAMM,OANN0B,UAMM,GALJ1B,mBAAA,CAAoD,QAApD2B,UAAoD,EAAApB,gBAAA,CAAxBQ,GAAG,CAACa,UAAU,OAC1C5B,mBAAA,CAGM,OAHN6B,UAGM,GAFOd,GAAG,CAACO,SAAS,I,cAAxBxB,mBAAA,CAAqE,OAArEgC,WAAqE,EAAnB,eAAa,KArB7EC,mBAAA,YAsByBhB,GAAG,CAACQ,aAAa,I,cAA5BzB,mBAAA,CAA8E,OAA9EkC,WAA8E,EAArB,iBAAe,KAtBtFD,mBAAA,W,UAAAE,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}