{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport io from 'socket.io-client';\nexport default {\n  data() {\n    return {\n      // Lista per memorizzare gli alert ricevuti\n      alerts: [],\n      socket: null\n    };\n  },\n  created() {\n    // Connessione al server WebSocket\n    this.socket = io('http://localhost:3000', {\n      transports: ['websocket'] // Usa solo WebSocket\n    });\n    this.socket.on('connect_error', error => {\n      console.log('Errore di connessione:', error);\n    });\n\n    // Ascolta l'evento 'alert' inviato dal backend\n    this.socket.on('alert', data => {\n      console.log('Alert ricevuto:', data);\n      // Aggiungi l'alert alla lista degli alert\n      this.alerts.push(data);\n\n      // Mostra la notifica di sistema, se il permesso è stato concesso\n      if ('Notification' in window && Notification.permission === 'granted') {\n        new Notification(data.title, {\n          body: `Data: ${data.date} alle ${data.startTime}`\n        });\n      } else if ('Notification' in window) {\n        // Se il permesso non è stato ancora concesso, chiedilo\n        Notification.requestPermission().then(permission => {\n          if (permission === 'granted') {\n            new Notification(data.title, {\n              body: `Data: ${data.date} alle ${data.startTime}`\n            });\n          }\n        });\n      }\n    });\n    this.socket.on('connect', () => {\n      console.log('Connesso al server WebSocket');\n    });\n  },\n  unmounted() {\n    // Assicurati di chiudere la connessione WebSocket quando il componente viene distrutto\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["io","data","alerts","socket","created","transports","on","error","console","log","push","window","Notification","permission","title","body","date","startTime","requestPermission","then","unmounted","disconnect"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Notifiche</h2>\n      <!-- Lista di alert ricevuti -->\n      <ul>\n        <li v-for=\"alert in alerts\" :key=\"alert.title\">\n          <strong>{{ alert.title }}</strong> - {{ alert.date }} at {{ alert.startTime }}\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  import io from 'socket.io-client';\n  \n  export default {\n    data() {\n      return {\n        // Lista per memorizzare gli alert ricevuti\n        alerts: [],\n        socket: null,\n      };\n    },\n    created() {\n      // Connessione al server WebSocket\n      this.socket = io('http://localhost:3000', {\n        transports: ['websocket'], // Usa solo WebSocket\n      });\n  \n      this.socket.on('connect_error', (error) => {\n        console.log('Errore di connessione:', error);\n      });\n  \n      // Ascolta l'evento 'alert' inviato dal backend\n      this.socket.on('alert', (data) => {\n        console.log('Alert ricevuto:', data);\n        // Aggiungi l'alert alla lista degli alert\n        this.alerts.push(data);\n  \n        // Mostra la notifica di sistema, se il permesso è stato concesso\n        if ('Notification' in window && Notification.permission === 'granted') {\n          new Notification(data.title, {\n            body: `Data: ${data.date} alle ${data.startTime}`,\n          });\n        } else if ('Notification' in window) {\n          // Se il permesso non è stato ancora concesso, chiedilo\n          Notification.requestPermission().then(permission => {\n            if (permission === 'granted') {\n              new Notification(data.title, {\n                body: `Data: ${data.date} alle ${data.startTime}`,\n              });\n            }\n          });\n        }\n      });\n  \n      this.socket.on('connect', () => {\n        console.log('Connesso al server WebSocket');\n      });\n    },\n    unmounted() {\n      // Assicurati di chiudere la connessione WebSocket quando il componente viene distrutto\n      if (this.socket) {\n        this.socket.disconnect();\n      }\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Puoi aggiungere degli stili per gli alert */\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    margin-bottom: 10px;\n  }\n  strong {\n    color: #333;\n  }\n  </style>\n  "],"mappings":";AAaE,OAAOA,EAAC,MAAO,kBAAkB;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACD,MAAK,GAAIH,EAAE,CAAC,uBAAuB,EAAE;MACxCK,UAAU,EAAE,CAAC,WAAW,CAAC,CAAE;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACF,MAAM,CAACG,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;MACzCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACA,IAAI,CAACJ,MAAM,CAACG,EAAE,CAAC,OAAO,EAAGL,IAAI,IAAK;MAChCO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,IAAI,CAAC;MACpC;MACA,IAAI,CAACC,MAAM,CAACQ,IAAI,CAACT,IAAI,CAAC;;MAEtB;MACA,IAAI,cAAa,IAAKU,MAAK,IAAKC,YAAY,CAACC,UAAS,KAAM,SAAS,EAAE;QACrE,IAAID,YAAY,CAACX,IAAI,CAACa,KAAK,EAAE;UAC3BC,IAAI,EAAE,SAASd,IAAI,CAACe,IAAI,SAASf,IAAI,CAACgB,SAAS;QACjD,CAAC,CAAC;MACJ,OAAO,IAAI,cAAa,IAAKN,MAAM,EAAE;QACnC;QACAC,YAAY,CAACM,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAACN,UAAS,IAAK;UAClD,IAAIA,UAAS,KAAM,SAAS,EAAE;YAC5B,IAAID,YAAY,CAACX,IAAI,CAACa,KAAK,EAAE;cAC3BC,IAAI,EAAE,SAASd,IAAI,CAACe,IAAI,SAASf,IAAI,CAACgB,SAAS;YACjD,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,IAAI,CAACd,MAAM,CAACG,EAAE,CAAC,SAAS,EAAE,MAAM;MAC9BE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC;EACDW,SAASA,CAAA,EAAG;IACV;IACA,IAAI,IAAI,CAACjB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACkB,UAAU,CAAC,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}