{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      activities: []\n    };\n  },\n  methods: {\n    async fetchActivities() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        this.activities = response.data;\n      } catch (error) {\n        console.error('Errore durante il recupero delle attività:', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  },\n  mounted() {\n    this.fetchActivities();\n  }\n};","map":{"version":3,"names":["axios","data","activities","methods","fetchActivities","token","sessionStorage","getItem","username","localStorage","response","get","headers","Authorization","params","error","console","formatDate","date","Date","toLocaleDateString","mounted"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/ActivitiesPage.vue"],"sourcesContent":["<template>\n  <div class=\"activity-list\">\n    <h1>Lista delle Attività</h1>\n    \n    <ul v-if=\"activities.length > 0\" class=\"activity-items\">\n      <li v-for=\"(activity, index) in activities\" :key=\"index\" class=\"activity-item\">\n        <h3>{{ activity.title }}</h3>\n        <p>{{ activity.description }}</p>\n        <p><strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}</p>\n        <p><strong>Autore:</strong> {{ activity.author }}</p>\n        <p><strong>Completata:</strong> {{ activity.completed ? 'Sì' : 'No' }}</p>\n      </li>\n    </ul>\n    \n    <p v-else class=\"no-activities\">Non ci sono attività da visualizzare.</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      activities: []\n    };\n  },\n  methods: {\n    async fetchActivities() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username'); \n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username }\n        });\n        this.activities = response.data;\n      } catch (error) {\n        console.error('Errore durante il recupero delle attività:', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  },\n  mounted() {\n    this.fetchActivities();\n  }\n};\n</script>\n\n<style scoped>\n.activity-list {\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #343a40;\n}\n\n.activity-items {\n  list-style-type: none;\n  padding: 0;\n}\n\n.activity-item {\n  padding: 15px;\n  margin-bottom: 10px;\n  background-color: #ffffff;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  transition: box-shadow 0.3s;\n}\n\n.activity-item:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n.no-activities {\n  text-align: center;\n  color: #6c757d;\n}\n</style>\n"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMG,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,oBAAoB,EAAE;UACrDC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK;UAChC,CAAC;UACDS,MAAM,EAAE;YAAEN,QAAQ,EAAEA;UAAS;QAC/B,CAAC,CAAC;QACF,IAAI,CAACN,UAAS,GAAIQ,QAAQ,CAACT,IAAI;MACjC,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IACDE,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,CAAC;IAC5C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjB,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}