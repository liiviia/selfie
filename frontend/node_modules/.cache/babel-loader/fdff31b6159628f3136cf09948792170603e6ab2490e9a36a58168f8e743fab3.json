{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-principale\"\n};\nconst _hoisted_2 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-6 content-container\"\n};\nconst _hoisted_5 = {\n  id: \"carouselExampleIndicators\",\n  class: \"carousel slide\",\n  \"data-bs-ride\": \"carousel\"\n};\nconst _hoisted_6 = {\n  class: \"carousel-inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CarouselItem = _resolveComponent(\"CarouselItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"col-md-6 image-container\"\n  }, [_createElementVNode(\"img\", {\n    class: \"img-fluid\",\n    src: \"https://images.hdqwalls.com/wallpapers/abstract-shapes-4k-q2.jpg\",\n    alt: \"Immagine Home\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_CarouselItem, {\n    title: \"Evento\",\n    isCurrentDay: $data.isCurrentDay,\n    noMessage: $data.noEventsMessage,\n    itemTitle: $data.lastEventTitle,\n    itemDescription: $data.lastEventDescription,\n    itemDate: $data.lastEventDate,\n    onGetCurrentDay: $options.getCurrentDayEvents,\n    onGetLastItem: $options.getLastEvent\n  }, null, 8 /* PROPS */, [\"isCurrentDay\", \"noMessage\", \"itemTitle\", \"itemDescription\", \"itemDate\", \"onGetCurrentDay\", \"onGetLastItem\"]), _createVNode(_component_CarouselItem, {\n    title: \"Attività\",\n    isCurrentDay: $data.isCurrentDayActivity,\n    noMessage: $data.noActivitiesMessage,\n    itemTitle: $data.lastActivityTitle,\n    itemDescription: $data.lastActivityDescription,\n    itemDate: $data.lastActivityDeadline,\n    onGetCurrentDay: $options.getCurrentDayActivities,\n    onGetLastItem: $options.getLastActivity\n  }, null, 8 /* PROPS */, [\"isCurrentDay\", \"noMessage\", \"itemTitle\", \"itemDescription\", \"itemDate\", \"onGetCurrentDay\", \"onGetLastItem\"]), _createVNode(_component_CarouselItem, {\n    title: \"Nota\",\n    noMessage: $data.noNotesMessage,\n    itemTitle: $data.lastNoteHeading,\n    itemDescription: $data.lastNoteAuthor\n  }, null, 8 /* PROPS */, [\"noMessage\", \"itemTitle\", \"itemDescription\"]), _createVNode(_component_CarouselItem, {\n    title: \"Pomodoro\",\n    noMessage: $data.noPomodorosMessage,\n    itemTitle: 'Tempo studio: ' + $data.lastPomodoroTempoStudio,\n    itemDescription: 'Tempo pausa: ' + $data.lastPomodoroTempoPausa,\n    itemDate: 'Ripetizioni: ' + $data.lastPomodoroRipetizioni\n  }, null, 8 /* PROPS */, [\"noMessage\", \"itemTitle\", \"itemDescription\", \"itemDate\"])]), _cache[0] || (_cache[0] = _createStaticVNode(\"<button class=\\\"carousel-control-prev\\\" type=\\\"button\\\" data-bs-target=\\\"#carouselExampleIndicators\\\" data-bs-slide=\\\"prev\\\" data-v-9ac63c20><span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\" data-v-9ac63c20></span><span class=\\\"visually-hidden\\\" data-v-9ac63c20>Previous</span></button><button class=\\\"carousel-control-next\\\" type=\\\"button\\\" data-bs-target=\\\"#carouselExampleIndicators\\\" data-bs-slide=\\\"next\\\" data-v-9ac63c20><span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\" data-v-9ac63c20></span><span class=\\\"visually-hidden\\\" data-v-9ac63c20>Next</span></button>\", 2))])])])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","alt","_hoisted_4","_hoisted_5","_hoisted_6","_createVNode","_component_CarouselItem","title","isCurrentDay","$data","noMessage","noEventsMessage","itemTitle","lastEventTitle","itemDescription","lastEventDescription","itemDate","lastEventDate","onGetCurrentDay","$options","getCurrentDayEvents","onGetLastItem","getLastEvent","isCurrentDayActivity","noActivitiesMessage","lastActivityTitle","lastActivityDescription","lastActivityDeadline","getCurrentDayActivities","getLastActivity","noNotesMessage","lastNoteHeading","lastNoteAuthor","noPomodorosMessage","lastPomodoroTempoStudio","lastPomodoroTempoPausa","lastPomodoroRipetizioni","_createStaticVNode"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/HomePrincipale.vue"],"sourcesContent":["<template>\n  <div class=\"home-principale\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-6 image-container\">\n          <img class=\"img-fluid\" src=\"https://images.hdqwalls.com/wallpapers/abstract-shapes-4k-q2.jpg\" alt=\"Immagine Home\">\n        </div>\n        <div class=\"col-md-6 content-container\">\n          <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-inner\">\n              <CarouselItem title=\"Evento\" :isCurrentDay=\"isCurrentDay\" :noMessage=\"noEventsMessage\"\n                            :itemTitle=\"lastEventTitle\" :itemDescription=\"lastEventDescription\" :itemDate=\"lastEventDate\"\n                            @getCurrentDay=\"getCurrentDayEvents\" @getLastItem=\"getLastEvent\" />\n              \n              <CarouselItem title=\"Attività\" :isCurrentDay=\"isCurrentDayActivity\" :noMessage=\"noActivitiesMessage\"\n                            :itemTitle=\"lastActivityTitle\" :itemDescription=\"lastActivityDescription\" :itemDate=\"lastActivityDeadline\"\n                            @getCurrentDay=\"getCurrentDayActivities\" @getLastItem=\"getLastActivity\" />\n              \n              <CarouselItem title=\"Nota\" :noMessage=\"noNotesMessage\"\n                            :itemTitle=\"lastNoteHeading\" :itemDescription=\"lastNoteAuthor\" />\n              \n              <CarouselItem title=\"Pomodoro\" :noMessage=\"noPomodorosMessage\"\n                            :itemTitle=\"'Tempo studio: ' + lastPomodoroTempoStudio\"\n                            :itemDescription=\"'Tempo pausa: ' + lastPomodoroTempoPausa\"\n                            :itemDate=\"'Ripetizioni: ' + lastPomodoroRipetizioni\" />\n            </div>\n            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n/* import NavigationBar from '../components/NavigationBar.vue';\n */\nimport axios from 'axios';\n\nexport default {\n  name: 'HomePrincipale',\n  /* components: {\n    NavigationBar,\n  }, */\n  data() {\n    return {\n      username: localStorage.getItem('username') || 'Guest',\n      lastEventTitle: '',\n      lastEventDescription: '',\n      lastEventDate: '',\n      lastActivityTitle: '',\n      lastActivityDescription: '',\n      lastActivityDeadline: '',\n      lastNoteHeading: '',\n      lastNoteAuthor: '',\n      noEventsMessage: '' ,\n      noActivitiesMessage: '',\n      noNotesMessage: '',\n      noPomodorosMessage: '',\n      lastPomodoroTempoStudio: '',\n      lastPomodoroTempoPausa: '',\n      lastPomodoroRipetizioni: '',\n      currentEventTitle: '',\n      currentEventDescription: '',\n      currentEventDate: '',\n      currentActivityTitle: '',\n      currentActivityDescription: '',\n      currentActivityDeadline: '',\n      isCurrentDay: false,\n      isCurrentDayActivity: false\n    };\n  },\n  mounted() {\n    this.getLastEvent();\n    this.getLastActivity();\n    this.getLastNote();\n    this.getLastPomodoro();\n  },\n  methods: {\n    async getLastEvent() {\n      try {\n        const token = sessionStorage.getItem('token');\n        console.log(\"token home \", token);\n        const response = await axios.get('/api/events/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n        if (response.data) {\n          this.lastEventTitle = response.data.title || 'Nessun evento';\n          this.lastEventDescription = response.data.description || 'Nessuna descrizione';\n          this.lastEventDate = response.data.date || 'Nessuna data';\n        } else {\n          this.noEventsMessage = 'Nessun evento trovato.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo evento:', error);\n        this.noEventsMessage = 'Errore nel caricamento dell\\'ultimo evento.';\n      }\n    },\n\n    logout() {\n      localStorage.clear();\n      this.$router.push('/');\n    },\n\n\n    async getLastActivity() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastActivityTitle = response.data.title;\n          this.lastActivityDescription = response.data.description;\n          this.lastActivityDeadline = new Date(response.data.deadline).toLocaleDateString();\n          this.noActivitiesMessage = '';\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n        }\n\n      } catch (error) {\n        console.error('Errore nel recupero delle attività:', error);\n      }\n    },\n    async getLastNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data) {\n          this.lastNoteHeading = response.data.heading;\n          this.lastNoteAuthor = response.data.author;\n          this.noNotesMessage = '';\n        } else {\n          this.noNotesMessage = 'Non ci sono note trovate';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultima nota:', error);\n        this.noNotesMessage = 'Errore nel caricamento dell\\'ultima nota.';\n      }\n    },\n    async getLastPomodoro() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastPomodoroTempoStudio = response.data.tempoStudio;\n          this.lastPomodoroTempoPausa = response.data.tempoPausa;\n          this.lastPomodoroRipetizioni = response.data.ripetizioni;\n          this.noPomodorosMessage = '';\n        } else {\n          this.noPomodorosMessage = 'Nessun pomodoro trovato';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo pomodoro:', error);\n        this.noPomodorosMessage = 'Errore nel caricamento dell\\'ultimo pomodoro.';\n      }\n    },\n    async getCurrentDayEvents() {\n  try { \n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const response = await axios.get('/api/events/current-day', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });     \n\n    if (response.data && response.data.length > 0) {\n      // Assumiamo che la risposta sia un array di eventi\n      const event = response.data[0]; // Prendiamo il primo evento\n      this.lastEventTitle = event.title;\n      this.lastEventDescription = event.description;\n      this.lastEventDate = new Date(event.date).toLocaleDateString();\n      this.noEventsMessage = '';\n      this.isCurrentDay = true;\n      // Puliamo il messaggio di errore\n    } else {\n      this.noEventsMessage = 'Non ci sono eventi imminenti';\n      this.lastEventTitle = '';\n      this.lastEventDescription = '';\n      this.lastEventDate = '';\n    }\n    console.log(\"eventi del giorno corrente\", response.data);\n  } catch (error) { \n    console.error('Errore nel recupero degli eventi del giorno corrente:', error);\n    this.noEventsMessage = 'Errore nel caricamento degli eventi del giorno corrente.';\n    this.lastEventTitle = '';\n    this.lastEventDescription = '';\n    this.lastEventDate = '';\n  }\n},\nasync getCurrentDayActivities() {\n  try {\n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const response = await axios.get('/api/activities/current-day', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n\n    if (response.data && response.data.length > 0) {\n      const activity = response.data[0];\n      this.lastActivityTitle = activity.title;\n      this.lastActivityDescription = activity.description;\n      this.lastActivityDeadline = new Date(activity.deadline).toLocaleDateString();\n      this.noActivitiesMessage = '';\n      this.isCurrentDayActivity = true;\n    } else {\n      this.noActivitiesMessage = 'Non ci sono attività imminenti';\n      this.lastActivityTitle = '';\n      this.lastActivityDescription = '';\n      this.lastActivityDeadline = '';\n      this.isCurrentDayActivity = true;\n    }\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      this.noActivitiesMessage = 'Non ci sono attività imminenti123';\n      console.log(\"no\",error) ;\n      this.lastActivityTitle = '';\n      this.lastActivityDescription = '';\n      this.lastActivityDeadline = '';\n      this.isCurrentDayActivity = true;\n    } else {\n      console.error('Errore nel recupero delle attività del giorno corrente:', error);\n      this.noActivitiesMessage = 'Errore nel caricamento delle attività del giorno corrente.';\n    }\n  }\n},\n  }\n\n};\n</script>\n\n<style scoped>\nbody {\n  background: linear-gradient(to bottom, #0000ff, #ffffff);\n  margin: 0;\n}\n\n.home-principale {\n  text-align: center;\n}\n\n.carousel-item {\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  background-color: #000;\n  border-radius: 50%;\n}\n    \n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAK;;EAITA,KAAK,EAAC;AAA4B;;EAChCC,EAAE,EAAC,2BAA2B;EAACD,KAAK,EAAC,gBAAgB;EAAC,cAAY,EAAC;;;EACjEA,KAAK,EAAC;AAAgB;;;uBARrCE,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJD,mBAAA,CAiCM,OAjCNE,UAiCM,G,0BAhCJF,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAA0B,IACnCI,mBAAA,CAAkH;IAA7GJ,KAAK,EAAC,WAAW;IAACO,GAAG,EAAC,kEAAkE;IAACC,GAAG,EAAC;2BAEpGJ,mBAAA,CA4BM,OA5BNK,UA4BM,GA3BJL,mBAAA,CA0BM,OA1BNM,UA0BM,GAzBJN,mBAAA,CAgBM,OAhBNO,UAgBM,GAfJC,YAAA,CAEiFC,uBAAA;IAFnEC,KAAK,EAAC,QAAQ;IAAEC,YAAY,EAAEC,KAAA,CAAAD,YAAY;IAAGE,SAAS,EAAED,KAAA,CAAAE,eAAe;IACtEC,SAAS,EAAEH,KAAA,CAAAI,cAAc;IAAGC,eAAe,EAAEL,KAAA,CAAAM,oBAAoB;IAAGC,QAAQ,EAAEP,KAAA,CAAAQ,aAAa;IAC3FC,eAAa,EAAEC,QAAA,CAAAC,mBAAmB;IAAGC,aAAW,EAAEF,QAAA,CAAAG;0IAEjEjB,YAAA,CAEwFC,uBAAA;IAF1EC,KAAK,EAAC,UAAU;IAAEC,YAAY,EAAEC,KAAA,CAAAc,oBAAoB;IAAGb,SAAS,EAAED,KAAA,CAAAe,mBAAmB;IACpFZ,SAAS,EAAEH,KAAA,CAAAgB,iBAAiB;IAAGX,eAAe,EAAEL,KAAA,CAAAiB,uBAAuB;IAAGV,QAAQ,EAAEP,KAAA,CAAAkB,oBAAoB;IACxGT,eAAa,EAAEC,QAAA,CAAAS,uBAAuB;IAAGP,aAAW,EAAEF,QAAA,CAAAU;0IAErExB,YAAA,CAC+EC,uBAAA;IADjEC,KAAK,EAAC,MAAM;IAAEG,SAAS,EAAED,KAAA,CAAAqB,cAAc;IACtClB,SAAS,EAAEH,KAAA,CAAAsB,eAAe;IAAGjB,eAAe,EAAEL,KAAA,CAAAuB;0EAE7D3B,YAAA,CAGsEC,uBAAA;IAHxDC,KAAK,EAAC,UAAU;IAAEG,SAAS,EAAED,KAAA,CAAAwB,kBAAkB;IAC9CrB,SAAS,qBAAqBH,KAAA,CAAAyB,uBAAuB;IACrDpB,eAAe,oBAAoBL,KAAA,CAAA0B,sBAAsB;IACzDnB,QAAQ,oBAAoBP,KAAA,CAAA2B;kHAxBzDC,kBAAA,6lB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}