{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n    <div>\n    </div>\n  </template>\n  \n  <script>\n  import io from 'socket.io-client';\n  \n  export default {\n    data() {\n      return {\n        alerts: [], \n        socket: null,\n      };\n    },\n    created() {\n      this.socket = io('http://localhost:3000', {\n        transports: ['websocket'], \n      });\n  \n      this.socket.on('connect_error', (error) => {\n        console.log('Errore di connessione:', error);\n      });\n  \n      this.socket.on('alert', (data) => {\n        console.log('Alert ricevuto:', data);\n  \n        const loggedInUser = localStorage.getItem('username'); \n  \n        if (data.userNome === loggedInUser) {\n          alert(`TITOLO: ${data.title}\\nOra di inizio: ${data.startTime}\\nDi utente: ${data.userNome}`);\n          this.alerts.push(data); \n        }\n      });\n  \n      this.socket.on('connect', () => {\n        console.log('Connesso al server WebSocket');\n      });\n    },\n    unmounted() {\n      if (this.socket) {\n        this.socket.disconnect();\n      }\n    },\n  };\n  </script>\n  \n  <style scoped>\n  \n  </style>\n  \n"],"mappings":";;uBACIA,mBAAA,CACM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}