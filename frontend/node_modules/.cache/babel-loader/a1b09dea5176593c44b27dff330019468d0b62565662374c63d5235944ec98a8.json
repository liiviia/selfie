{"ast":null,"code":"export default {\n  data() {\n    return {\n      currentYear: new Date().getFullYear(),\n      currentMonth: new Date().getMonth(),\n      monthNames: ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'],\n      weekdays: ['Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab', 'Dom']\n    };\n  },\n  computed: {\n    daysInMonth() {\n      return new Array(new Date(this.currentYear, this.currentMonth + 1, 0).getDate()).fill(null).map((_, i) => i + 1);\n    },\n    emptyDays() {\n      const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();\n      return new Array(firstDay === 0 ? 6 : firstDay - 1).fill(null);\n    }\n  },\n  methods: {\n    isToday(day) {\n      const today = new Date();\n      return day === today.getDate() && this.currentMonth === today.getMonth() && this.currentYear === today.getFullYear();\n    },\n    isSunday(day) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      return date.getDay() === 0;\n    },\n    prevMonth() {\n      this.currentMonth--;\n      if (this.currentMonth < 0) {\n        this.currentMonth = 11;\n        this.currentYear--;\n      }\n    },\n    nextMonth() {\n      this.currentMonth++;\n      if (this.currentMonth > 11) {\n        this.currentMonth = 0;\n        this.currentYear++;\n      }\n    },\n    handleDayClick(day) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      console.log('Hai cliccato sulla data:', date);\n    }\n  }\n};","map":{"version":3,"names":["data","currentYear","Date","getFullYear","currentMonth","getMonth","monthNames","weekdays","computed","daysInMonth","Array","getDate","fill","map","_","i","emptyDays","firstDay","getDay","methods","isToday","day","today","isSunday","date","prevMonth","nextMonth","handleDayClick","console","log"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/calendarEvent.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button @click=\"prevMonth\">←</button>\n      <div class=\"year-month-display\">\n        <div class=\"year\">{{ currentYear }}</div>\n        <div class=\"month\">{{ monthNames[currentMonth] }}</div>\n      </div>\n      <button @click=\"nextMonth\">→</button>\n    </div>\n\n    <div class=\"calendar-weekdays\">\n      <div v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\n    </div>\n\n    <div class=\"calendar-grid\">\n      <div v-for=\"emptyDay in emptyDays\" :key=\"emptyDay\" class=\"empty-day\"></div>\n      <div v-for=\"day in daysInMonth\" :key=\"day\" class=\"calendar-day\" \n           :class=\"{ 'current-day': isToday(day), 'sunday': isSunday(day) }\" \n           @click=\"handleDayClick(day)\">\n        {{ day }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      currentYear: new Date().getFullYear(),\n      currentMonth: new Date().getMonth(),\n      monthNames: [\n        'Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno',\n        'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'\n      ],\n      weekdays: ['Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab', 'Dom']\n    };\n  },\n  computed: {\n    daysInMonth() {\n      return new Array(new Date(this.currentYear, this.currentMonth + 1, 0).getDate()).fill(null).map((_, i) => i + 1);\n    },\n    emptyDays() {\n      const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();\n      return new Array(firstDay === 0 ? 6 : firstDay - 1).fill(null);\n    }\n  },\n  methods: {\n    isToday(day) {\n      const today = new Date();\n      return (\n        day === today.getDate() &&\n        this.currentMonth === today.getMonth() &&\n        this.currentYear === today.getFullYear()\n      );\n    },\n    isSunday(day) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      return date.getDay() === 0;\n    },\n    prevMonth() {\n      this.currentMonth--;\n      if (this.currentMonth < 0) {\n        this.currentMonth = 11;\n        this.currentYear--;\n      }\n    },\n    nextMonth() {\n      this.currentMonth++;\n      if (this.currentMonth > 11) {\n        this.currentMonth = 0;\n        this.currentYear++;\n      }\n    },\n    handleDayClick(day) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      console.log('Hai cliccato sulla data:', date);\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n.custom-btn {\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.calendar {\n  width: 500px;\n  margin: 0 auto;\n  text-align: center;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.year-month-display {\n  text-align: center;\n}\n\n.year {\n  font-size: 2em;\n}\n\n.month {\n  font-size: 1.5em;\n}\n\n.calendar-weekdays,\n.calendar-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px;\n  margin-bottom: 10px;\n}\n\n.calendar-weekdays div {\n  font-weight: bold;\n  padding: 10px 0;\n}\n\n.calendar-day {\n  padding: 10px;\n  border: 1px solid #ccc;\n  cursor: pointer;\n}\n\n.calendar-day:hover {\n  background-color: #d4edda;\n}\n\n.current-day {\n  border-color: red;\n  border-width: 3px;\n  border-radius: 10px;\n}\n\n.empty-day {\n  visibility: hidden;\n}\n\n.sunday {\n  font-weight: bold;\n}\n</style>\n"],"mappings":"AA2BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACrCC,YAAY,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC;MACnCC,UAAU,EAAE,CACV,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAC5D,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAS,CAClE;MACDC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IAC5D,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAIC,KAAK,CAAC,IAAIR,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE,IAAI,CAACG,YAAW,GAAI,CAAC,EAAE,CAAC,CAAC,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAA,GAAI,CAAC,CAAC;IAClH,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,MAAMC,QAAO,GAAI,IAAIf,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE,IAAI,CAACG,YAAY,EAAE,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC;MAC1E,OAAO,IAAIR,KAAK,CAACO,QAAO,KAAM,IAAI,IAAIA,QAAO,GAAI,CAAC,CAAC,CAACL,IAAI,CAAC,IAAI,CAAC;IAChE;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,OAAOA,CAACC,GAAG,EAAE;MACX,MAAMC,KAAI,GAAI,IAAIpB,IAAI,CAAC,CAAC;MACxB,OACEmB,GAAE,KAAMC,KAAK,CAACX,OAAO,CAAC,KACtB,IAAI,CAACP,YAAW,KAAMkB,KAAK,CAACjB,QAAQ,CAAC,KACrC,IAAI,CAACJ,WAAU,KAAMqB,KAAK,CAACnB,WAAW,CAAC;IAE3C,CAAC;IACDoB,QAAQA,CAACF,GAAG,EAAE;MACZ,MAAMG,IAAG,GAAI,IAAItB,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE,IAAI,CAACG,YAAY,EAAEiB,GAAG,CAAC;MAC/D,OAAOG,IAAI,CAACN,MAAM,CAAC,MAAM,CAAC;IAC5B,CAAC;IACDO,SAASA,CAAA,EAAG;MACV,IAAI,CAACrB,YAAY,EAAE;MACnB,IAAI,IAAI,CAACA,YAAW,GAAI,CAAC,EAAE;QACzB,IAAI,CAACA,YAAW,GAAI,EAAE;QACtB,IAAI,CAACH,WAAW,EAAE;MACpB;IACF,CAAC;IACDyB,SAASA,CAAA,EAAG;MACV,IAAI,CAACtB,YAAY,EAAE;MACnB,IAAI,IAAI,CAACA,YAAW,GAAI,EAAE,EAAE;QAC1B,IAAI,CAACA,YAAW,GAAI,CAAC;QACrB,IAAI,CAACH,WAAW,EAAE;MACpB;IACF,CAAC;IACD0B,cAAcA,CAACN,GAAG,EAAE;MAClB,MAAMG,IAAG,GAAI,IAAItB,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE,IAAI,CAACG,YAAY,EAAEiB,GAAG,CAAC;MAC/DO,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,IAAI,CAAC;IAC/C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}