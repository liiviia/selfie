{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const queryDate = computed(() => route.query.date);\n    const navigateToAddEvent = () => {\n      router.push({\n        path: '/addEvent',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddActivity = () => {\n      router.push({\n        path: '/addActivities',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddPomodoro = () => {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const fetchEvents = async () => {\n      try {\n        const {\n          author,\n          date\n        } = route.query;\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n        const response = await axios.get('/api/events/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi e delle attività:', error);\n      }\n    };\n    const formatDate = dateString => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date) ? date.toLocaleDateString('it-IT', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }) : 'Data non valida';\n    };\n    onMounted(fetchEvents);\n    return {\n      events,\n      activities,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRoute","useRouter","axios","setup","route","router","events","activities","queryDate","query","date","navigateToAddEvent","push","path","value","navigateToAddActivity","navigateToAddPomodoro","fetchEvents","author","token","sessionStorage","getItem","console","log","response","get","headers","Authorization","params","Array","isArray","data","activityResponse","error","formatDate","dateString","Date","isNaN","toLocaleDateString","year","month","day"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Eventi e Attività per {{ formatDate(queryDate) }}</h2>\n    <div class=\"button-container\">\n      <button @click=\"navigateToAddEvent\">Aggiungi Evento</button>\n      <button @click=\"navigateToAddActivity\">Aggiungi Attività</button>\n      <button @click=\"navigateToAddPomodoro\">Aggiungi Pomodoro</button>\n    </div>\n    <div v-if=\"events.length > 0\">\n      <h3>Eventi:</h3>\n      <div v-for=\"event in events\" :key=\"event._id\">\n        <h4>{{ event.title }}</h4>\n        <p>Data: {{ formatDate(event.date) }}</p>\n        <p>Descrizione: {{ event.description }}</p>\n      </div>\n    </div>\n    <div v-if=\"activities.length > 0\">\n      <h3>Attività:</h3>\n      <div v-for=\"activity in activities\" :key=\"activity._id\">\n        <h4>{{ activity.title }}</h4>\n        <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n        <p>Descrizione: {{ activity.description }}</p>\n      </div>\n    </div>\n    <div v-if=\"events.length === 0 && activities.length === 0\">\n      <p>Nessun evento o attività per questa data.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const queryDate = computed(() => route.query.date);\n\n    const navigateToAddEvent = () => {\n      router.push({ path: '/addEvent', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddActivity = () => {\n      router.push({ path: '/addActivities', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddPomodoro = () => {\n      router.push({ path: '/pomodoroTempo', query: { date: queryDate.value } });\n    };\n\n    const fetchEvents = async () => {\n      try {\n        const { author, date } = route.query;\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi e delle attività:', error);\n      }\n    };\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n    onMounted(fetchEvents);\n\n    return {\n      events,\n      activities,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro\n    };\n  }\n};\n</script>\n\n<style scoped>\n.button-container {\n  margin-bottom: 20px;\n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}