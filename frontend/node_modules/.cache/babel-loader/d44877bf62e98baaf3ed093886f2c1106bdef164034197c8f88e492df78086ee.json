{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-title\"\n};\nconst _hoisted_2 = {\n  class: \"section events-section full-width\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"color\": \"#FF6347\"\n  }\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  class: \"button-container\"\n};\nconst _hoisted_10 = {\n  class: \"content-container\"\n};\nconst _hoisted_11 = {\n  class: \"section activities-section\"\n};\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  key: 0,\n  style: {\n    \"color\": \"#FF6347\"\n  }\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = {\n  class: \"button-container\"\n};\nconst _hoisted_18 = {\n  class: \"content-container\"\n};\nconst _hoisted_19 = {\n  class: \"section overdue-activities-section\"\n};\nconst _hoisted_20 = {\n  key: 0\n};\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = {\n  key: 1\n};\nconst _hoisted_24 = {\n  class: \"pomodoro-container\"\n};\nconst _hoisted_25 = {\n  class: \"section pomodoros-section\"\n};\nconst _hoisted_26 = {\n  key: 0\n};\nconst _hoisted_27 = [\"onClick\"];\nconst _hoisted_28 = [\"onClick\"];\nconst _hoisted_29 = {\n  key: 1\n};\nconst _hoisted_30 = {\n  key: 1\n};\nconst _hoisted_31 = {\n  class: \"button-container\"\n};\nconst _hoisted_32 = {\n  class: \"section pomodorosScaduti-section\"\n};\nconst _hoisted_33 = {\n  key: 0\n};\nconst _hoisted_34 = [\"onClick\"];\nconst _hoisted_35 = [\"onClick\"];\nconst _hoisted_36 = {\n  key: 1\n};\nconst _hoisted_37 = {\n  class: \"section unstarted-pomodoros-section\"\n};\nconst _hoisted_38 = {\n  key: 0\n};\nconst _hoisted_39 = [\"onClick\"];\nconst _hoisted_40 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", _hoisted_1, \"Eventi, Attività e Pomodori per \" + _toDisplayString($setup.formatDate($setup.queryDate)), 1), _createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"EVENTI DI QUESTO GIORNO:\", -1)), $setup.events.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.events, event => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: event._id,\n      class: \"item-container\"\n    }, [_createElementVNode(\"h4\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n      style: {\n        \"font-size\": \"0.9em\"\n      }\n    }, \"Titolo:\", -1)), _createTextVNode(\" \" + _toDisplayString(event.title), 1)]), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(event.date)), 1), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(event.description), 1), _createElementVNode(\"p\", null, \"Ora di inizio: \" + _toDisplayString(event.startTime), 1), _createElementVNode(\"p\", null, \"Luogo: \" + _toDisplayString(event.location), 1), _createElementVNode(\"p\", null, \"Durata: \" + _toDisplayString(event.duration), 1), event.type === 'gruppo' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, [_createTextVNode(\" Evento di gruppo creato da: \" + _toDisplayString(event.author) + \" \", 1), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1)), _createTextVNode(\" gruppo composto da: \" + _toDisplayString(event.participants.join(', ')), 1)])) : _createCommentVNode(\"\", true), event.author === $setup.currentUser ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $setup.confirmDeleteEvent(event._id),\n      class: \"delete-btn-cq\"\n    }, \"🗑️ Elimina Evento\", 8, _hoisted_5)) : _createCommentVNode(\"\", true), event.participants.includes($setup.currentUser) && event.author !== $setup.currentUser ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: $event => $setup.rejectEvent(event._id),\n      class: \"delete-btn-cq\"\n    }, \"🗑️ Rifiuta Evento\", 8, _hoisted_6)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n      onClick: $event => $setup.exportToIcal(event),\n      class: \"export-btn\"\n    }, \"📅 Esporta\", 8, _hoisted_7)]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"Nessun evento per questa data.\")), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.navigateToAddEvent && $setup.navigateToAddEvent(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \" Aggiungi evento \")])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"ATTIVITÀ CHE SCADONO QUESTO GIORNO:\", -1)), $setup.activities.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.activities, activity => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: activity._id,\n      class: _normalizeClass([\"item-container\", {\n        completed: activity.completed\n      }])\n    }, [_createElementVNode(\"h4\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n      style: {\n        \"font-size\": \"0.9em\"\n      }\n    }, \"Titolo:\", -1)), _createTextVNode(\" \" + _toDisplayString(activity.title), 1)]), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(activity.deadline || activity.date)), 1), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(activity.description), 1), activity.type === 'gruppo' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_13, [_createTextVNode(\" Attività di gruppo creata da: \" + _toDisplayString(activity.author), 1), _cache[7] || (_cache[7] = _createElementVNode(\"br\", null, null, -1)), _createTextVNode(\" Gruppo composto da: \" + _toDisplayString(activity.participants.join(', ')), 1)])) : _createCommentVNode(\"\", true), !activity.completed ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $setup.markAsCompleted(activity),\n      class: \"complete-btn\",\n      style: {\n        \"background\": \"#f4a460\"\n      }\n    }, \"Completata\", 8, _hoisted_14)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n      onClick: $event => $setup.confirmDeleteActivity(activity._id),\n      class: \"delete-btn-cq\"\n    }, \"🗑️\", 8, _hoisted_15)], 2);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_16, \"Nessuna attività per questa data.\")), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.navigateToAddActivity && $setup.navigateToAddActivity(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \" Aggiungi attivita \")])]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"ATTIVITÀ INCOMPLETE:\", -1)), $setup.filteredOverdueActivities.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredOverdueActivities, activity => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: activity._id,\n      class: \"item-container overdue\"\n    }, [_createElementVNode(\"h4\", null, \"Titolo: \" + _toDisplayString(activity.title), 1), _createElementVNode(\"p\", null, \"Data scadenza: \" + _toDisplayString($setup.formatDate(activity.deadline)), 1), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(activity.description), 1), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.discardActivity(activity._id),\n      class: \"delete-btn discard-btn\"\n    }, \"Scarta\", 8, _hoisted_21), !activity.completed ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $setup.markAsCompleted(activity),\n      class: \"delete-btn completed-btn\"\n    }, \"Completata\", 8, _hoisted_22)) : _createCommentVNode(\"\", true)])])]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_23, \"Nessuna attività incompleta trovata.\"))])])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"POMODORI PER QUESTO GIORNO:\", -1)), $setup.pomodoros.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pomodoros, pomodoro => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pomodoro._id,\n      class: \"item-container\"\n    }, [_cache[10] || (_cache[10] = _createElementVNode(\"h4\", null, \"Pomodoro Sessione\", -1)), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(pomodoro.giorno)), 1), _createElementVNode(\"p\", null, \"Tempo di studio: \" + _toDisplayString(pomodoro.tempoStudio) + \" minuti\", 1), _createElementVNode(\"p\", null, \"Tempo di pausa: \" + _toDisplayString(pomodoro.tempoPausa) + \" minuti\", 1), _createElementVNode(\"p\", null, \"Ripetizioni: \" + _toDisplayString(pomodoro.ripetizioni), 1), _createElementVNode(\"button\", {\n      onClick: $event => $setup.confirmDeletePomodoro(pomodoro._id),\n      class: \"delete-btn-cq\"\n    }, \"🗑️\", 8, _hoisted_27), $setup.isSameDay($setup.queryDate, $setup.timeMachine) && !pomodoro.isStarted ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $setup.iniziaPomodoro(pomodoro._id, pomodoro.remainingTime, pomodoro.giorno, pomodoro.tempoStudio, pomodoro.tempoPausa, pomodoro.ripetizioni)\n    }, \" Inizia il pomodoro \", 8, _hoisted_28)) : pomodoro.isStarted ? (_openBlock(), _createElementBlock(\"p\", _hoisted_29, \"Pomodoro già avviato\")) : _createCommentVNode(\"\", true)]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_30, \"Nessun pomodoro per questa data.\")), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.navigateToAddPomodoro && $setup.navigateToAddPomodoro(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \" Aggiungi pomodoro \")])]), _createElementVNode(\"div\", _hoisted_32, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", null, \"POMODORI INCOMPLETI\", -1)), $setup.incompleteSessions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.incompleteSessions, session => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: session._id,\n      class: \"item-container\"\n    }, [_createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(session.giorno)), 1), _createElementVNode(\"p\", null, \"Tempo rimanente: \" + _toDisplayString(Math.floor(session.remainingTime / 60)) + \":\" + _toDisplayString(session.remainingTime % 60), 1), _createElementVNode(\"p\", null, \"Cicli rimanenti: \" + _toDisplayString(session.studyCycles), 1), _createElementVNode(\"button\", {\n      onClick: $event => $setup.resumePomodoro(session),\n      class: \"action-button\",\n      style: {\n        \"background\": \"#f4a460\"\n      }\n    }, \"Riprendi Sessione\", 8, _hoisted_34), _createElementVNode(\"button\", {\n      onClick: $event => $setup.discardPomodoro(session),\n      class: \"action-button\",\n      style: {\n        \"all\": \"unset\",\n        \"cursor\": \"pointer\"\n      }\n    }, _cache[12] || (_cache[12] = [_createElementVNode(\"span\", {\n      class: \"trash-icon\",\n      style: {\n        \"font-size\": \"0.9em\",\n        \"color\": \"inherit\"\n      }\n    }, \"🗑️\", -1)]), 8, _hoisted_35)]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_36, \"nessun pomodoro da portare a termine\"))]), _createElementVNode(\"div\", _hoisted_37, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"POMODORI NON AVVIATI\", -1)), $setup.unstartedSessions && $setup.unstartedSessions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.unstartedSessions, session => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: session._id,\n      class: \"item-container\"\n    }, [_cache[14] || (_cache[14] = _createElementVNode(\"h4\", null, \"Sessione non avviata\", -1)), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(session.giorno)), 1), _createElementVNode(\"p\", null, \"Tempo di studio: \" + _toDisplayString(session.tempoStudio) + \" minuti\", 1), _createElementVNode(\"p\", null, \"Tempo di pausa: \" + _toDisplayString(session.tempoPausa) + \" minuti\", 1), _createElementVNode(\"p\", null, \"Ripetizioni: \" + _toDisplayString(session.ripetizioni), 1), _createElementVNode(\"button\", {\n      onClick: $event => $setup.iniziaPomodoro(session._id, session.remainingTime, session.giorno, session.tempoStudio, session.tempoPausa, session.ripetizioni),\n      class: \"action-button\",\n      style: {\n        \"background\": \"#f4a460\"\n      }\n    }, \" Inizia Sessione \", 8, _hoisted_39)]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_40, \"Nessun pomodoro non avviato trovato.\"))])])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_createElementVNode","_hoisted_1","_toDisplayString","$setup","formatDate","queryDate","_hoisted_2","events","length","_hoisted_3","_Fragment","_renderList","event","_id","_createTextVNode","title","date","description","startTime","location","duration","type","_hoisted_4","author","participants","join","_createCommentVNode","currentUser","onClick","$event","confirmDeleteEvent","_hoisted_5","includes","rejectEvent","_hoisted_6","exportToIcal","_hoisted_7","_hoisted_8","_hoisted_9","_cache","args","navigateToAddEvent","_hoisted_10","_hoisted_11","activities","_hoisted_12","activity","_normalizeClass","completed","deadline","_hoisted_13","markAsCompleted","_hoisted_14","confirmDeleteActivity","_hoisted_15","_hoisted_16","_hoisted_17","navigateToAddActivity","_hoisted_18","_hoisted_19","filteredOverdueActivities","_hoisted_20","discardActivity","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","pomodoros","_hoisted_26","pomodoro","giorno","tempoStudio","tempoPausa","ripetizioni","confirmDeletePomodoro","_hoisted_27","isSameDay","timeMachine","isStarted","iniziaPomodoro","remainingTime","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","navigateToAddPomodoro","_hoisted_32","incompleteSessions","_hoisted_33","session","Math","floor","studyCycles","resumePomodoro","_hoisted_34","discardPomodoro","_hoisted_35","_hoisted_36","_hoisted_37","unstartedSessions","_hoisted_38","_hoisted_39","_hoisted_40"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n   <div>\n    <h2 class=\"main-title\">Eventi, Attività e Pomodori per {{ formatDate(queryDate) }}</h2>\n     <div class=\"section events-section full-width\">\n      <h3>EVENTI DI QUESTO GIORNO:</h3>\n      <div v-if=\"events.length > 0\">\n        <div v-for=\"event in events\" :key=\"event._id\" class=\"item-container\">\n  <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ event.title }}</h4>\n  <p>Data: {{ formatDate(event.date) }}</p>\n  <p>Descrizione: {{ event.description }}</p>\n  <p>Ora di inizio: {{ event.startTime }}</p>\n  <p>Luogo: {{ event.location }}</p>\n  <p>Durata: {{ event.duration }}</p>\n  <p v-if=\"event.type === 'gruppo'\" style=\"color: #FF6347;\">\n    Evento di gruppo creato da: {{ event.author }} <br>\n    gruppo composto da: {{ event.participants.join(', ') }}\n  </p>\n\n  <button v-if=\"event.author === currentUser\" @click=\"confirmDeleteEvent(event._id)\" class=\"delete-btn-cq\" >🗑️ Elimina Evento</button>\n\n  \n\n  <button v-if=\"event.participants.includes(currentUser) && event.author !== currentUser\" \n          @click=\"rejectEvent(event._id)\" \n          class=\"delete-btn-cq\">🗑️ Rifiuta Evento</button>\n\n          <button @click=\"exportToIcal(event)\" class=\"export-btn\">📅 Esporta</button>\n</div>\n      </div>\n      <p v-else>Nessun evento per questa data.</p>\n      <div class=\"button-container\">\n        <button class=\"fixed-button\" @click=\"navigateToAddEvent\" style=\"background:#f4a460;\">\n          Aggiungi evento\n        </button>\n      </div>\n    </div>\n\n    <div class=\"content-container\">\n      <div class=\"section activities-section\">\n        <h3>ATTIVITÀ CHE SCADONO QUESTO GIORNO:</h3>\n        <div v-if=\"activities.length > 0\">\n          <div v-for=\"activity in activities\" :key=\"activity._id\" class=\"item-container\"\n          :class=\"{ completed: activity.completed }\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ activity.title }}</h4>\n            <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <p v-if=\"activity.type === 'gruppo'\" style=\"color: #FF6347;\">\n              Attività di gruppo creata da: {{ activity.author }}<br>\n              Gruppo composto da: {{ activity.participants.join(', ') }}\n            </p>\n            <button v-if=\"!activity.completed\" @click=\"markAsCompleted(activity)\" class=\"complete-btn\" style=\"background:#f4a460;\">Completata</button>\n            <button @click=\"confirmDeleteActivity(activity._id)\" class=\"delete-btn-cq\" >🗑️</button>\n          </div>\n        </div>\n        <p v-else>Nessuna attività per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddActivity\" style=\"background:#f4a460;\">\n            Aggiungi attivita\n          </button>\n        </div>\n      </div>\n      \n      \n      <div class=\"content-container\">\n       <div class=\"section overdue-activities-section\">\n        <h3>ATTIVITÀ INCOMPLETE:</h3>\n        <div v-if=\"filteredOverdueActivities.length > 0\">\n          <div v-for=\"activity in filteredOverdueActivities\" :key=\"activity._id\" class=\"item-container overdue\">\n            <h4>Titolo: {{ activity.title }}</h4>\n            <p>Data scadenza: {{ formatDate(activity.deadline) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <div>\n              <div>\n  <button @click=\"discardActivity(activity._id)\" class=\"delete-btn discard-btn\">Scarta</button>\n  <button v-if=\"!activity.completed\" @click=\"markAsCompleted(activity)\" class=\"delete-btn completed-btn\">Completata</button>\n</div>\n\n           </div>\n\n          </div>\n        </div>\n        <p v-else>Nessuna attività incompleta trovata.</p>\n      </div>\n    </div>\n  </div>\n\n    \n    <div class=\"pomodoro-container\">\n  <div class=\"section pomodoros-section\">\n    <h3>POMODORI PER QUESTO GIORNO:</h3>\n    <div v-if=\"pomodoros.length > 0\">\n      <div v-for=\"pomodoro in pomodoros\" :key=\"pomodoro._id\" class=\"item-container\">\n        <h4>Pomodoro Sessione</h4>\n        <p>Data: {{ formatDate(pomodoro.giorno) }}</p>\n        <p>Tempo di studio: {{ pomodoro.tempoStudio }} minuti</p>\n        <p>Tempo di pausa: {{ pomodoro.tempoPausa }} minuti</p>\n        <p>Ripetizioni: {{ pomodoro.ripetizioni }}</p>\n        <button @click=\"confirmDeletePomodoro(pomodoro._id)\" class=\"delete-btn-cq\">🗑️</button>\n        <button\n          v-if=\"isSameDay(queryDate, timeMachine) && !pomodoro.isStarted\"\n          @click=\"iniziaPomodoro(pomodoro._id, pomodoro.remainingTime, pomodoro.giorno, pomodoro.tempoStudio, pomodoro.tempoPausa, pomodoro.ripetizioni)\"\n        >\n          Inizia il pomodoro\n        </button>\n        <p v-else-if=\"pomodoro.isStarted\">Pomodoro già avviato</p>\n      </div>\n    </div>\n    <p v-else>Nessun pomodoro per questa data.</p>\n    <div class=\"button-container\">\n      <button class=\"fixed-button\" @click=\"navigateToAddPomodoro\" style=\"background:#f4a460;\">\n        Aggiungi pomodoro\n      </button>\n    </div>\n  </div>\n\n\n  <div class=\"section pomodorosScaduti-section\">\n    <h3>POMODORI INCOMPLETI</h3>\n    <div v-if=\"incompleteSessions.length > 0\">\n      <div v-for=\"session in incompleteSessions\" :key=\"session._id\" class=\"item-container\">\n        <p>Data: {{ formatDate(session.giorno) }}</p>\n        <p>Tempo rimanente: {{ Math.floor(session.remainingTime / 60) }}:{{ session.remainingTime % 60 }}</p>\n        <p>Cicli rimanenti: {{ session.studyCycles }}</p>\n        <button @click=\"resumePomodoro(session)\" class=\"action-button\" style=\"background:#f4a460;\">Riprendi Sessione</button>\n        <button @click=\"discardPomodoro(session)\" class=\"action-button\" style=\"all: unset; cursor: pointer;\">\n          <span class=\"trash-icon\" style=\"font-size: 0.9em; color: inherit;\">🗑️</span>\n        </button>\n      </div>\n    </div>\n    <p v-else>nessun pomodoro da portare a termine</p>\n  </div>\n\n  \n  <div class=\"section unstarted-pomodoros-section\">\n    <h3>POMODORI NON AVVIATI</h3>\n    <div v-if=\"unstartedSessions && unstartedSessions.length > 0\">\n      <div v-for=\"session in unstartedSessions\" :key=\"session._id\" class=\"item-container\">\n        <h4>Sessione non avviata</h4>\n        <p>Data: {{ formatDate(session.giorno) }}</p>\n        <p>Tempo di studio: {{ session.tempoStudio }} minuti</p>\n        <p>Tempo di pausa: {{ session.tempoPausa }} minuti</p>\n        <p>Ripetizioni: {{ session.ripetizioni }}</p>\n        <button @click=\"iniziaPomodoro(session._id, session.remainingTime, session.giorno, session.tempoStudio, session.tempoPausa, session.ripetizioni)\"\n                class=\"action-button\" style=\"background:#f4a460;\">\n          Inizia Sessione\n        </button>\n      </div>\n    </div>\n    <p v-else>Nessun pomodoro non avviato trovato.</p>\n  </div>\n</div>\n\n  \n  </div> \n\n</template>\n\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { createEvent } from 'ics';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]); \n    const incompleteSessions = ref([]);\n    const overdueActivities = ref([]); \n    const currentUser = localStorage.getItem('username') ;\n    const queryDate = computed(() => route.query.date);\n    const timeMachine = ref();\n    const unstartedSessions = ref([]);\n\n\n    const confirmDeleteActivity = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa Attività?\")) {\n        deleteActivities(id); \n      }\n    };\n    const navigateToAddActivity = () => {\n      router.push({ path: '/addActivities', query: { date: queryDate.value } });\n    };\n    const navigateToAddEvent = () => {\n      router.push({ path: '/addEvent', query: { date: queryDate.value } });\n    };\n    const navigateToAddPomodoro = () => {\n      router.push({ path: '/pomodoroTempo', query: { date: queryDate.value,nonFare: 'false' } });\n    };\n\n    const deleteActivities = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username } \n        });\n        console.log('Attività eliminata');\n        fetchActivities(); \n        fetchOverdueActivities();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attività:', error);\n      }\n    };\n\n    const confirmDeleteEvent = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id); \n      }\n    };\n\n    const rejectEvent = (id) => {\n      deleteEvents(id);\n    }\n\n    const exportToIcal = async (event) => {\n\n      \n\n      const eventDate = new Date(event.date);\n      const [hour, minute] = event.startTime.split(':').map(Number); \n\n      \n\n      const icsEvent = {\n        start: [\n      eventDate.getFullYear(), \n      eventDate.getMonth() + 1, \n      eventDate.getDate(), \n      hour, \n      minute, \n    ],\n      duration: {hours: event.duration},\n      title: event.title,\n      description: event.description,\n      organizer: { name: event.author}, \n      };\n\n\n\n      createEvent(icsEvent, (error, value) => {\n       if (error) {\n      console.error('Errore nella creazione del file iCalendar:', error);\n      return;\n        }\n\n    const blob = new Blob([value], { type: 'text/calendar' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `${event.title || \"evento\"}.ics`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    console.log('Evento esportato con successo!');\n  });\n\n\n    };\n\n    const deleteEvents = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username }\n        });\n        console.log('Evento eliminato');\n        fetchEvents(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n\n    const confirmDeletePomodoro = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa sessione Pomodoro?\")) {\n        deletePomodoro(id); \n      }\n    };\n\n    const deletePomodoro = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/pomRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Sessione Pomodoro eliminata');\n        window.location.reload();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della sessione:', error);\n      }\n    };\n\n    const iniziaPomodoro = async (id, remainingTime, date, tempoStudio, tempoPausa, ripetizioni) => {\n  try {\n    const token = sessionStorage.getItem('token');\n    const response = await axios.post(`/api/iniziaPomodoro/${id}`, {\n      date },\n      {\n      headers: {\n         Authorization: `Bearer ${token}` \n        }\n    });\n\n    if (response.data.success) {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: date,\n          remainingTime: remainingTime,\n          isStudyPhase: true,\n          tempoStudio: tempoStudio,\n          tempoPausa: tempoPausa,\n          ripetizioni: ripetizioni,\n          nuovo: true,\n          nonFare: true\n        }\n      });\n    } else {\n         console.log(\"errore\");\n    }\n  } catch (error) {\n    console.error('Errore durante l\\'avvio del pomodoro:', error);\n  }\n};\n\n\n\n    const isSameDay = (date1, date2) => {\n      const d1 = new Date(date1);\n        const d2 = new Date(date2);\n        return (\n            d1.getFullYear() === d2.getFullYear() &&\n            d1.getMonth() === d2.getMonth() &&\n            d1.getDate() === d2.getDate()\n        );\n\n    };\n\n\n    const fetchActivities = async () => {\n  try {\n    const token = sessionStorage.getItem('token');\n    const author = localStorage.getItem('username'); \n    const response = await axios.get('/api/activities/by-date', {\n      headers: { Authorization: `Bearer ${token}` },\n      params: { date: queryDate.value, author }, \n    });\n    activities.value = response.data;\n  } catch (error) {\n    console.error('Errore nel recupero delle attività:', error);\n  }\n};\n\n\n\n    /* const fetchPoms = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        this.poms = response.data.filter(pom => {\n          const sessionDate = new Date(pom.giorno);\n          sessionDate.setHours(0, 0, 0, 0);\n          return sessionDate >= today;\n        });\n\n      } catch (error) {\n        console.error('Errore durante il recupero delle sessioni Pomodoro:', error);\n      }\n    }\n*/\n\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n\n        const token = sessionStorage.getItem('token');\n\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n\n\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username, date }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attività e dei pomodori:', error);\n      }\n    };\n\nconst fetchIncompleteSessions = async () => {\n  const token = sessionStorage.getItem('token');\n  const username = localStorage.getItem('username');\n  console.log(\"query date\", queryDate);\n  const queryDate = queryDate.value;\n  const queryDateMs = queryDate ? new Date(queryDate).valueOf() : null;\n\n  try {\n    // Prima chiamata: recupera le sessioni incomplete\n    const response = await axios.get('/api/poms/incomplete', {\n      headers: { Authorization: `Bearer ${token}` },\n      params: { username }\n    });\n\n    const incompleteData = (Array.isArray(response.data) ? response.data : [response.data]).filter(session => {\n      return (\n        session.studyCycles > 0 &&\n        session.remainingTime > 0 &&\n        session.tempoStudio &&\n        session.tempoPausa &&\n        new Date(session.giorno).valueOf() <= queryDateMs\n      );\n    });\n\n    // Seconda chiamata: recupera le sessioni non completate dal backend\n    const nonCompletedResponse = await axios.get('/api/poms/getPomNonPart', {\n      headers: { Authorization: `Bearer ${token}` },\n      params: { username }\n    });\n\n    const nonCompletedData = Array.isArray(nonCompletedResponse.data) ? nonCompletedResponse.data : [];\n\n    // Concatena i dati delle due chiamate\n    incompleteSessions.value = [...incompleteData, ...nonCompletedData];\n  } catch (error) {\n    console.error('Errore nel recupero delle sessioni:', error);\n  }\n};\n\n\n\n    const resumePomodoro = (session) => {\n    const plainSession = JSON.parse(JSON.stringify(session));\n\n    const nuovo = false;\n\n    router.push({\n      path: '/pomodoroTempo',\n      query: {\n        date: new Date(plainSession.giorno).toISOString(),\n        remainingTime: plainSession.remainingTime,\n        studyCycles: plainSession.studyCycles,\n        isStudyPhase: plainSession.isStudyPhase,\n        tempoStudio: plainSession.tempoStudio, \n        tempoPausa: plainSession.tempoPausa,   \n        ripetizioni: plainSession.ripetizioni, \n        nuovo: nuovo,\n        nonFare:true,\n    },\n  });\n    };\n\n    \n\n    const discardPomodoro = async (session) => {\n      const token = sessionStorage.getItem('token');\n      try {\n        await axios.delete(`/api/pomRemove/${session._id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n        incompleteSessions.value = incompleteSessions.value.filter(s => s._id !== session._id);\n      } catch (error) {\n        console.error('Errore nello scartare la sessione pomodoro:', error.response?.data || error);\n      }\n    };\n\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n\n    const fetchOverdueActivities = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/overdue', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username },\n        });\n        overdueActivities.value = response.data; \n      } catch (error) {\n        console.error('Errore nel recupero delle attività scadute:', error);\n      }\n    };\n\n    const filteredOverdueActivities = computed(() =>\n      overdueActivities.value.filter(activity => activity.title && activity.deadline)\n    );\n\n\n\n      const markAsCompleted = async (activity) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.put(`/api/activities/${activity._id}`, { completed: true }, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        activity.completed = true;\n        // Aggiorna la lista localmente\n        activities.value = activities.value.filter(a => a._id !== activity._id);\n        overdueActivities.value = overdueActivities.value.filter(a => a._id !== activity._id);\n        window.location.reload();\n      } catch (error) {\n        console.error('Errore nel completare l\\'attività:', error);\n      }\n    };\n\n    const discardActivity = async (id) => {\n  try {\n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    await axios.delete(`/api/activitiesRemove/${id}`, {\n      headers: { Authorization: `Bearer ${token}` },\n      params: {username: username}\n    });\n    fetchOverdueActivities();\n    fetchActivities(); \n    overdueActivities.value = overdueActivities.value.filter(a => a._id !== id);\n  } catch (error) {\n    console.error('Errore nello scartare l\\'attività:', error);\n  }\n};\n\n   const getTimeMachine = async () => {\n\n    try{\n    const response = await axios.get('/api/getTime-machine');\n    timeMachine.value = response.data\n\n    } catch (error) {\n      console.log(\"errore recupero data time machine\" , error);\n    }\n   };\n\nconst fetchUnstartedSessions = async () => {\n  try {\n    \n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        console.log('Token:', token);\n        console.log('Username:', username);\n\n        const response = await axios.get('/api/getSessioniNonPartite', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username },\n        });\n\n        console.log('Risposta:', response.data);\n\n        unstartedSessions.value = Array.isArray(response.data) ? response.data : [];\n      } catch (error) {\n        console.error('Errore nel recupero delle sessioni mai avviate:', error);\n        unstartedSessions.value = []; \n      }\n};\n\n\n\n    onMounted(() => {\n    //  fetchPoms();\n      fetchEvents();\n      fetchActivities();\n      fetchOverdueActivities();\n      fetchIncompleteSessions();\n      fetchUnstartedSessions(); \n      setInterval(getTimeMachine, 1000);    });\n\n    return {\n      events,\n      activities,\n      pomodoros, \n      incompleteSessions, \n      unstartedSessions, \n      overdueActivities,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro, \n      resumePomodoro, \n      discardPomodoro,\n      confirmDeleteActivity,\n      confirmDeleteEvent,\n      confirmDeletePomodoro,\n      //markActivityComplete ,\n      markAsCompleted,\n      filteredOverdueActivities,\n      discardActivity,\n      iniziaPomodoro,\n      timeMachine,\n      isSameDay,\n      currentUser,\n      rejectEvent,\n      exportToIcal\n    };\n  }\n};\n\n\n</script>\n\n<style scoped>\n.full-width {\n  width: 100%;\n  margin-bottom: 20px;\n  background-color: rgba(230, 247, 255, 0.8);\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  padding: 25px;\n}\n\n\n.center-container {\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n  padding: 20px;\n}\n\n.button-container {\n  margin-top: auto; \n  margin-bottom: 10px; \n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.activities-section {\n  flex: 1.5; \n  background-color: #f9f9f9;\n}\n\n.events-section {\n  flex: 1.5; \n  background-color: #e6f7ff;\n}\n\n.pomodoros-section {\n  flex: 1.5; \n  background-color: #ffe6e6;\n}\n\n.section {\n  margin-right: 100px;\n  min-width: 500px;\n  flex: 1.5; \n  padding: 25px;\n  border: 1px solid #ddd; \n  border-radius: 10px; \n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); \n  background-color: rgba(255, 255, 255, 0.8); \n  display: flex; \n  flex-direction: column; \n  justify-content: space-between; \n}\n\n.section:hover {\n  transform: scale(1.02); \n}\n\n.activities-section {\n  background-color: rgba(249, 249, 249, 0.8); \n}\n\n.events-section {\n  background-color: rgba(230, 247, 255, 0.8); \n}\n\n.pomodoros-section {\n  background-color: rgba(255, 230, 230, 0.8);\n}\n\nhr {\n  border: 0; \n  height: 1px; \n  background-color: #ddd; \n  margin: 10px 0; \n}\n.item-container {\n  background-color: rgba(255, 255, 255, 0.9);\n  border: 1px solid #ddd; \n  border-radius: 8px; \n  padding: 15px; \n  margin-bottom: 15px; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative; \n}\n\n.delete-btn-c {\n  position: absolute; \n  bottom: 10px;\n  right: 10px; \n  background: none;\n  border: none; \n  cursor: pointer; \n  font-size: 1.2em;\n  color: #e74c3c; \n}\n.delete-btn-cq {\n  position: absolute; \n  bottom: 10px;\n  right: 10px; \n  background: none;\n  border: none; \n  cursor: pointer; \n  font-size: 1.2em;\n  color: #e74c3c; \n}\n.delete-btn-cqx {\n  background: none;\n  border: none; \n  cursor: pointer; \n  font-size: 1.2em;\n  color: #e74c3c;\n}\n.delete-btn {\n  position: absolute;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2em;\n  color: #e74c3c;\n}\n.discard-btn {\n  bottom: 10px;\n  right: 10px;\n}\n\n.completed-btn {\n  bottom: 30px;\n  right: 10px;\n}\n.export-btn {\n  position: absolute; \n  bottom: 50px;\n  right: 10px; \n  background: none;\n  border: none; \n  cursor: pointer; \n  font-size: 1.2em;\n  color: #e74c3c; \n}\n\n.delete-btn:hover {\n  color: #c0392b; \n}\n.export-btn:hover {\n  color:#c0392b; \n}\n\n\n@media (max-width: 600px) {\n  .delete-btn, .export-btn {\n    font-size: 0.9em;        \n    right: 20px;   \n    color: blue;         \n  }\n\n  .delete-btn-c {\n    bottom: -10px;\n    right: 200px;\n  }\n  .delete-btn-cq {\n    font-size: 0.9em;\n    bottom: -10px;\n    right: -20px;\n  }\n\n\n  .delete-btn {\n    bottom: -10px;           \n  }\n \n  .completed-btn {\n    right: 100px;  \n  }\n\n  .export-btn {\n    bottom: -10px;          \n    right: 150px;\n  }\n  .content-container {\n    flex-direction: column; \n    margin-left: 0; \n  }\n\n  .section {\n    min-width: auto; \n    margin-right: 0; \n    margin-bottom: 20px; \n  }\n  .main-title {\n  margin-top: 20px; \n}\n}\n\n.item-container {\n  background-color: rgba(255, 255, 255, 0.9);\n  border: 1px solid #ddd; \n  border-radius: 8px; \n  padding: 15px; \n  margin-bottom: 15px; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative; \n  transition: border-color 0.3s ease; \n}\n\n.item-container.overdue {\n  border-color: red;\n  background-color: #ffe6e6;\n}\n\n.item-container.incpom {\n  border-color: red;\n  background-color: #ffe6e6;\n}\n\n\n.item-container.completed {\n  border-color: green;\n  box-shadow: 0 2px 8px rgba(0, 128, 0, 0.5); \n}\n\n.complete-btn {\n  background-color: #28a745; \n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.complete-btn:hover {\n  background-color: #218838; \n}\n\n.complete-btn:before {\n  content: '✔️ '; \n  margin-right: 8px; \n}\n\n.pomodoro-container {\n  display: flex;\n  justify-content: space-around; \n  flex-wrap: wrap; \n  gap: 20px; \n  margin: 20px auto; \n  max-width: 1200px; \n}\n\n.pomodoro-container .section {\n  flex: 1; \n  min-width: 300px; \n  max-width: 400px; \n  background-color: rgba(255, 255, 255, 0.9);\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  text-align: center; \n}\n\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}