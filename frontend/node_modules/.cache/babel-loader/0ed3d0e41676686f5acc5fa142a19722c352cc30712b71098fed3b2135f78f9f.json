{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Notifiche\", -1)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.alerts, alert => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: alert.title\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(alert.title), 1), _createTextVNode(\" - \" + _toDisplayString(alert.date) + \" at \" + _toDisplayString(alert.startTime), 1)]);\n  }), 128))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","alerts","alert","key","title","_toDisplayString","_createTextVNode","date","startTime"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Notifiche</h2>\n    <ul>\n      <li v-for=\"alert in alerts\" :key=\"alert.title\">\n        <strong>{{ alert.title }}</strong> - {{ alert.date }} at {{ alert.startTime }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client';\n\nexport default {\n  data() {\n    return {\n      alerts: [], \n      socket: null,\n    };\n  },\n  created() {\n    this.socket = io('http://site232432.tw.cs.unibo.it:8000', {\n      transports: ['websocket'], \n    });\n\n    this.socket.on('connect_error', (error) => {\n      console.log('Errore di connessione:', error);\n    });\n\n    this.socket.on('alert', (data) => {\n      console.log('Alert ricevuto:', data);\n\n      const loggedInUser = localStorage.getItem('username'); \n\n      if (data.userNome === loggedInUser) {\n        alert(`TITOLO: ${data.title}\\nOra di inizio: ${data.startTime}\\nDi utente: ${data.userNome}`);\n        this.alerts.push(data); \n      }\n    });\n\n    this.socket.on('connect', () => {\n      console.log('Connesso al server WebSocket');\n    });\n  },\n  unmounted() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  },\n};\n</script>\n\n<style scoped>\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  margin-bottom: 10px;\n}\nstrong {\n  color: #333;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAkB,YAAd,WAAS,QACbA,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QANXC,WAAA,CAI0BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBN,mBAAA,CAEK;MAFwBO,GAAG,EAAED,KAAK,CAACE;QACtCP,mBAAA,CAAkC,gBAAAQ,gBAAA,CAAvBH,KAAK,CAACE,KAAK,OAL9BE,gBAAA,CAK0C,KAAG,GAAAD,gBAAA,CAAGH,KAAK,CAACK,IAAI,IAAG,MAAI,GAAAF,gBAAA,CAAGH,KAAK,CAACM,SAAS,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}