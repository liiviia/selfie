{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport io from 'socket.io-client';\nexport default {\n  data() {\n    return {\n      // Lista per memorizzare gli alert ricevuti\n      alerts: [],\n      socket: null\n    };\n  },\n  created() {\n    // Connessione al server WebSocket\n    this.socket = io('http://localhost:3000'); // Modifica con l'URL corretto del tuo server\n\n    this.socket.on('connect_error', error => {\n      console.log('Errore di connessione:', error);\n    });\n\n    // Ascolta l'evento 'alert' inviato dal backend\n    this.socket.on('alert', data => {\n      console.log('Alert ricevuto:', data);\n      this.alerts.push(data); // Aggiungi l'alert ricevuto all'array degli alert\n    });\n    this.socket.on('connect', () => {\n      console.log('Connesso al server WebSocket');\n    });\n  },\n  unmounted() {\n    // Assicurati di chiudere la connessione WebSocket quando il componente viene distrutto\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["io","data","alerts","socket","created","on","error","console","log","push","unmounted","disconnect"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Notifiche</h2>\n      <!-- Lista di alert ricevuti -->\n      <ul>\n        <li v-for=\"alert in alerts\" :key=\"alert.title\">\n          <strong>{{ alert.title }}</strong> - {{ alert.date }} at {{ alert.startTime }}\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  import io from 'socket.io-client';\n  \n  export default {\n    data() {\n      return {\n        // Lista per memorizzare gli alert ricevuti\n        alerts: [],\n        socket: null,\n      };\n    },\n    created() {\n      // Connessione al server WebSocket\n      this.socket = io('http://localhost:3000');  // Modifica con l'URL corretto del tuo server\n\n      this.socket.on('connect_error', (error) => {\n  console.log('Errore di connessione:', error);\n});\n  \n      // Ascolta l'evento 'alert' inviato dal backend\n      this.socket.on('alert', (data) => {\n        console.log('Alert ricevuto:', data);\n        this.alerts.push(data); // Aggiungi l'alert ricevuto all'array degli alert\n      });\n\n      this.socket.on('connect', () => {\n    console.log('Connesso al server WebSocket');\n  });\n  \n    },\n    unmounted() {\n      // Assicurati di chiudere la connessione WebSocket quando il componente viene distrutto\n      if (this.socket) {\n        this.socket.disconnect();\n      }\n      \n\n    },\n    \n  };\n  </script>\n  \n  <style scoped>\n  /* Puoi aggiungere degli stili per gli alert */\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    margin-bottom: 10px;\n  }\n  strong {\n    color: #333;\n  }\n  </style>\n  "],"mappings":";AAaE,OAAOA,EAAC,MAAO,kBAAkB;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACD,MAAK,GAAIH,EAAE,CAAC,uBAAuB,CAAC,EAAG;;IAE5C,IAAI,CAACG,MAAM,CAACE,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;MAC/CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C,CAAC,CAAC;;IAEI;IACA,IAAI,CAACH,MAAM,CAACE,EAAE,CAAC,OAAO,EAAGJ,IAAI,IAAK;MAChCM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,IAAI,CAAC;MACpC,IAAI,CAACC,MAAM,CAACO,IAAI,CAACR,IAAI,CAAC,EAAE;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACE,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MAClCE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC,CAAC;EAEA,CAAC;EACDE,SAASA,CAAA,EAAG;IACV;IACA,IAAI,IAAI,CAACP,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACQ,UAAU,CAAC,CAAC;IAC1B;EAGF;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}