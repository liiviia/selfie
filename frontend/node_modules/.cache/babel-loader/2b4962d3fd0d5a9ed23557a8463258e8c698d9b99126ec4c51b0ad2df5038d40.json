{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const message = ref('');\n    const router = useRouter();\n    const email = localStorage.getItem('email');\n    const loggedInUsername = localStorage.getItem('username') || 'Guest';\n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      email: email,\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: loggedInUsername,\n      participants: [loggedInUsername],\n      type: 'singola',\n      altri: false\n    });\n    onMounted(() => {\n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n      fetchUsers();\n    });\n    const selectedParticipants = ref([]);\n    const users = ref([]);\n    const createEvent = async () => {\n      const currentDate = new Date();\n      const eventDate = new Date(newEvent.value.date);\n      currentDate.setHours(0, 0, 0, 0);\n      if (eventDate < currentDate) {\n        alert(\"Data non valida\");\n        return;\n      }\n      try {\n        const token = sessionStorage.getItem('token');\n        const author = newEvent.value.author;\n        const participants = newEvent.value.participants.filter(participant => participant !== author);\n        for (const participant of participants) {\n          const unavailableTimes = await fetchUnavailableTimes(participant);\n          for (const time of unavailableTimes) {\n            const unavailableDate = new Date(time.giorno);\n            const formattedDate = unavailableDate.toISOString().split('T')[0];\n            const unavailableStart = new Date(unavailableDate);\n            unavailableStart.setHours(time.startHour, time.startMinute, 0, 0);\n            const unavailableEnd = new Date(unavailableDate);\n            unavailableEnd.setHours(time.endHour, time.endMinute, 0, 0);\n            const startHour = unavailableStart.getHours();\n            const startMinute = unavailableStart.getMinutes();\n            const endHour = unavailableEnd.getHours();\n            const endMinute = unavailableEnd.getMinutes();\n            const eventDate = new Date(newEvent.value.date);\n            const eventStartTime = newEvent.value.startTime;\n            const [eventStartHour, eventStartMinute] = eventStartTime.split(':').map(Number);\n            const eventStartInMinutes = eventStartHour * 60 + eventStartMinute; // Converte l'orario evento in minuti\n\n            if (time.repeatDaily) {\n              const unavailableStartInMinutes = startHour * 60 + startMinute;\n              const unavailableEndInMinutes = endHour * 60 + endMinute;\n              if (eventStartInMinutes >= unavailableStartInMinutes && eventStartInMinutes <= unavailableEndInMinutes) {\n                alert(`L'orario dell'evento ${eventStartTime} è compreso nell'intervallo di indisponibilità ${startHour}:${startMinute} - ${endHour}:${endMinute} per l'utente: ${participant}`);\n                return;\n              }\n            } else {\n              const formattedEventDate = eventDate.toISOString().split('T')[0];\n              if (formattedEventDate === formattedDate) {\n                const unavailableStartInMinutes = startHour * 60 + startMinute;\n                const unavailableEndInMinutes = endHour * 60 + endMinute;\n                if (eventStartInMinutes >= unavailableStartInMinutes && eventStartInMinutes <= unavailableEndInMinutes) {\n                  alert(`L'orario dell'evento ${eventStartTime} è compreso nell'intervallo di indisponibilità ${startHour}:${startMinute} - ${endHour}:${endMinute} per l'utente: ${participant}`);\n                  return;\n                } else {\n                  console.log(\"orario non c'è\");\n                }\n              } else {\n                console.log(\"giorno non c'è\");\n              }\n            }\n          }\n        }\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n          email: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest',\n          participants: [],\n          type: 'singola',\n          altri: false\n        };\n        console.log('Evento creato con successo:', response.data);\n        message.value = 'Evento creato con successo!';\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale');\n        }, 3000);\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n    const fetchUnavailableTimes = async username => {\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await axios.get('/api/nonDisponibileGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.log(\"Errore recupero non disponibile user\", error);\n        return [];\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        users.value = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n    return {\n      newEvent,\n      selectedParticipants,\n      users,\n      message,\n      createEvent,\n      loggedInUsername\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","axios","setup","route","message","router","email","localStorage","getItem","loggedInUsername","newEvent","title","description","date","startTime","duration","location","isRecurring","frequency","numberOfOccurrences","notificationMechanism","notificationTime","repeatNotification","author","participants","type","altri","query","value","fetchUsers","selectedParticipants","users","createEvent","currentDate","Date","eventDate","setHours","alert","token","sessionStorage","filter","participant","unavailableTimes","fetchUnavailableTimes","time","unavailableDate","giorno","formattedDate","toISOString","split","unavailableStart","startHour","startMinute","unavailableEnd","endHour","endMinute","getHours","getMinutes","eventStartTime","eventStartHour","eventStartMinute","map","Number","eventStartInMinutes","repeatDaily","unavailableStartInMinutes","unavailableEndInMinutes","formattedEventDate","console","log","response","post","headers","Authorization","data","setTimeout","push","error","username","get","params"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/addEvent.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h2>Crea un Nuovo Evento</h2>\n    <form @submit.prevent=\"createEvent\">\n      <div>\n        <label for=\"title\">Titolo:</label>\n        <input type=\"text\" v-model=\"newEvent.title\" required=\"true\" />\n      </div>\n      <div>\n        <label for=\"description\">Descrizione:</label>\n        <textarea v-model=\"newEvent.description\" required=\"true\"></textarea>\n      </div>\n      <div>\n        <label for=\"date\">Data:</label>\n        <input type=\"date\" v-model=\"newEvent.date\" required=\"true\" />\n      </div>\n      <div>\n        <label for=\"startTime\">Ora di Inizio:</label>\n        <input type=\"time\" v-model=\"newEvent.startTime\" required=\"true\" />\n      </div>\n      <div>\n        <label for=\"duration\">Durata (minuti):</label>\n        <input type=\"number\" v-model=\"newEvent.duration\" required=\"true\" />\n      </div>\n      <div>\n        <label for=\"location\">Luogo:</label>\n        <input type=\"text\" v-model=\"newEvent.location\" required=\"true\"/>\n      </div>\n      <div>\n        <label>È Ripetibile?</label>\n        <input type=\"checkbox\" v-model=\"newEvent.isRecurring\" />\n      </div>\n      <div v-if=\"newEvent.isRecurring\">\n        <label for=\"frequency\">Frequenza:</label>\n        <select v-model=\"newEvent.frequency\">\n          <option value=\"daily\">Giornaliero</option>\n          <option value=\"weekly\">Settimanale</option>\n          <option value=\"monthly\">Mensile</option>\n        </select>\n        <div> \n          <label for=\"numberOfOccurrences\">Numero di Ripetizioni:</label>\n          <input type=\"number\" v-model=\"newEvent.numberOfOccurrences\"  />\n        </div>\n      </div>\n      <div>\n        <label>Meccanismo di Notifica:</label>\n        <div>\n          <input type=\"checkbox\" value=\"email\" v-model=\"newEvent.notificationMechanism\" /> Email\n          <input type=\"checkbox\" value=\"alert\" v-model=\"newEvent.notificationMechanism\" /> Alert\n        </div>\n        <div>\n          <label for=\"notificationTime\">Tempo di Notifica (minuti prima):</label>\n          <input type=\"number\" v-model=\"newEvent.notificationTime\" />\n        </div>\n        <div>\n          <label for=\"repeatNotification\">Quante volte ripetere la notifica:</label>\n          <input type=\"number\" v-model=\"newEvent.repeatNotification\" />\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"type\">Tipo di Evento:</label>\n        <select v-model=\"newEvent.type\" id=\"type\" class=\"form-input\">\n          <option value=\"singola\">Singola</option>\n          <option value=\"gruppo\">Gruppo</option>\n        </select>\n      </div>\n      \n      <div v-if=\"newEvent.type === 'gruppo'\">\n        <label>Partecipanti:</label>\n        <div v-for=\"user in users\" :key=\"user.username\" class=\"form-check\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\" \n            :value=\"user.username\" \n            :id=\"user.username\" \n            v-model=\"newEvent.participants\" \n            v-if=\"user.username !== loggedInUsername\"  \n          />\n          <label class=\"form-check-label\" :for=\"user.username\">\n            {{ user.username }} \n          </label>\n        </div>\n      </div>\n\n      <button type=\"submit\">Crea Evento</button>\n    </form>\n    <p v-if=\"message\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n \n  \n  setup() {\n    const route = useRoute();\n    const message = ref(''); \n    const router = useRouter();\n    const email = localStorage.getItem('email');\n    const loggedInUsername = localStorage.getItem('username') || 'Guest'; \n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      email: email,\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: loggedInUsername,\n      participants: [loggedInUsername] , \n      type: 'singola',\n      altri: false,\n    });\n\n    onMounted(() => {\n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n      fetchUsers(); \n    });\n\n    const selectedParticipants = ref([]);\n    const users = ref([]);\n    \n    const createEvent = async () => {\n\n      const currentDate = new Date();\n  const eventDate = new Date(newEvent.value.date);\n\n  currentDate.setHours(0, 0, 0, 0);\n\n  if (eventDate < currentDate) {\n      alert(\"Data non valida\"); \n    return; \n  }\n      try {\n        const token = sessionStorage.getItem('token');\n        const author = newEvent.value.author;\n        const participants = newEvent.value.participants.filter(participant => participant !== author);\n        \n       \n  \n        for (const participant of participants) {\n    const unavailableTimes = await fetchUnavailableTimes(participant);\n\n    for (const time of unavailableTimes) {\n        const unavailableDate = new Date(time.giorno);\n        const formattedDate = unavailableDate.toISOString().split('T')[0];\n\n\n\n\n\n        const unavailableStart = new Date(unavailableDate);\n        unavailableStart.setHours(time.startHour, time.startMinute, 0, 0);\n\n\n        const unavailableEnd = new Date(unavailableDate);\n        unavailableEnd.setHours(time.endHour, time.endMinute, 0, 0);\n\n\n        const startHour = unavailableStart.getHours();\n        const startMinute = unavailableStart.getMinutes();\n        const endHour = unavailableEnd.getHours();\n        const endMinute = unavailableEnd.getMinutes();\n\n        \n\n\n        const eventDate = new Date(newEvent.value.date);\n        const eventStartTime = newEvent.value.startTime;\n        const [eventStartHour, eventStartMinute] = eventStartTime.split(':').map(Number);\n        const eventStartInMinutes = eventStartHour * 60 + eventStartMinute; // Converte l'orario evento in minuti\n\n\n        if (time.repeatDaily) {\n\n            const unavailableStartInMinutes = startHour * 60 + startMinute;\n            const unavailableEndInMinutes = endHour * 60 + endMinute;\n\n            if (eventStartInMinutes >= unavailableStartInMinutes && eventStartInMinutes <= unavailableEndInMinutes) {\n                alert(`L'orario dell'evento ${eventStartTime} è compreso nell'intervallo di indisponibilità ${startHour}:${startMinute} - ${endHour}:${endMinute} per l'utente: ${participant}`);\n                return;\n            }\n\n        } else {\n            const formattedEventDate = eventDate.toISOString().split('T')[0];\n\n            if (formattedEventDate === formattedDate) {\n                const unavailableStartInMinutes = startHour * 60 + startMinute;\n                const unavailableEndInMinutes = endHour * 60 + endMinute;\n\n                if (eventStartInMinutes >= unavailableStartInMinutes && eventStartInMinutes <= unavailableEndInMinutes) {\n                    alert(`L'orario dell'evento ${eventStartTime} è compreso nell'intervallo di indisponibilità ${startHour}:${startMinute} - ${endHour}:${endMinute} per l'utente: ${participant}`);\n                    \n                    return;\n                }\n                 else {\n                  console.log(\"orario non c'è\");\n                 }\n            }\n               else {\n                console.log(\"giorno non c'è\");\n               }\n        }\n\n\n\n\n          }\n        }\n\n        \n\n     \n    \n  \n\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        \n        \n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n          email: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest',\n          participants: [], \n          type:'singola',\n          altri: false,\n        };\n\n        console.log('Evento creato con successo:', response.data);\n        message.value = 'Evento creato con successo!';\n        \n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale');\n        }, 3000);\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n\n   const fetchUnavailableTimes = async (username) => {\n\n    const token = sessionStorage.getItem('token');\n    try {\n        const response = await axios.get('/api/nonDisponibileGET', {\n            headers: {\n                Authorization: `Bearer ${token}` \n            },\n            params: { username: username },\n        });\n        return response.data;\n    } catch (error) {\n        console.log(\"Errore recupero non disponibile user\", error);\n        return[];\n    }\n};\n\n    \n\n\n\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        users.value = response.data; \n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n    return {\n      newEvent,\n      selectedParticipants,\n      users,\n      message,\n      createEvent,\n      loggedInUsername\n    };\n  },\n\n};\n</script>\n\n<style scoped>\n.event-form {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #15172b;\n  border-radius: 12px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1); \n  transition: transform 0.3s ease; \n  box-sizing: border-box;\n}\n\n.event-form:hover {\n  transform: translateY(-5px); \n}\n\n.event-form h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  font-size: 28px;\n}\n\n.event-form div {\n  margin-bottom: 20px;\n}\n\n.event-form label {\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  display: block;\n}\n\n.event-form input[type=\"text\"],\n.event-form input[type=\"date\"],\n.event-form input[type=\"time\"],\n.event-form input[type=\"number\"],\n.event-form textarea,\n.event-form select {\n  padding: 12px;\n  border: 2px solid #ced4da;\n  border-radius: 8px;\n  font-size: 16px;\n  width: 100%;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.event-form input:focus,\n.event-form textarea:focus,\n.event-form select:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25); \n  outline: none;\n}\n\n.event-form textarea {\n  height: 120px;\n  resize: none;\n}\n\n.event-form button {\n  padding: 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  font-family: 'Poppins', sans-serif;\n  transition: background-color 0.3s ease, transform 0.2s;\n}\n\n.event-form button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\n.event-form p {\n  text-align: center;\n  margin-top: 20px;\n  color: #28a745;\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n}\n\n.event-form input,\n.event-form textarea,\n.event-form button {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \n}\n\n.event-form div {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.back-home-link {\n  color: #0016db;\n  font-family: 'Poppins', sans-serif;\n  text-decoration: none;\n  margin-bottom: 20px;\n  transition: color 0.3s ease;\n  text-align: left;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}