{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]);\n    const queryDate = computed(() => route.query.date);\n\n    // Metodi per la cancellazione dell'attivit√†\n    const confirmDeleteActivity = id => {\n      if (confirm(\"Sicuro di voler eliminare questa Attivit√†?\")) {\n        deleteActivities(id);\n      }\n    };\n    const deleteActivities = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        console.log('Attivit√† eliminata');\n        fetchEvents(); // Ricarica gli eventi dopo la cancellazione\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attivit√†:', error);\n      }\n    };\n\n    // Metodi per la cancellazione dell'evento\n    const confirmDeleteEvent = id => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id);\n      }\n    };\n    const deleteEvents = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento eliminato');\n        fetchEvents(); // Ricarica gli eventi dopo la cancellazione\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n\n    // Funzioni per navigare\n    const navigateToAddEvent = () => {\n      router.push({\n        path: '/addEvent',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddActivity = () => {\n      router.push({\n        path: '/addActivities',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddPomodoro = () => {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n\n    // Funzione per recuperare eventi\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n        const response = await axios.get('/api/events/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username,\n            date\n          }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attivit√† e dei pomodori:', error);\n      }\n    };\n    const formatDate = dateString => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date) ? date.toLocaleDateString('it-IT', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }) : 'Data non valida';\n    };\n    onMounted(fetchEvents);\n    return {\n      events,\n      activities,\n      pomodoros,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro,\n      confirmDeleteActivity,\n      // Ritorna il metodo per l'uso nel template\n      confirmDeleteEvent // Ritorna il metodo per l'uso nel template\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRoute","useRouter","axios","setup","route","router","events","activities","pomodoros","queryDate","query","date","confirmDeleteActivity","id","confirm","deleteActivities","token","sessionStorage","getItem","username","localStorage","delete","headers","Authorization","params","console","log","fetchEvents","error","confirmDeleteEvent","deleteEvents","navigateToAddEvent","push","path","value","navigateToAddActivity","navigateToAddPomodoro","author","response","get","Array","isArray","data","activityResponse","pomodoroResponse","formatDate","dateString","Date","isNaN","toLocaleDateString","year","month","day"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Eventi, Attivit√† e Pomodori per {{ formatDate(queryDate) }}</h2>\n    <div class=\"content-container\">\n      <!-- Sezione Attivit√† -->\n      <div class=\"section activities-section\">\n        <h3>LE TUE ATTIVIT√Ä:</h3>\n        <div v-if=\"activities.length > 0\">\n          <div v-for=\"activity in activities\" :key=\"activity._id\" class=\"item-container\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ activity.title }}</h4>\n            <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <p v-if=\"activity.type === 'gruppo'\" style=\"color: #FF6347;\">\n              Attivit√† di gruppo creata da: {{ activity.author }}<br>\n              Gruppo composto da: {{ activity.participants.join(', ') }}\n            </p>\n            <button @click=\"confirmDeleteActivity(activity._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n          </div>\n        </div>\n        <p v-else>Nessuna attivit√† per questa data.</p>\n        <div class=\"button-container\">\n           <button class=\"fixed-button\" @click=\"navigateToAddActivity\" style=\"background:#f4a460;\">\n            Aggiungi attivita\n            </button>\n        </div>\n      </div>\n      \n      <!-- Sezione Eventi -->\n      <div class=\"section events-section\">\n        <h3>I TUOI EVENTI:</h3>\n        <div v-if=\"events.length > 0\">\n          <div v-for=\"event in events\" :key=\"event._id\" class=\"item-container\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ event.title }}</h4>\n            <p>Data: {{ formatDate(event.date) }}</p>\n            <p>Descrizione: {{ event.description }}</p>\n            <button @click=\"confirmDeleteEvent(event._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n          </div>\n        </div>\n        <p v-else>Nessun evento per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddEvent\" style=\"background:#f4a460;\">\n            Aggiungi evento\n            </button>\n        </div>\n      </div>\n      \n      <!-- Sezione Pomodori -->\n      <div class=\"section pomodoros-section\">\n        <h3>I TUOI POMODORI:</h3>\n        <div v-if=\"pomodoros.length > 0\">\n          <div v-for=\"pomodoro in pomodoros\" :key=\"pomodoro._id\" class=\"item-container\">\n            <h4>Pomodoro Sessione</h4>\n            <p>Data: {{ formatDate(pomodoro.giorno) }}</p>\n            <p>Tempo di studio: {{ pomodoro.tempoStudio }} minuti</p>\n            <p>Tempo di pausa: {{ pomodoro.tempoPausa }} minuti</p>\n            <p>Ripetizioni: {{ pomodoro.ripetizioni }}</p>\n            <button @click=\"confirmDelete(activity._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n          </div>\n        </div>\n        <p v-else>Nessun pomodoro per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddPomodoro\" style=\"background:#f4a460;\">\n            Aggiungi pomodoro\n            </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]); \n    const queryDate = computed(() => route.query.date);\n\n    // Metodi per la cancellazione dell'attivit√†\n    const confirmDeleteActivity = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa Attivit√†?\")) {\n        deleteActivities(id); \n      }\n    };\n\n    const deleteActivities = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username } \n        });\n        console.log('Attivit√† eliminata');\n        fetchEvents(); // Ricarica gli eventi dopo la cancellazione\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attivit√†:', error);\n      }\n    };\n\n    // Metodi per la cancellazione dell'evento\n    const confirmDeleteEvent = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id); \n      }\n    };\n\n    const deleteEvents = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Evento eliminato');\n        fetchEvents(); // Ricarica gli eventi dopo la cancellazione\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n\n    // Funzioni per navigare\n    const navigateToAddEvent = () => {\n      router.push({ path: '/addEvent', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddActivity = () => {\n      router.push({ path: '/addActivities', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddPomodoro = () => {\n      router.push({ path: '/pomodoroTempo', query: { date: queryDate.value } });\n    };\n\n    // Funzione per recuperare eventi\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username, date }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attivit√† e dei pomodori:', error);\n      }\n    };\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n    onMounted(fetchEvents);\n\n    return {\n      events,\n      activities,\n      pomodoros, \n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro,\n      confirmDeleteActivity, // Ritorna il metodo per l'uso nel template\n      confirmDeleteEvent,     // Ritorna il metodo per l'uso nel template\n    };\n  }\n};\n\n</script>\n\n<style scoped>\n.button-container {\n  margin-top: auto; /* Spinge il contenitore dei bottoni verso il basso */\n  margin-bottom: 10px; /* Margine sotto il contenitore dei bottoni */\n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n  padding: 20px;\n  margin-left: -250px;\n}\n\n.activities-section {\n  flex: 1.5; /* Rendi la sezione sinistra pi√π grande */\n  background-color: #f9f9f9;\n}\n\n.events-section {\n  flex: 1.5; /* Rendi la sezione centrale pi√π grande */\n  background-color: #e6f7ff;\n}\n\n.pomodoros-section {\n  flex: 1.5; /* Rendi la sezione destra pi√π grande */\n  margin-left: 10px; /* Spingi leggermente a destra */\n  background-color: #ffe6e6;\n}\n\n.section {\n  margin-right: 100px;\n  min-width: 500px;\n  flex: 1.5; \n  padding: 25px;\n  border: 1px solid #ddd; /* Bordi */\n  border-radius: 10px; /* Bordi arrotondati */\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* Ombra per profondit√† */\n  background-color: rgba(255, 255, 255, 0.8); /* Sfondo bianco con trasparenza */\n  display: flex; /* Imposta display a flex */\n  flex-direction: column; /* Dispone gli elementi in colonna */\n  justify-content: space-between; /* Spinge gli elementi verso le estremit√† */\n}\n\n.section:hover {\n  transform: scale(1.02); /* Leggero ingrandimento al passaggio del mouse */\n}\n\n/* Sezioni specifiche per colori di sfondo */\n.activities-section {\n  background-color: rgba(249, 249, 249, 0.8); /* Colore chiaro con trasparenza per la sezione attivit√† */\n}\n\n.events-section {\n  background-color: rgba(230, 247, 255, 0.8); /* Colore chiaro con trasparenza per la sezione eventi */\n}\n\n.pomodoros-section {\n  background-color: rgba(255, 230, 230, 0.8); /* Colore chiaro con trasparenza per la sezione pomodori */\n}\n\n/* Stile della linea orizzontale */\nhr {\n  border: 0; /* Rimuovi il bordo predefinito */\n  height: 1px; /* Altezza della linea */\n  background-color: #ddd; /* Colore della linea */\n  margin: 10px 0; /* Margini sopra e sotto la linea */\n}\n.item-container {\n  background-color: rgba(255, 255, 255, 0.9); /* Sfondo bianco semi-trasparente */\n  border: 1px solid #ddd; /* Bordi */\n  border-radius: 8px; /* Bordi arrotondati */\n  padding: 15px; /* Padding interno */\n  margin-bottom: 15px; /* Margine sotto il contenitore */\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Ombra per profondit√† */\n  position: relative; /* Imposta posizione relativa per l'elemento */\n}\n\n.delete-btn {\n  position: absolute; /* Posizionamento assoluto rispetto al contenitore */\n  bottom: 10px; /* Distanza dal fondo */\n  right: 10px; /* Distanza da destra */\n  background: none; /* Rimuovi sfondo */\n  border: none; /* Rimuovi bordo */\n  cursor: pointer; /* Cambia cursore */\n  font-size: 1.2em; /* Dimensione del font */\n  color: #e74c3c; /* Colore rosso */\n}\n\n.delete-btn:hover {\n  color: #c0392b; /* Colore rosso pi√π scuro al passaggio del mouse */\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}