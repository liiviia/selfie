{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"calendar\"\n};\nconst _hoisted_3 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_4 = {\n  class: \"calendar-body\"\n};\nconst _hoisted_5 = {\n  class: \"weekdays\"\n};\nconst _hoisted_6 = {\n  class: \"days\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"day-content\"\n};\nconst _hoisted_9 = {\n  class: \"day-number\"\n};\nconst _hoisted_10 = {\n  class: \"indicators\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"event-dot\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"activity-dot\"\n};\nconst _hoisted_13 = {\n  key: 2,\n  class: \"pomodoro-dot\"\n};\nconst _hoisted_14 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_15 = {\n  class: \"modal-content\",\n  style: {\n    \"background\": \"linear-gradient(to bottom, #f4a460, #eee8aa)\"\n  }\n};\nconst _hoisted_16 = {\n  class: \"modal-body\"\n};\nconst _hoisted_17 = {\n  class: \"time-picker\"\n};\nconst _hoisted_18 = {\n  class: \"time-picker\"\n};\nconst _hoisted_19 = {\n  class: \"repeat-option\"\n};\nconst _hoisted_20 = {\n  class: \"modal-footer\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.prevMonth && _ctx.prevMonth(...args))\n  }, \"<\"), _createElementVNode(\"h2\", null, _toDisplayString(_ctx.currentMonthYear), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.nextMonth && _ctx.nextMonth(...args))\n  }, \">\")]), _cache[11] || (_cache[11] = _createStaticVNode(\"<div class=\\\"legend\\\" data-v-61918852><div class=\\\"legend-item\\\" data-v-61918852><span class=\\\"event-dot\\\" data-v-61918852></span> Eventi </div><div class=\\\"legend-item\\\" data-v-61918852><span class=\\\"activity-dot\\\" data-v-61918852></span> Attività </div><div class=\\\"legend-item\\\" data-v-61918852><span class=\\\"pomodoro-dot\\\" data-v-61918852></span> Pomodori </div></div>\", 1)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weekdays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day\n    }, _toDisplayString(day), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.calendarDays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day.date,\n      class: _normalizeClass({\n        'current-month': day.currentMonth,\n        'other-month': !day.currentMonth,\n        'today': day.isToday\n      }),\n      onClick: $event => _ctx.selectDate(day)\n    }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(day.dayOfMonth), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [day.hasEvents ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11)) : _createCommentVNode(\"v-if\", true), day.hasActivities ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12)) : _createCommentVNode(\"v-if\", true), day.hasPomodoros ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13)) : _createCommentVNode(\"v-if\", true)])])], 10 /* CLASS, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.openModal && _ctx.openModal(...args)),\n    style: {\n      \"background\": \"#f4a460\",\n      \"margin-bottom\": \"50px\"\n    }\n  }, \" non disponibile? segnalo qua! \"), _ctx.openNotificationModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal\",\n    onClick: _cache[10] || (_cache[10] = _withModifiers((...args) => _ctx.closeNotificationModal && _ctx.closeNotificationModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"modal-header\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"modal-title fs-5\"\n  }, \"Notifiche\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [_cache[18] || (_cache[18] = _createElementVNode(\"p\", null, \"Non disponibile? segnalalo qua!\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => _ctx.submitForm && _ctx.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_17, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"startTime\"\n  }, \"Ora di inizio:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.startHour = $event),\n    min: \"0\",\n    max: \"23\",\n    placeholder: \"Ore\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.startHour]]), _cache[13] || (_cache[13] = _createTextVNode(\" : \")), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.startMinute = $event),\n    min: \"0\",\n    max: \"59\",\n    placeholder: \"Minuti\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.startMinute]])]), _createElementVNode(\"div\", _hoisted_18, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"endTime\"\n  }, \"Ora di fine:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.endHour = $event),\n    min: \"0\",\n    max: \"23\",\n    placeholder: \"Ore\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.endHour]]), _cache[15] || (_cache[15] = _createTextVNode(\" : \")), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.endMinute = $event),\n    min: \"0\",\n    max: \"59\",\n    placeholder: \"Minuti\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.endMinute]])]), _createElementVNode(\"div\", _hoisted_19, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    for: \"repeatDaily\"\n  }, \"Ripeti tutti i giorni:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.repeatDaily = $event),\n    id: \"repeatDaily\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, _ctx.repeatDaily]])]), _cache[17] || (_cache[17] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Conferma Orario\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.closeNotificationModal && _ctx.closeNotificationModal(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \"Chiudi\")])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","_ctx","prevMonth","_toDisplayString","currentMonthYear","nextMonth","_createStaticVNode","_hoisted_4","_hoisted_5","_Fragment","_renderList","weekdays","day","_hoisted_6","calendarDays","date","_normalizeClass","currentMonth","isToday","$event","selectDate","_hoisted_8","_hoisted_9","dayOfMonth","_hoisted_10","hasEvents","_hoisted_11","_createCommentVNode","hasActivities","_hoisted_12","hasPomodoros","_hoisted_13","_hoisted_7","openModal","openNotificationModal","_withModifiers","closeNotificationModal","_hoisted_14","_hoisted_15","_hoisted_16","onSubmit","submitForm","_hoisted_17","for","type","startHour","min","max","placeholder","_createTextVNode","startMinute","_hoisted_18","endHour","endMinute","_hoisted_19","repeatDaily","id","_hoisted_20"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/calendarEvent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button @click=\"prevMonth\">&lt;</button>\n      <h2>{{ currentMonthYear }}</h2>\n      <button @click=\"nextMonth\">&gt;</button>\n    </div>\n\n     <div class=\"legend\">\n      <div class=\"legend-item\">\n        <span class=\"event-dot\"></span> Eventi\n      </div>\n      <div class=\"legend-item\">\n        <span class=\"activity-dot\"></span> Attività\n      </div>\n      <div class=\"legend-item\">\n        <span class=\"pomodoro-dot\"></span> Pomodori\n      </div>\n    </div>\n\n    <div class=\"calendar-body\">\n      <div class=\"weekdays\">\n        <div v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\n      </div>\n      <div class=\"days\">\n        <div \n          v-for=\"day in calendarDays\" \n          :key=\"day.date\" \n          :class=\"{ 'current-month': day.currentMonth, 'other-month': !day.currentMonth, 'today': day.isToday }\"\n          @click=\"selectDate(day)\"\n        >\n          <div class=\"day-content\">\n            <span class=\"day-number\">{{ day.dayOfMonth }}</span>\n            <div class=\"indicators\">\n              <span v-if=\"day.hasEvents\" class=\"event-dot\"></span>\n              <span v-if=\"day.hasActivities\" class=\"activity-dot\"></span>\n              <span v-if=\"day.hasPomodoros\" class=\"pomodoro-dot\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button class=\"fixed-button\" @click=\"openModal\" style=\"background:#f4a460; margin-bottom: 50px;\">\n  non disponibile? segnalo qua!\n</button>\n\n<div v-if=\"openNotificationModal\" class=\"modal\" @click.self=\"closeNotificationModal\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\" style=\"background: linear-gradient(to bottom, #f4a460, #eee8aa);\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title fs-5\">Notifiche</h1>\n          </div>\n          <div class=\"modal-body\">\n            <p>Non disponibile? segnalalo qua!</p>\n            <form @submit.prevent=\"submitForm\">\n      <div class=\"time-picker\">\n        <label for=\"startTime\">Ora di inizio:</label>\n        <input type=\"number\" v-model=\"startHour\" min=\"0\" max=\"23\" placeholder=\"Ore\" /> :\n        <input type=\"number\" v-model=\"startMinute\" min=\"0\" max=\"59\" placeholder=\"Minuti\" />\n      </div>\n      \n      <div class=\"time-picker\">\n        <label for=\"endTime\">Ora di fine:</label>\n        <input type=\"number\" v-model=\"endHour\" min=\"0\" max=\"23\" placeholder=\"Ore\" /> :\n        <input type=\"number\" v-model=\"endMinute\" min=\"0\" max=\"59\" placeholder=\"Minuti\" />\n      </div>\n\n      <div class=\"repeat-option\">\n        <label for=\"repeatDaily\">Ripeti tutti i giorni:</label>\n        <input type=\"checkbox\" v-model=\"repeatDaily\" id=\"repeatDaily\" />\n      </div>\n      \n      <button type=\"submit\">Conferma Orario</button>\n    </form>\n          \n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeNotificationModal\" style=\"background:#f4a460;\">Chiudi</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n</div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const currentDate = ref(new Date());\n    const weekdays = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\n    const eventsMap = ref({});\n    const activityMap = ref({});\n    const pomodoroMap = ref({});\n    const calendarDays = ref([]);\n    const openNotificationModal = ref(false);\n\n    const currentMonthYear = computed(() => {\n      return currentDate.value.toLocaleString('it-IT', { month: 'long', year: 'numeric' });\n    });\n\n    function openModal() {\n      openNotificationModal.value = true;\n    }\n    function closeNotificationModal() {\n      openNotificationModal.value = false;\n    }\n\n    function formatDateToLocal(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); \n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n\n    function createDayObject(date, currentMonth, today) {\n      const localDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n      const dateString = formatDateToLocal(localDate); \n      return {\n        date: localDate,\n        dayOfMonth: localDate.getDate(),\n        currentMonth: currentMonth,\n        isToday: localDate.toDateString() === today.toDateString(),\n        hasEvents: !!eventsMap.value[dateString],\n        hasActivities: !!activityMap.value[dateString],\n        hasPomodoros: !!pomodoroMap.value[dateString],\n      };\n    }\n\n    function updateCalendarDays() {\n      const year = currentDate.value.getFullYear();\n      const month = currentDate.value.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const calendarArray = [];\n      const today = new Date();\n\n      for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n        const day = new Date(year, month, -i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      for (let i = 1; i <= daysInMonth; i++) {\n        const day = new Date(year, month, i);\n        calendarArray.push(createDayObject(day, true, today));\n      }\n\n      const remainingDays = 42 - calendarArray.length;\n      for (let i = 1; i <= remainingDays; i++) {\n        const day = new Date(year, month + 1, i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      calendarDays.value = calendarArray;\n    }\n\n    async function fetchEvents() {\n  try {\n    const username = localStorage.getItem('username');\n    const token = sessionStorage.getItem('token');\n    if (!username || !token) {\n      console.error('Username o token mancante. L\\'utente potrebbe non essere autenticato.');\n      return;\n    }\n\n    const response = await axios.get(`/api/eventsGET`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { author: username }\n    });\n    const events = response.data;\n\n    const activityResponse = await axios.get(`/api/activitiesGET`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n    const activities = activityResponse.data;\n\n    const pomodoroResponse = await axios.get(`/api/poms`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n    const pomodoros = pomodoroResponse.data;\n\n    console.log(\"Risposta API Pomodori:\", pomodoroResponse.data);\n\n    eventsMap.value = {};\n    activityMap.value = {};\n    pomodoroMap.value = {};\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    events\n      .filter(event => {\n        const eventDate = new Date(event.date);\n        eventDate.setHours(0, 0, 0, 0);\n        return eventDate >= today;\n      })\n      .forEach(event => {\n        const eventDate = new Date(event.date);\n        const dateString = formatDateToLocal(eventDate);\n        eventsMap.value[dateString] = true;\n      });\n\n    activities\n      .filter(activity => {\n        const activityDate = new Date(activity.deadline);\n        activityDate.setHours(0, 0, 0, 0);\n        return activityDate >= today; \n      })\n      .forEach(activity => {\n        const activityDate = new Date(activity.deadline);\n        const dateString = formatDateToLocal(activityDate); \n        activityMap.value[dateString] = true;\n      });\n\n    pomodoros\n      .filter(pomodoro => {\n        const pomodoroDate = new Date(pomodoro.giorno);\n        pomodoroDate.setHours(0, 0, 0, 0);\n        return pomodoroDate >= today; \n      })\n      .forEach(pomodoro => {\n        const pomodoroDate = new Date(pomodoro.giorno);\n        const dateString = formatDateToLocal(pomodoroDate);\n        pomodoroMap.value[dateString] = true;\n      });\n\n    updateCalendarDays();\n  } catch (error) {\n    if (error.response) {\n      console.error('Errore nella risposta del server:', error.response.status, error.response.data);\n    } else if (error.request) {\n      console.error('Nessuna risposta ricevuta dal server:', error.request);\n    } else {\n      console.error('Errore durante l\\'impostazione della richiesta:', error.message);\n    }\n  }\n}\n\n\n\nasync function submitForm() {\n        try {\n            const response = await fetch('/nonDisponibile', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${this.token}`, // Assicurati di avere il token di autenticazione\n                },\n                body: JSON.stringify({\n                    startHour: this.startHour,\n                    startMinute: this.startMinute,\n                    endHour: this.endHour,\n                    endMinute: this.endMinute,\n                    repeatDaily: this.repeatDaily,\n                }),\n            });\n\n            if (response.ok) {\n                alert('Indisponibilità salvata con successo');\n                this.closeNotificationModal();\n            } else {\n                alert('Errore durante il salvataggio dell\\'indisponibilità');\n            }\n        } catch (error) {\n            console.error('Errore durante la richiesta:', error);\n            alert('Errore del server');\n        }\n    },\n}\n\n\n\n    function prevMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() - 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function nextMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() + 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function selectDate(day) {\n      const username = localStorage.getItem('username');\n      const dateString = formatDateToLocal(day.date); \n      console.log(\"dateString\", dateString);\n      router.push({\n        name: 'eventDayCalendar',\n        query: { author: username, date: dateString }\n      });\n    }\n\n   onMounted(async () => {\n      await fetchEvents();\n      updateCalendarDays();\n\n      \n\n      \n\n  \n    });\n\n    watch(currentDate, async () => {\n      await fetchEvents();\n      updateCalendarDays();\n    });\n\n    return {\n      currentDate,\n      weekdays,\n      currentMonthYear,\n      calendarDays,\n      prevMonth,\n      nextMonth,\n      selectDate,\n      openNotificationModal,\n      openModal,\n      closeNotificationModal\n    };\n  }, \n\n};\n</script>\n\n<style scoped>\n\n.modal {\n  display: block;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5); /* Sfondo trasparente */\n  z-index: 1000; /* Assicurati che il modal sia sopra gli altri elementi */\n}\n\n.modal-dialog {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.modal-content {\n  background: linear-gradient(to bottom, #f4a460, #eee8aa);\n}\n\n.fixed-button {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 10px 20px;\n  background-color: #007bff; \n  color: white; \n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  z-index: 1000; \n}\n\n.fixed-button:hover {\n  background-color: #0056b3; \n}\n\n.calendar {\n  max-width: 800px;\n  margin: 0 auto;\n  font-family: Arial, sans-serif;\n  background-color: #fff; \n  border-radius: 10px; \n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); \n  padding: 20px; \n  background: linear-gradient(to bottom, #f4a460, #eee8aa);\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.calendar-header button {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-size: 16px;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.calendar-header button:hover {\n  background-color: #0056b3; \n}\n\n.weekdays, .days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px; \n}\n\n.weekdays div {\n  background-color: #f0f0f0;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  border-radius: 5px; \n}\n\n.days div {\n  border: 1px solid #ddd;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n  height: 100px;\n  border-radius: 10px; \n  transition: transform 0.2s, background-color 0.3s ease;\n  background-color: #fff;\n}\n\n.days div:hover {\n  background-color: #f0f0f0;\n  transform: scale(1.05); \n}\n\n.day-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n}\n\n.day-number {\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.indicators {\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  margin-top: 5px;\n}\n\n.legend {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 15px;\n  gap: 15px;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.event-dot, .activity-dot, .pomodoro-dot {\n  height: 8px; \n  width: 8px;\n  border-radius: 50%; \n  display: inline-block;\n}\n\n.event-dot {\n  background-color: blue;\n}\n\n.activity-dot {\n  background-color: green;\n}\n\n.pomodoro-dot {\n  background-color: red;\n}\n\n.other-month {\n  opacity: 0.5;\n}\n\n.today {\n  background-color: #e6f2ff;\n  font-weight: bold;\n  border-radius: 10px; \n  box-shadow: 0 0 10px rgba(0, 123, 255, 0.3); \n}\n\n@media (max-width: 600px) {\n  .calendar {\n    padding: 10px; \n  }\n\n  .calendar-header button {\n    font-size: 14px;\n    padding: 8px; \n  }\n\n  .weekdays {\n    grid-template-columns: repeat(7, 1fr); \n  }\n\n  .days {\n    grid-template-columns: repeat(7, 1fr); \n  }\n  .weekdays div {\n  display: flex;\n  justify-content: center; \n  align-items: center;\n  text-align: center; \n}\n\n.days div {\n  display: flex;\n  flex-direction: column; \n  justify-content: center; \n  align-items: center; \n  text-align: center; \n}\n\n\n  .days div {\n    height: 70px; \n    font-size: 1.0em; \n    display: flex; \n    flex-direction: column;\n    align-items: center; \n    justify-content: center; \n    padding: 5px; \n    border: 1px solid transparent; \n    padding-left: 1000px; \n  }\n\n  .days div:nth-child(7n + 1) {\n    padding-left: 0; \n  }\n\n  .days div:not(:nth-child(7n + 1)) {\n    padding-left: 0px; \n  }\n\n  .day-number {\n    font-size: 1.2em;\n    font-weight: bold; \n    margin-bottom: 5px; \n  }\n\n  .indicators {\n    justify-content: center; \n  }\n\n  .other-month {\n    opacity: 0.5; \n  }\n\n  .today {\n    background-color: #e6f2ff;\n    font-weight: bold;\n    border-radius: 10px; \n    box-shadow: 0 0 10px rgba(0, 123, 255, 0.3); \n  }\n  .calendar {\n  max-width: 600px; \n  padding: 10px; \n}\n\n.calendar-header button {\n  font-size: 14px; \n  padding: 8px 12px; \n}\n\n.weekdays div, .days div {\n  padding: 5px; \n  font-size: 0.9em; \n}\n\n.days div {\n  height: 80px; \n}\n\n.day-number {\n  font-size: 1em; \n}\n\n}\n\n\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}