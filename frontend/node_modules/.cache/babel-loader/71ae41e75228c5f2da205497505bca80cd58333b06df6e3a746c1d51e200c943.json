{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { marked } from 'marked';\nexport default {\n  data() {\n    return {\n      newNote: {\n        heading: '',\n        access: 'private',\n        content: ''\n      },\n      notes: []\n    };\n  },\n  async created() {\n    this.fetchNotes();\n  },\n  methods: {\n    async fetchNotes() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato');\n          return;\n        }\n        const response = await axios.get('/api/notesGET', {\n          params: {\n            username: username\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero delle note:', error);\n      }\n    },\n    async addNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato, impossibile creare la nota');\n          return;\n        }\n        this.newNote.author = username;\n        const response = await axios.post('/api/notes', this.newNote, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Nota aggiunta:', response.data);\n        this.newNote = {\n          heading: '',\n          content: '',\n          access: 'private'\n        };\n        this.fetchNotes();\n      } catch (error) {\n        console.error(\"Errore nell'aggiunta della nota:\", error);\n      }\n    },\n    editNote(id) {\n      this.$router.push(`/edit-note/${id}`);\n    },\n    async deleteNote(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/notesRIM/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Nota eliminata');\n        this.fetchNotes();\n      } catch (error) {\n        console.error(\"Errore nell'eliminazione della nota:\", error);\n      }\n    },\n    renderMarkdown(content) {\n      if (!content) return '';\n      return marked(content);\n    }\n  }\n};","map":{"version":3,"names":["axios","marked","data","newNote","heading","access","content","notes","created","fetchNotes","methods","token","sessionStorage","getItem","username","localStorage","console","error","response","get","params","headers","Authorization","addNote","author","post","log","editNote","id","$router","push","deleteNote","delete","renderMarkdown"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/ToDoApp.vue"],"sourcesContent":["<template>\n  <div class=\"note-container\">\n    <h1>Aggiungi una Nota</h1>\n    <form @submit.prevent=\"addNote\" class=\"note-form\">\n      <div class=\"form-group\">\n        <label for=\"heading\">Titolo:</label>\n        <input type=\"text\" v-model=\"newNote.heading\" id=\"heading\" required class=\"form-input\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"content\">Contenuto(possibile scrivere in markdwon):</label>\n        <textarea v-model=\"newNote.content\" id=\"content\" rows=\"4\" class=\"form-textarea\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"access\">Livello di Accesso:</label>\n        <select v-model=\"newNote.access\" id=\"access\" class=\"form-input\">\n          <option value=\"public\">Pubblico</option>\n          <option value=\"private\">Privato</option>\n          <option value=\"restricted\">Riservato</option>\n        </select>\n      </div>\n\n\n      <button type=\"submit\" class=\"submit-button\">Aggiungi Nota</button>\n    </form>\n\n    <h1>Note</h1>\n    <ul class=\"notes-list\">\n      <li v-for=\"note in notes\" :key=\"note._id\" class=\"note-item\">\n        <h2>{{ note.heading }}</h2>\n        <div class=\"note-content\" v-html=\"renderMarkdown(note.content)\"></div>\n        <p>Autore: {{ note.author }}</p>\n        <div class=\"note-actions\">\n          <button @click=\"editNote(note._id)\" class=\"edit-btn\">Modifica</button>\n          <button @click=\"deleteNote(note._id)\" class=\"delete-btn\">Elimina</button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { marked } from 'marked';\n\nexport default {\n  data() {\n    return {\n      newNote: {\n        heading: '',\n        access: 'private',\n        content: ''\n      },\n      notes: []\n    };\n  },\n  async created() {\n    this.fetchNotes();\n  },\n  methods: {\n    async fetchNotes() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato');\n          return;\n        }\n        const response = await axios.get('/api/notesGET', {\n          params: { username: username },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero delle note:', error);\n      }\n    },\n    async addNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato, impossibile creare la nota');\n          return;\n        }\n        this.newNote.author = username;\n\n        const response = await axios.post('/api/notes', this.newNote, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Nota aggiunta:', response.data);\n\n        this.newNote = { heading: '', content: '', access: 'private' };\n\n        this.fetchNotes();\n      } catch (error) {\n        console.error(\"Errore nell'aggiunta della nota:\", error);\n      }\n    },\n    editNote(id) {\n      this.$router.push(`/edit-note/${id}`);\n    },\n    async deleteNote(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/notesRIM/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Nota eliminata');\n        this.fetchNotes();\n      } catch (error) {\n        console.error(\"Errore nell'eliminazione della nota:\", error);\n      }\n    },\n    renderMarkdown(content) {\n      if (!content) return '';\n      return marked(content);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.note-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #15172b;\n  border-radius: 12px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  box-sizing: border-box;\n}\n\n.note-container:hover {\n  transform: translateY(-5px);\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  font-size: 28px;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  display: block;\n}\n\n.form-input, .form-textarea {\n  padding: 12px;\n  border: 2px solid #ced4da;\n  border-radius: 8px;\n  font-size: 16px;\n  width: 100%;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  background-color: #f3f4f6;\n}\n\n.form-input:focus, .form-textarea:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);\n  outline: none;\n}\n\n.form-textarea {\n  height: 120px;\n  resize: none;\n}\n\n.submit-button {\n  padding: 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  font-family: 'Poppins', sans-serif;\n  transition: background-color 0.3s ease, transform 0.2s;\n}\n\n.submit-button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\n.notes-list {\n  list-style-type: none;\n  padding: 0;\n  width: 100%;\n  max-width: 600px;\n  margin-top: 20px;\n}\n\n.note-item {\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.note-content {\n  margin-bottom: 15px;\n  line-height: 1.6;\n  color: #333;\n  width: 100%;\n  text-align: left;\n}\n\n.note-actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.note-actions button {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  margin: 0 5px;\n  transition: background-color 0.3s;\n}\n\n.note-actions .edit-btn:hover {\n  background-color: #0056b3;\n}\n\n.note-actions .delete-btn {\n  background-color: #dc3545;\n}\n\n.note-actions .delete-btn:hover {\n  background-color: #c82333;\n}\n\n.status-message {\n  text-align: center;\n  margin-top: 20px;\n  color: #28a745;\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n}\n</style>\n"],"mappings":";AA0CA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,QAAQ;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,SAAS;QACjBC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,IAAI,CAACC,QAAQ,EAAE;UACbE,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;UACrC;QACF;QACA,MAAMC,QAAO,GAAI,MAAMlB,KAAK,CAACmB,GAAG,CAAC,eAAe,EAAE;UAChDC,MAAM,EAAE;YAAEN,QAAQ,EAAEA;UAAS,CAAC;UAC9BO,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACJ,KAAI,GAAIW,QAAQ,CAAChB,IAAI;MAC5B,EAAE,OAAOe,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IACD,MAAMM,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMZ,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,IAAI,CAACC,QAAQ,EAAE;UACbE,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;UACjE;QACF;QACA,IAAI,CAACd,OAAO,CAACqB,MAAK,GAAIV,QAAQ;QAE9B,MAAMI,QAAO,GAAI,MAAMlB,KAAK,CAACyB,IAAI,CAAC,YAAY,EAAE,IAAI,CAACtB,OAAO,EAAE;UAC5DkB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC;QACFK,OAAO,CAACU,GAAG,CAAC,gBAAgB,EAAER,QAAQ,CAAChB,IAAI,CAAC;QAE5C,IAAI,CAACC,OAAM,GAAI;UAAEC,OAAO,EAAE,EAAE;UAAEE,OAAO,EAAE,EAAE;UAAED,MAAM,EAAE;QAAU,CAAC;QAE9D,IAAI,CAACI,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IACDU,QAAQA,CAACC,EAAE,EAAE;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAcF,EAAE,EAAE,CAAC;IACvC,CAAC;IACD,MAAMG,UAAUA,CAACH,EAAE,EAAE;MACnB,IAAI;QACF,MAAMjB,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMb,KAAK,CAACgC,MAAM,CAAC,iBAAiBJ,EAAE,EAAE,EAAE;UACxCP,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC;QACFK,OAAO,CAACU,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAACjB,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IACDgB,cAAcA,CAAC3B,OAAO,EAAE;MACtB,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;MACvB,OAAOL,MAAM,CAACK,OAAO,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}