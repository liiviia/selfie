{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-title\"\n};\nconst _hoisted_2 = {\n  class: \"section events-section full-width\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"color\": \"#FF6347\"\n  }\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  class: \"button-container\"\n};\nconst _hoisted_10 = {\n  class: \"content-container\"\n};\nconst _hoisted_11 = {\n  class: \"section activities-section\"\n};\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  key: 0,\n  style: {\n    \"color\": \"#FF6347\"\n  }\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = {\n  class: \"button-container\"\n};\nconst _hoisted_18 = {\n  class: \"content-container\"\n};\nconst _hoisted_19 = {\n  class: \"section overdue-activities-section\"\n};\nconst _hoisted_20 = {\n  key: 0\n};\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = {\n  key: 1\n};\nconst _hoisted_23 = {\n  class: \"content-container\"\n};\nconst _hoisted_24 = {\n  class: \"section pomodoros-section\"\n};\nconst _hoisted_25 = {\n  key: 0\n};\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = [\"onClick\"];\nconst _hoisted_28 = {\n  key: 1\n};\nconst _hoisted_29 = {\n  key: 1\n};\nconst _hoisted_30 = {\n  class: \"button-container\"\n};\nconst _hoisted_31 = {\n  class: \"section pomodorosScaduti-section\"\n};\nconst _hoisted_32 = {\n  key: 0\n};\nconst _hoisted_33 = [\"onClick\"];\nconst _hoisted_34 = [\"onClick\"];\nconst _hoisted_35 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", _hoisted_1, \"Eventi, Attivit√† e Pomodori per \" + _toDisplayString($setup.formatDate($setup.queryDate)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"I TUOI EVENTI:\", -1 /* HOISTED */)), $setup.events.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.events, event => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: event._id,\n      class: \"item-container\"\n    }, [_createElementVNode(\"h4\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n      style: {\n        \"font-size\": \"0.9em\"\n      }\n    }, \"Titolo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(event.title), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(event.date)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(event.description), 1 /* TEXT */), event.type === 'gruppo' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, [_createTextVNode(\" Evento di gruppo creata da: \" + _toDisplayString(event.author) + \" \", 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" gruppo composto da: \" + _toDisplayString(event.participants.join(', ')) + \" \", 1 /* TEXT */), event.author !== $setup.username ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.deleteEvents(event._id),\n      class: \"delete-btn\"\n    }, \"rifiuta evento\", 8 /* PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      onClick: $event => $setup.confirmDeleteEvent(event._id),\n      class: \"delete-btn\"\n    }, \"üóëÔ∏è\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"Nessun evento per questa data.\")), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.navigateToAddEvent && $setup.navigateToAddEvent(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \" Aggiungi evento \")])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"LE TUE ATTIVIT√Ä:\", -1 /* HOISTED */)), $setup.activities.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.activities, activity => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: activity._id,\n      class: _normalizeClass([\"item-container\", {\n        completed: activity.completed\n      }])\n    }, [_createElementVNode(\"h4\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n      style: {\n        \"font-size\": \"0.9em\"\n      }\n    }, \"Titolo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(activity.title), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(activity.deadline || activity.date)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(activity.description), 1 /* TEXT */), activity.type === 'gruppo' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_13, [_createTextVNode(\" Attivit√† di gruppo creata da: \" + _toDisplayString(activity.author), 1 /* TEXT */), _cache[7] || (_cache[7] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Gruppo composto da: \" + _toDisplayString(activity.participants.join(', ')), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), !activity.completed ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $setup.markAsCompleted(activity),\n      class: \"complete-btn\"\n    }, \"Completata\", 8 /* PROPS */, _hoisted_14)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      onClick: $event => $setup.confirmDeleteActivity(activity._id),\n      class: \"delete-btn\"\n    }, \"üóëÔ∏è\", 8 /* PROPS */, _hoisted_15)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_16, \"Nessuna attivit√† per questa data.\")), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.navigateToAddActivity && $setup.navigateToAddActivity(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \" Aggiungi attivita \")])]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"ATTIVIT√Ä INCOMPLETE:\", -1 /* HOISTED */)), $setup.filteredOverdueActivities.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredOverdueActivities, activity => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: activity._id,\n      class: \"item-container overdue\"\n    }, [_createElementVNode(\"h4\", null, \"Titolo: \" + _toDisplayString(activity.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Data scadenza: \" + _toDisplayString($setup.formatDate(activity.deadline)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(activity.description), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $setup.discardActivity(activity._id),\n      class: \"delete-btn\"\n    }, \"Scarta\", 8 /* PROPS */, _hoisted_21)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_22, \"Nessuna attivit√† incompleta trovata.\"))])])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"I TUOI POMODORI:\", -1 /* HOISTED */)), $setup.pomodoros.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pomodoros, pomodoro => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pomodoro._id,\n      class: \"item-container\"\n    }, [_cache[10] || (_cache[10] = _createElementVNode(\"h4\", null, \"Pomodoro Sessione\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(pomodoro.giorno)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tempo di studio: \" + _toDisplayString(pomodoro.tempoStudio) + \" minuti\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tempo di pausa: \" + _toDisplayString(pomodoro.tempoPausa) + \" minuti\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Ripetizioni: \" + _toDisplayString(pomodoro.ripetizioni), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $setup.confirmDeletePomodoro(pomodoro._id),\n      class: \"delete-btn\"\n    }, \"üóëÔ∏è\", 8 /* PROPS */, _hoisted_26), $setup.isSameDay($setup.queryDate, $setup.timeMachine) && !pomodoro.isStarted ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $setup.iniziaPomodoro(pomodoro._id, pomodoro.remainingTime, pomodoro.giorno, pomodoro.tempoStudio, pomodoro.tempoPausa, pomodoro.ripetizioni)\n    }, \" Inizia il pomodoro \", 8 /* PROPS */, _hoisted_27)) : pomodoro.isStarted ? (_openBlock(), _createElementBlock(\"p\", _hoisted_28, \"Pomodoro gi√† avviato\")) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_29, \"Nessun pomodoro per questa data.\")), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.navigateToAddPomodoro && $setup.navigateToAddPomodoro(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \" Aggiungi pomodoro \")])]), _createElementVNode(\"div\", _hoisted_31, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", null, \"I TUOI POMODORI INCOMPLETI\", -1 /* HOISTED */)), $setup.incompleteSessions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.incompleteSessions, session => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: session._id,\n      class: \"item-container\"\n    }, [_createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(session.giorno)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tempo rimanente: \" + _toDisplayString(Math.floor(session.remainingTime / 60)) + \":\" + _toDisplayString(session.remainingTime % 60), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Cicli rimanenti: \" + _toDisplayString(session.studyCycles), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $setup.resumePomodoro(session),\n      class: \"action-button\"\n    }, \"Riprendi Sessione\", 8 /* PROPS */, _hoisted_33), _createElementVNode(\"button\", {\n      onClick: $event => $setup.discardPomodoro(session),\n      class: \"action-button\"\n    }, [...(_cache[12] || (_cache[12] = [_createElementVNode(\"span\", {\n      class: \"trash-icon\"\n    }, \"üóëÔ∏è \", -1 /* HOISTED */), _createTextVNode(\"Scarta \")]))], 8 /* PROPS */, _hoisted_34)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_35, \"nessun pomodoro da portare a termine\"))])])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_createElementVNode","_hoisted_1","_toDisplayString","$setup","formatDate","queryDate","_hoisted_2","events","length","_hoisted_3","_Fragment","_renderList","event","_id","_createTextVNode","title","date","description","type","_hoisted_4","author","participants","join","username","_hoisted_5","onClick","$event","_ctx","deleteEvents","_hoisted_6","_createCommentVNode","confirmDeleteEvent","_hoisted_7","_hoisted_8","_hoisted_9","_cache","args","navigateToAddEvent","_hoisted_10","_hoisted_11","activities","_hoisted_12","activity","_normalizeClass","completed","deadline","_hoisted_13","markAsCompleted","_hoisted_14","confirmDeleteActivity","_hoisted_15","_hoisted_16","_hoisted_17","navigateToAddActivity","_hoisted_18","_hoisted_19","filteredOverdueActivities","_hoisted_20","discardActivity","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","pomodoros","_hoisted_25","pomodoro","giorno","tempoStudio","tempoPausa","ripetizioni","confirmDeletePomodoro","_hoisted_26","isSameDay","timeMachine","isStarted","iniziaPomodoro","remainingTime","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","navigateToAddPomodoro","_hoisted_31","incompleteSessions","_hoisted_32","session","Math","floor","studyCycles","resumePomodoro","_hoisted_33","discardPomodoro","_hoisted_34","_hoisted_35"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n   <div>\n    <h2 class=\"main-title\">Eventi, Attivit√† e Pomodori per {{ formatDate(queryDate) }}</h2>\n     <div class=\"section events-section full-width\">\n      <h3>I TUOI EVENTI:</h3>\n      <div v-if=\"events.length > 0\">\n        <div v-for=\"event in events\" :key=\"event._id\" class=\"item-container\">\n          <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ event.title }}</h4>\n          <p>Data: {{ formatDate(event.date) }}</p>\n          <p>Descrizione: {{ event.description }}</p>\n          <p v-if=\"event.type==='gruppo'\" style=\"color: #FF6347;\">\n            Evento di gruppo creata da: {{ event.author }} <br>\n            gruppo composto da: {{ event.participants.join(', ') }}\n            <p v-if=\"event.author !== username\">\n                <button @click=\"deleteEvents(event._id)\" class=\"delete-btn\">rifiuta evento</button>\n            </p>\n          </p>\n          <button @click=\"confirmDeleteEvent(event._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n        </div>\n      </div>\n      <p v-else>Nessun evento per questa data.</p>\n      <div class=\"button-container\">\n        <button class=\"fixed-button\" @click=\"navigateToAddEvent\" style=\"background:#f4a460;\">\n          Aggiungi evento\n        </button>\n      </div>\n    </div>\n\n    <div class=\"content-container\">\n      <div class=\"section activities-section\">\n        <h3>LE TUE ATTIVIT√Ä:</h3>\n        <div v-if=\"activities.length > 0\">\n          <div v-for=\"activity in activities\" :key=\"activity._id\" class=\"item-container\"\n          :class=\"{ completed: activity.completed }\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ activity.title }}</h4>\n            <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <p v-if=\"activity.type === 'gruppo'\" style=\"color: #FF6347;\">\n              Attivit√† di gruppo creata da: {{ activity.author }}<br>\n              Gruppo composto da: {{ activity.participants.join(', ') }}\n            </p>\n            <button v-if=\"!activity.completed\" @click=\"markAsCompleted(activity)\" class=\"complete-btn\">Completata</button>\n            <button @click=\"confirmDeleteActivity(activity._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n          </div>\n        </div>\n        <p v-else>Nessuna attivit√† per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddActivity\" style=\"background:#f4a460;\">\n            Aggiungi attivita\n          </button>\n        </div>\n      </div>\n      \n      \n      <div class=\"content-container\">\n       <div class=\"section overdue-activities-section\">\n        <h3>ATTIVIT√Ä INCOMPLETE:</h3>\n        <div v-if=\"filteredOverdueActivities.length > 0\">\n          <div v-for=\"activity in filteredOverdueActivities\" :key=\"activity._id\" class=\"item-container overdue\">\n            <h4>Titolo: {{ activity.title }}</h4>\n            <p>Data scadenza: {{ formatDate(activity.deadline) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <button @click=\"discardActivity(activity._id)\" class=\"delete-btn\">Scarta</button>\n          </div>\n        </div>\n        <p v-else>Nessuna attivit√† incompleta trovata.</p>\n      </div>\n    </div>\n  </div>\n\n    <div class=\"content-container\">\n      <div class=\"section pomodoros-section\">\n    <h3>I TUOI POMODORI:</h3>\n    <div v-if=\"pomodoros.length > 0\">\n      <div v-for=\"pomodoro in pomodoros\" :key=\"pomodoro._id\" class=\"item-container\">\n        <h4>Pomodoro Sessione</h4>\n        <p>Data: {{ formatDate(pomodoro.giorno) }}</p>\n        <p>Tempo di studio: {{ pomodoro.tempoStudio }} minuti</p>\n        <p>Tempo di pausa: {{ pomodoro.tempoPausa }} minuti</p>\n        <p>Ripetizioni: {{ pomodoro.ripetizioni }}</p>\n        <button @click=\"confirmDeletePomodoro(pomodoro._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n        \n        <button\n  v-if=\"isSameDay(queryDate, timeMachine) && !pomodoro.isStarted\"\n  @click=\"iniziaPomodoro(pomodoro._id,  pomodoro.remainingTime, pomodoro.giorno, pomodoro.tempoStudio, pomodoro.tempoPausa, pomodoro.ripetizioni)\"\n>\n  Inizia il pomodoro\n</button>\n\n<p v-else-if=\"pomodoro.isStarted\">Pomodoro gi√† avviato</p>\n\n      </div>\n    </div>\n    <p v-else>Nessun pomodoro per questa data.</p>\n    <div class=\"button-container\">\n      <button class=\"fixed-button\" @click=\"navigateToAddPomodoro\" style=\"background:#f4a460;\">\n        Aggiungi pomodoro\n      </button>\n    </div>\n  </div>\n\n\n      <div class=\"section pomodorosScaduti-section\">\n        <h3>I TUOI POMODORI INCOMPLETI</h3>\n      <div v-if=\"incompleteSessions.length > 0\">\n      <div v-for=\"session in incompleteSessions\" :key=\"session._id\" class=\"item-container\">\n        <p>Data: {{ formatDate(session.giorno) }}</p>\n        <p>Tempo rimanente: {{ Math.floor(session.remainingTime / 60) }}:{{ session.remainingTime % 60 }}</p>\n        <p>Cicli rimanenti: {{ session.studyCycles }}</p>\n         <button @click=\"resumePomodoro(session)\" class=\"action-button\">Riprendi Sessione</button>\n         <button @click=\"discardPomodoro(session)\" class=\"action-button\">\n          <span class=\"trash-icon\">üóëÔ∏è </span>Scarta\n         </button> \n      </div>\n    </div>\n    <p v-else>nessun pomodoro da portare a termine</p>\n  </div>\n\n  </div>\n  </div> \n\n</template>\n\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]); \n    const incompleteSessions = ref([]);\n    const overdueActivities = ref([]); \n    const queryDate = computed(() => route.query.date);\n    const timeMachine = ref();\n    const username = localStorage.getItem('username');\n\n    const confirmDeleteActivity = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa Attivit√†?\")) {\n        deleteActivities(id); \n      }\n    };\n    const navigateToAddActivity = () => {\n      router.push({ path: '/addActivities', query: { date: queryDate.value } });\n    };\n    const navigateToAddEvent = () => {\n      router.push({ path: '/addEvent', query: { date: queryDate.value } });\n    };\n    const navigateToAddPomodoro = () => {\n      router.push({ path: '/pomodoroTempo', query: { date: queryDate.value,nonFare: 'false' } });\n    };\n\n    const deleteActivities = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username } \n        });\n        console.log('Attivit√† eliminata');\n        fetchEvents(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attivit√†:', error);\n      }\n    };\n\n    const confirmDeleteEvent = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id); \n      }\n    };\n\n    const deleteEvents = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username }\n        });\n        console.log('Evento eliminato');\n        fetchEvents(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n\n    const confirmDeletePomodoro = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa sessione Pomodoro?\")) {\n        deletePomodoro(id); \n      }\n    };\n\n    const deletePomodoro = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/pomRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Sessione Pomodoro eliminata');\n        fetchPoms(); \n        window.location.reload();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della sessione:', error);\n      }\n    };\n\n    const iniziaPomodoro = async (id, remainingTime, date, tempoStudio, tempoPausa, ripetizioni) => {\n  try {\n    const token = sessionStorage.getItem('token');\n    console.log(\"token pom\", token);\n    const response = await axios.post(`/api/iniziaPomodoro/${id}`, {\n      date },\n      {\n      headers: {\n         Authorization: `Bearer ${token}` \n        }\n    });\n\n    if (response.data.success) {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: date,\n          remainingTime: remainingTime,\n          isStudyPhase: true,\n          tempoStudio: tempoStudio,\n          tempoPausa: tempoPausa,\n          ripetizioni: ripetizioni,\n          nuovo: true,\n          nonFare: true\n        }\n      });\n    } else {\n      console.log(response.data.message); \n    }\n  } catch (error) {\n    console.error('Errore durante l\\'avvio del pomodoro:', error);\n  }\n};\n\n\n\n    const isSameDay = (date1, date2) => {\n      const d1 = new Date(date1);\n        const d2 = new Date(date2);\n       console.log(\"query date:\", date1 , \"time machine date:\" , date2);\n        return (\n            d1.getFullYear() === d2.getFullYear() &&\n            d1.getMonth() === d2.getMonth() &&\n            d1.getDate() === d2.getDate()\n        );\n\n    };\n\n\n    const fetchActivities = async () => {\n  try {\n    const token = sessionStorage.getItem('token');\n    const author = localStorage.getItem('username'); \n    console.log('Fetching activities for:', { date: queryDate.value, author }); \n    const response = await axios.get('/api/activities/by-date', {\n      headers: { Authorization: `Bearer ${token}` },\n      params: { date: queryDate.value, author }, \n    });\n    activities.value = response.data;\n  } catch (error) {\n    console.error('Errore nel recupero delle attivit√†:', error);\n  }\n};\n\n\n\n     const fetchPoms = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        this.poms = response.data.filter(pom => {\n          const sessionDate = new Date(pom.giorno);\n          sessionDate.setHours(0, 0, 0, 0);\n          return sessionDate >= today;\n        });\n\n        console.log('Sessioni Pomodoro recuperate e filtrate:', this.poms);\n      } catch (error) {\n        console.error('Errore durante il recupero delle sessioni Pomodoro:', error);\n      }\n    }\n\n\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n\n/*      const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        // Filtra le attivit√† completate \n        const allActivities = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        activities.value = allActivities;\n        console.log('Fetched activities:', activities.value);\n*/\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username, date }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attivit√† e dei pomodori:', error);\n      }\n    };\n\n    const fetchIncompleteSessions = async () => {\n      console.log(\"fetchIncompleteSessions chiamata\");\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n\n      try {\n        const response = await axios.get('/api/poms/incomplete', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username }\n        });\n        \n        incompleteSessions.value = (Array.isArray(response.data) ? response.data : [response.data]).filter(session => {\n        return (\n          session.studyCycles > 0 && \n          session.remainingTime > 0 &&\n          session.tempoStudio && \n          session.tempoPausa \n      );\n    });\n\n      } catch (error) {\n        console.error('Errore nel recupero delle sessioni incomplete:', error);\n      }\n    };\n\n    const resumePomodoro = (session) => {\n    const plainSession = JSON.parse(JSON.stringify(session));\n\n    console.log(\"Sessione passata a pomodoroTempo:\", plainSession);\n    const nuovo = false;\n\n    router.push({\n      path: '/pomodoroTempo',\n      query: {\n        date: new Date(plainSession.giorno).toISOString(),\n        remainingTime: plainSession.remainingTime,\n        studyCycles: plainSession.studyCycles,\n        isStudyPhase: plainSession.isStudyPhase,\n        tempoStudio: plainSession.tempoStudio, \n        tempoPausa: plainSession.tempoPausa,   \n        ripetizioni: plainSession.ripetizioni, \n        nuovo: nuovo,\n        nonFare:true,\n    },\n  });\n    };\n\n    const discardPomodoro = async (session) => {\n      const token = sessionStorage.getItem('token');\n      try {\n        await axios.delete(`/api/pomRemove/${session._id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n        incompleteSessions.value = incompleteSessions.value.filter(s => s._id !== session._id);\n        console.log('Sessione Pomodoro scartata.');\n      } catch (error) {\n        console.error('Errore nello scartare la sessione pomodoro:', error.response?.data || error);\n      }\n    };\n\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n\n    const fetchOverdueActivities = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/overdue', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username },\n        });\n        overdueActivities.value = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero delle attivit√† scadute:', error);\n      }\n    };\n\n    const filteredOverdueActivities = computed(() =>\n      overdueActivities.value.filter(activity => activity.title && activity.deadline)\n    );\n\n\n    /*const markActivityComplete = async (activity) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        const response = await axios.post('/api/activities/mark-complete', {\n          id: activity._id,\n          username,\n          }, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n\n      console.log('Attivit√† completata:', response.data);\n\n      activities.value = activities.value.filter(a => a._id !== activity._id);\n      } catch (error) {\n      console.error('Errore nel segnare l\\'attivit√† come completata:', error);\n    }\n  };*/\n\n      const markAsCompleted = async (activity) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.put(`/api/activities/${activity._id}`, { completed: true }, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        activity.completed = true;\n        // Aggiorna la lista localmente\n        activities.value = activities.value.filter(a => a._id !== activity._id);\n        overdueActivities.value = overdueActivities.value.filter(a => a._id !== activity._id);\n        window.location.reload();\n      } catch (error) {\n        console.error('Errore nel completare l\\'attivit√†:', error);\n      }\n    };\n\n    const discardActivity = async (id) => {\n  try {\n    const token = sessionStorage.getItem('token');\n    console.log('Discarding activity with ID:', id); \n    await axios.delete(`/api/activitiesRemove/${id}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    overdueActivities.value = overdueActivities.value.filter(a => a._id !== id);\n  } catch (error) {\n    console.error('Errore nello scartare l\\'attivit√†:', error);\n  }\n};\n\n   const getTimeMachine = async () => {\n\n    try{\n    const response = await axios.get('/api/getTime-machine');\n    timeMachine.value = response.data\n    //console.log(\" data time machine event day calendar\",timeMachine);\n\n    } catch (error) {\n      console.log(\"errore recupero data time machine\" , error);\n    }\n   };\n\n    onMounted(() => {\n      fetchEvents();\n      fetchActivities();\n      fetchOverdueActivities();\n      fetchIncompleteSessions();\n      setInterval(getTimeMachine, 1000);    });\n\n    return {\n      events,\n      activities,\n      pomodoros, \n      incompleteSessions, \n      overdueActivities,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro, \n      resumePomodoro, \n      discardPomodoro,\n      confirmDeleteActivity,\n      confirmDeleteEvent,\n      confirmDeletePomodoro,\n      //markActivityComplete ,\n      markAsCompleted,\n      filteredOverdueActivities,\n      discardActivity,\n      iniziaPomodoro,\n      timeMachine,\n      isSameDay,\n      username\n    };\n  }\n};\n\n\n</script>\n\n<style scoped>\n.full-width {\n  width: 100%;\n  margin-bottom: 20px;\n  background-color: rgba(230, 247, 255, 0.8);\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  padding: 25px;\n}\n\n\n.center-container {\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n  padding: 20px;\n}\n\n.button-container {\n  margin-top: auto; \n  margin-bottom: 10px; \n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.activities-section {\n  flex: 1.5; \n  background-color: #f9f9f9;\n}\n\n.events-section {\n  flex: 1.5; \n  background-color: #e6f7ff;\n}\n\n.pomodoros-section {\n  flex: 1.5; \n  background-color: #ffe6e6;\n}\n\n.section {\n  margin-right: 100px;\n  min-width: 500px;\n  flex: 1.5; \n  padding: 25px;\n  border: 1px solid #ddd; \n  border-radius: 10px; \n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); \n  background-color: rgba(255, 255, 255, 0.8); \n  display: flex; \n  flex-direction: column; \n  justify-content: space-between; \n}\n\n.section:hover {\n  transform: scale(1.02); \n}\n\n.activities-section {\n  background-color: rgba(249, 249, 249, 0.8); \n}\n\n.events-section {\n  background-color: rgba(230, 247, 255, 0.8); \n}\n\n.pomodoros-section {\n  background-color: rgba(255, 230, 230, 0.8);\n}\n\nhr {\n  border: 0; \n  height: 1px; \n  background-color: #ddd; \n  margin: 10px 0; \n}\n.item-container {\n  background-color: rgba(255, 255, 255, 0.9);\n  border: 1px solid #ddd; \n  border-radius: 8px; \n  padding: 15px; \n  margin-bottom: 15px; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative; \n}\n\n.delete-btn {\n  position: absolute; \n  bottom: 10px;\n  right: 10px; \n  background: none;\n  border: none; \n  cursor: pointer; \n  font-size: 1.2em;\n  color: #e74c3c; \n}\n\n.delete-btn:hover {\n  color: #c0392b; \n}\n\n\n@media (max-width: 768px) {\n  .content-container {\n    flex-direction: column; \n    margin-left: 0; \n  }\n\n  .section {\n    min-width: auto; \n    margin-right: 0; \n    margin-bottom: 20px; \n  }\n  .main-title {\n  margin-top: 20px; \n}\n}\n\n.item-container {\n  background-color: rgba(255, 255, 255, 0.9);\n  border: 1px solid #ddd; \n  border-radius: 8px; \n  padding: 15px; \n  margin-bottom: 15px; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative; \n  transition: border-color 0.3s ease; \n}\n\n.item-container.overdue {\n  border-color: red;\n  background-color: #ffe6e6;\n}\n\n.item-container.incpom {\n  border-color: red;\n  background-color: #ffe6e6;\n}\n\n\n.item-container.completed {\n  border-color: green;\n  box-shadow: 0 2px 8px rgba(0, 128, 0, 0.5); \n}\n\n.complete-btn {\n  background-color: #28a745; \n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.complete-btn:hover {\n  background-color: #218838; \n}\n\n.complete-btn:before {\n  content: '‚úîÔ∏è '; \n  margin-right: 8px; \n}\n\n</style>"],"mappings":";;EAEQA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAmC;;EAHnDC,GAAA;AAAA;;EAAAA,GAAA;EAU0CC,KAAuB,EAAvB;IAAA;EAAA;;;EAV1CD,GAAA;AAAA;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAqBWD,KAAK,EAAC;AAAkB;;EAO1BA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAA4B;;EA7B7CC,GAAA;AAAA;;EAAAA,GAAA;EAqCiDC,KAAuB,EAAvB;IAAA;EAAA;;oBArCjD;oBAAA;;EAAAD,GAAA;AAAA;;EA8CaD,KAAK,EAAC;AAAkB;;EAQ1BA,KAAK,EAAC;AAAmB;;EACxBA,KAAK,EAAC;AAAoC;;EAvDtDC,GAAA;AAAA;oBAAA;;EAAAA,GAAA;AAAA;;EAsESD,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAA2B;;EAvE5CC,GAAA;AAAA;oBAAA;oBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EA8FSD,KAAK,EAAC;AAAkB;;EAQtBA,KAAK,EAAC;AAAkC;;EAtGnDC,GAAA;AAAA;oBAAA;oBAAA;;EAAAA,GAAA;AAAA;;uBACGE,mBAAA,CAsHK,cArHJC,mBAAA,CAAuF,MAAvFC,UAAuF,EAAhE,kCAAgC,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACD,MAAA,CAAAE,SAAS,mBAC7EL,mBAAA,CAuBK,OAvBLM,UAuBK,G,0BAtBJN,mBAAA,CAAuB,YAAnB,gBAAc,sBACPG,MAAA,CAAAI,MAAM,CAACC,MAAM,Q,cAAxBT,mBAAA,CAcM,OAnBZU,UAAA,I,kBAMQV,mBAAA,CAYMW,SAAA,QAlBdC,WAAA,CAM6BR,MAAA,CAAAI,MAAM,EAAfK,KAAK;yBAAjBb,mBAAA,CAYM;MAZwBF,GAAG,EAAEe,KAAK,CAACC,GAAG;MAAEjB,KAAK,EAAC;QAClDI,mBAAA,CAAyE,a,0BAArEA,mBAAA,CAA8C;MAAxCF,KAAyB,EAAzB;QAAA;MAAA;IAAyB,GAAC,SAAO,sBAPrDgB,gBAAA,CAO4D,GAAC,GAAAZ,gBAAA,CAAGU,KAAK,CAACG,KAAK,iB,GACjEf,mBAAA,CAAyC,WAAtC,QAAM,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACQ,KAAK,CAACI,IAAI,mBACjChB,mBAAA,CAA2C,WAAxC,eAAa,GAAAE,gBAAA,CAAGU,KAAK,CAACK,WAAW,kBAC3BL,KAAK,CAACM,IAAI,iB,cAAnBnB,mBAAA,CAMI,KANJoB,UAMI,GAhBdL,gBAAA,CAUkE,+BAC1B,GAAAZ,gBAAA,CAAGU,KAAK,CAACQ,MAAM,IAAG,GAAC,iB,0BAAApB,mBAAA,CAAI,sCAX/Dc,gBAAA,CAW+D,uBAC/B,GAAAZ,gBAAA,CAAGU,KAAK,CAACS,YAAY,CAACC,IAAI,UAAS,GACvD,iBAASV,KAAK,CAACQ,MAAM,KAAKjB,MAAA,CAAAoB,QAAQ,I,cAAlCxB,mBAAA,CAEI,KAfhByB,UAAA,GAcgBxB,mBAAA,CAAmF;MAA1EyB,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,YAAY,CAAChB,KAAK,CAACC,GAAG;MAAGjB,KAAK,EAAC;OAAa,gBAAc,iBAd1FiC,UAAA,E,KAAAC,mBAAA,e,KAAAA,mBAAA,gBAiBU9B,mBAAA,CAA8E;MAArEyB,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAA4B,kBAAkB,CAACnB,KAAK,CAACC,GAAG;MAAGjB,KAAK,EAAC;OAAa,KAAG,iBAjB/EoC,UAAA,E;qDAoBMjC,mBAAA,CAA4C,KApBlDkC,UAAA,EAoBgB,gCAA8B,IACxCjC,mBAAA,CAIM,OAJNkC,UAIM,GAHJlC,mBAAA,CAES;IAFDJ,KAAK,EAAC,cAAc;IAAE6B,OAAK,EAAAU,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEjC,MAAA,CAAAkC,kBAAA,IAAAlC,MAAA,CAAAkC,kBAAA,IAAAD,IAAA,CAAkB;IAAEtC,KAA2B,EAA3B;MAAA;IAAA;KAA4B,mBAErF,E,KAIJE,mBAAA,CAwCI,OAxCJsC,WAwCI,GAvCFtC,mBAAA,CAsBM,OAtBNuC,WAsBM,G,0BArBJvC,mBAAA,CAAyB,YAArB,kBAAgB,sBACTG,MAAA,CAAAqC,UAAU,CAAChC,MAAM,Q,cAA5BT,mBAAA,CAaM,OA5Cd0C,WAAA,I,kBAgCU1C,mBAAA,CAWMW,SAAA,QA3ChBC,WAAA,CAgCkCR,MAAA,CAAAqC,UAAU,EAAtBE,QAAQ;yBAApB3C,mBAAA,CAWM;MAX+BF,GAAG,EAAE6C,QAAQ,CAAC7B,GAAG;MAAEjB,KAAK,EAhCvE+C,eAAA,EAgCwE,gBAAgB;QAAAC,SAAA,EACzDF,QAAQ,CAACE;MAAS;QACrC5C,mBAAA,CAA4E,a,0BAAxEA,mBAAA,CAA8C;MAAxCF,KAAyB,EAAzB;QAAA;MAAA;IAAyB,GAAC,SAAO,sBAlCvDgB,gBAAA,CAkC8D,GAAC,GAAAZ,gBAAA,CAAGwC,QAAQ,CAAC3B,KAAK,iB,GACpEf,mBAAA,CAAiE,WAA9D,QAAM,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACsC,QAAQ,CAACG,QAAQ,IAAIH,QAAQ,CAAC1B,IAAI,mBACzDhB,mBAAA,CAA8C,WAA3C,eAAa,GAAAE,gBAAA,CAAGwC,QAAQ,CAACzB,WAAW,kBAC9ByB,QAAQ,CAACxB,IAAI,iB,cAAtBnB,mBAAA,CAGI,KAHJ+C,WAGI,GAxChBhC,gBAAA,CAqCyE,iCAC7B,GAAAZ,gBAAA,CAAGwC,QAAQ,CAACtB,MAAM,kB,0BAAGpB,mBAAA,CAAI,sCAtCrEc,gBAAA,CAsCqE,uBACnC,GAAAZ,gBAAA,CAAGwC,QAAQ,CAACrB,YAAY,CAACC,IAAI,uB,KAvC/DQ,mBAAA,gB,CAyC2BY,QAAQ,CAACE,SAAS,I,cAAjC7C,mBAAA,CAA8G;MAzC1HF,GAAA;MAyCgD4B,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAA4C,eAAe,CAACL,QAAQ;MAAG9C,KAAK,EAAC;OAAe,YAAU,iBAzCjHoD,WAAA,KAAAlB,mBAAA,gBA0CY9B,mBAAA,CAAoF;MAA3EyB,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAA8C,qBAAqB,CAACP,QAAQ,CAAC7B,GAAG;MAAGjB,KAAK,EAAC;OAAa,KAAG,iBA1CvFsD,WAAA,E;qDA6CQnD,mBAAA,CAA+C,KA7CvDoD,WAAA,EA6CkB,mCAAiC,IAC3CnD,mBAAA,CAIM,OAJNoD,WAIM,GAHJpD,mBAAA,CAES;IAFDJ,KAAK,EAAC,cAAc;IAAE6B,OAAK,EAAAU,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEjC,MAAA,CAAAkD,qBAAA,IAAAlD,MAAA,CAAAkD,qBAAA,IAAAjB,IAAA,CAAqB;IAAEtC,KAA2B,EAA3B;MAAA;IAAA;KAA4B,qBAExF,E,KAKJE,mBAAA,CAaI,OAbJsD,WAaI,GAZHtD,mBAAA,CAWK,OAXLuD,WAWK,G,0BAVJvD,mBAAA,CAA6B,YAAzB,sBAAoB,sBACbG,MAAA,CAAAqD,yBAAyB,CAAChD,MAAM,Q,cAA3CT,mBAAA,CAOM,OAhEd0D,WAAA,I,kBA0DU1D,mBAAA,CAKMW,SAAA,QA/DhBC,WAAA,CA0DkCR,MAAA,CAAAqD,yBAAyB,EAArCd,QAAQ;yBAApB3C,mBAAA,CAKM;MAL8CF,GAAG,EAAE6C,QAAQ,CAAC7B,GAAG;MAAEjB,KAAK,EAAC;QAC3EI,mBAAA,CAAqC,YAAjC,UAAQ,GAAAE,gBAAA,CAAGwC,QAAQ,CAAC3B,KAAK,kBAC7Bf,mBAAA,CAAyD,WAAtD,iBAAe,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACsC,QAAQ,CAACG,QAAQ,mBACjD7C,mBAAA,CAA8C,WAA3C,eAAa,GAAAE,gBAAA,CAAGwC,QAAQ,CAACzB,WAAW,kBACvCjB,mBAAA,CAAiF;MAAxEyB,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAAuD,eAAe,CAAChB,QAAQ,CAAC7B,GAAG;MAAGjB,KAAK,EAAC;OAAa,QAAM,iBA9DpF+D,WAAA,E;qDAiEQ5D,mBAAA,CAAkD,KAjE1D6D,WAAA,EAiEkB,sCAAoC,G,OAKlD5D,mBAAA,CAgDI,OAhDJ6D,WAgDI,GA/CF7D,mBAAA,CA4BE,OA5BF8D,WA4BE,G,4BA3BJ9D,mBAAA,CAAyB,YAArB,kBAAgB,sBACTG,MAAA,CAAA4D,SAAS,CAACvD,MAAM,Q,cAA3BT,mBAAA,CAmBM,OA5FViE,WAAA,I,kBA0EMjE,mBAAA,CAiBMW,SAAA,QA3FZC,WAAA,CA0E8BR,MAAA,CAAA4D,SAAS,EAArBE,QAAQ;yBAApBlE,mBAAA,CAiBM;MAjB8BF,GAAG,EAAEoE,QAAQ,CAACpD,GAAG;MAAEjB,KAAK,EAAC;oCAC3DI,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAA8C,WAA3C,QAAM,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAAC6D,QAAQ,CAACC,MAAM,mBACtClE,mBAAA,CAAyD,WAAtD,mBAAiB,GAAAE,gBAAA,CAAG+D,QAAQ,CAACE,WAAW,IAAG,SAAO,iBACrDnE,mBAAA,CAAuD,WAApD,kBAAgB,GAAAE,gBAAA,CAAG+D,QAAQ,CAACG,UAAU,IAAG,SAAO,iBACnDpE,mBAAA,CAA8C,WAA3C,eAAa,GAAAE,gBAAA,CAAG+D,QAAQ,CAACI,WAAW,kBACvCrE,mBAAA,CAAoF;MAA3EyB,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAAmE,qBAAqB,CAACL,QAAQ,CAACpD,GAAG;MAAGjB,KAAK,EAAC;OAAa,KAAG,iBAhFnF2E,WAAA,GAmFQpE,MAAA,CAAAqE,SAAS,CAACrE,MAAA,CAAAE,SAAS,EAAEF,MAAA,CAAAsE,WAAW,MAAMR,QAAQ,CAACS,SAAS,I,cADxD3E,mBAAA,CAKC;MAvFTF,GAAA;MAoFG4B,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAAwE,cAAc,CAACV,QAAQ,CAACpD,GAAG,EAAGoD,QAAQ,CAACW,aAAa,EAAEX,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACE,WAAW,EAAEF,QAAQ,CAACG,UAAU,EAAEH,QAAQ,CAACI,WAAW;OAC/I,sBAED,iBAvFAQ,WAAA,KAyFcZ,QAAQ,CAACS,SAAS,I,cAAhC3E,mBAAA,CAA0D,KAzF1D+E,WAAA,EAyFkC,sBAAoB,KAzFtDhD,mBAAA,e;qDA6FI/B,mBAAA,CAA8C,KA7FlDgF,WAAA,EA6Fc,kCAAgC,IAC1C/E,mBAAA,CAIM,OAJNgF,WAIM,GAHJhF,mBAAA,CAES;IAFDJ,KAAK,EAAC,cAAc;IAAE6B,OAAK,EAAAU,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEjC,MAAA,CAAA8E,qBAAA,IAAA9E,MAAA,CAAA8E,qBAAA,IAAA7C,IAAA,CAAqB;IAAEtC,KAA2B,EAA3B;MAAA;IAAA;KAA4B,qBAExF,E,KAKAE,mBAAA,CAcE,OAdFkF,WAcE,G,4BAbAlF,mBAAA,CAAmC,YAA/B,4BAA0B,sBACrBG,MAAA,CAAAgF,kBAAkB,CAAC3E,MAAM,Q,cAApCT,mBAAA,CAUI,OAlHVqF,WAAA,I,kBAyGMrF,mBAAA,CAQMW,SAAA,QAjHZC,WAAA,CAyG6BR,MAAA,CAAAgF,kBAAkB,EAA7BE,OAAO;yBAAnBtF,mBAAA,CAQM;MARsCF,GAAG,EAAEwF,OAAO,CAACxE,GAAG;MAAEjB,KAAK,EAAC;QAClEI,mBAAA,CAA6C,WAA1C,QAAM,GAAAE,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACiF,OAAO,CAACnB,MAAM,mBACrClE,mBAAA,CAAqG,WAAlG,mBAAiB,GAAAE,gBAAA,CAAGoF,IAAI,CAACC,KAAK,CAACF,OAAO,CAACT,aAAa,UAAS,GAAC,GAAA1E,gBAAA,CAAGmF,OAAO,CAACT,aAAa,uBACzF5E,mBAAA,CAAiD,WAA9C,mBAAiB,GAAAE,gBAAA,CAAGmF,OAAO,CAACG,WAAW,kBACzCxF,mBAAA,CAAyF;MAAhFyB,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAAsF,cAAc,CAACJ,OAAO;MAAGzF,KAAK,EAAC;OAAgB,mBAAiB,iBA7GzF8F,WAAA,GA8GS1F,mBAAA,CAES;MAFAyB,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAAwF,eAAe,CAACN,OAAO;MAAGzF,KAAK,EAAC;yCAC/CI,mBAAA,CAAoC;MAA9BJ,KAAK,EAAC;IAAY,GAAC,MAAI,qBA/GvCkB,gBAAA,CA+G8C,SACrC,E,oBAhHT8E,WAAA,E;qDAmHI7F,mBAAA,CAAkD,KAnHtD8F,WAAA,EAmHc,sCAAoC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}