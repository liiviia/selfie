{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* import NavigationBar from '../components/NavigationBar.vue';\n */\nimport axios from 'axios';\nimport caruselItem from '../components/carouselItem.vue';\nexport default {\n  name: 'HomePrincipale',\n  components: {\n    CarouselItem\n  },\n  /* components: {\n    NavigationBar,\n  }, */\n  data() {\n    return {\n      username: localStorage.getItem('username') || 'Guest',\n      lastEventTitle: '',\n      lastEventDescription: '',\n      lastEventDate: '',\n      lastActivityTitle: '',\n      lastActivityDescription: '',\n      lastActivityDeadline: '',\n      lastNoteHeading: '',\n      lastNoteAuthor: '',\n      noEventsMessage: '',\n      noActivitiesMessage: '',\n      noNotesMessage: '',\n      noPomodorosMessage: '',\n      lastPomodoroTempoStudio: '',\n      lastPomodoroTempoPausa: '',\n      lastPomodoroRipetizioni: '',\n      currentEventTitle: '',\n      currentEventDescription: '',\n      currentEventDate: '',\n      currentActivityTitle: '',\n      currentActivityDescription: '',\n      currentActivityDeadline: '',\n      isCurrentDay: false,\n      isCurrentDayActivity: false\n    };\n  },\n  mounted() {\n    this.getLastEvent();\n    this.getLastActivity();\n    this.getLastNote();\n    this.getLastPomodoro();\n  },\n  methods: {\n    async getLastEvent() {\n      try {\n        const token = sessionStorage.getItem('token');\n        console.log(\"token home \", token);\n        const response = await axios.get('/api/events/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: this.username\n          }\n        });\n        if (response.data) {\n          this.lastEventTitle = response.data.title || 'Nessun evento';\n          this.lastEventDescription = response.data.description || 'Nessuna descrizione';\n          this.lastEventDate = response.data.date || 'Nessuna data';\n        } else {\n          this.noEventsMessage = 'Nessun evento trovato.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo evento:', error);\n        this.noEventsMessage = 'Errore nel caricamento dell\\'ultimo evento.';\n      }\n    },\n    logout() {\n      localStorage.clear();\n      this.$router.push('/');\n    },\n    async getLastActivity() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        if (response.data) {\n          this.lastActivityTitle = response.data.title;\n          this.lastActivityDescription = response.data.description;\n          this.lastActivityDeadline = new Date(response.data.deadline).toLocaleDateString();\n          this.noActivitiesMessage = '';\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle attività:', error);\n      }\n    },\n    async getLastNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: username\n          }\n        });\n        if (response.data) {\n          this.lastNoteHeading = response.data.heading;\n          this.lastNoteAuthor = response.data.author;\n          this.noNotesMessage = '';\n        } else {\n          this.noNotesMessage = 'Non ci sono note trovate';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultima nota:', error);\n        this.noNotesMessage = 'Errore nel caricamento dell\\'ultima nota.';\n      }\n    },\n    async getLastPomodoro() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        if (response.data) {\n          this.lastPomodoroTempoStudio = response.data.tempoStudio;\n          this.lastPomodoroTempoPausa = response.data.tempoPausa;\n          this.lastPomodoroRipetizioni = response.data.ripetizioni;\n          this.noPomodorosMessage = '';\n        } else {\n          this.noPomodorosMessage = 'Nessun pomodoro trovato';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo pomodoro:', error);\n        this.noPomodorosMessage = 'Errore nel caricamento dell\\'ultimo pomodoro.';\n      }\n    },\n    async getCurrentDayEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/events/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        if (response.data && response.data.length > 0) {\n          // Assumiamo che la risposta sia un array di eventi\n          const event = response.data[0]; // Prendiamo il primo evento\n          this.lastEventTitle = event.title;\n          this.lastEventDescription = event.description;\n          this.lastEventDate = new Date(event.date).toLocaleDateString();\n          this.noEventsMessage = '';\n          this.isCurrentDay = true;\n          // Puliamo il messaggio di errore\n        } else {\n          this.noEventsMessage = 'Non ci sono eventi imminenti';\n          this.lastEventTitle = '';\n          this.lastEventDescription = '';\n          this.lastEventDate = '';\n        }\n        console.log(\"eventi del giorno corrente\", response.data);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi del giorno corrente:', error);\n        this.noEventsMessage = 'Errore nel caricamento degli eventi del giorno corrente.';\n        this.lastEventTitle = '';\n        this.lastEventDescription = '';\n        this.lastEventDate = '';\n      }\n    },\n    async getCurrentDayActivities() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        if (response.data && response.data.length > 0) {\n          const activity = response.data[0];\n          this.lastActivityTitle = activity.title;\n          this.lastActivityDescription = activity.description;\n          this.lastActivityDeadline = new Date(activity.deadline).toLocaleDateString();\n          this.noActivitiesMessage = '';\n          this.isCurrentDayActivity = true;\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n          this.lastActivityTitle = '';\n          this.lastActivityDescription = '';\n          this.lastActivityDeadline = '';\n          this.isCurrentDayActivity = true;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti123';\n          console.log(\"no\", error);\n          this.lastActivityTitle = '';\n          this.lastActivityDescription = '';\n          this.lastActivityDeadline = '';\n          this.isCurrentDayActivity = true;\n        } else {\n          console.error('Errore nel recupero delle attività del giorno corrente:', error);\n          this.noActivitiesMessage = 'Errore nel caricamento delle attività del giorno corrente.';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","caruselItem","name","components","CarouselItem","data","username","localStorage","getItem","lastEventTitle","lastEventDescription","lastEventDate","lastActivityTitle","lastActivityDescription","lastActivityDeadline","lastNoteHeading","lastNoteAuthor","noEventsMessage","noActivitiesMessage","noNotesMessage","noPomodorosMessage","lastPomodoroTempoStudio","lastPomodoroTempoPausa","lastPomodoroRipetizioni","currentEventTitle","currentEventDescription","currentEventDate","currentActivityTitle","currentActivityDescription","currentActivityDeadline","isCurrentDay","isCurrentDayActivity","mounted","getLastEvent","getLastActivity","getLastNote","getLastPomodoro","methods","token","sessionStorage","console","log","response","get","headers","Authorization","params","author","title","description","date","error","logout","clear","$router","push","Date","deadline","toLocaleDateString","heading","tempoStudio","tempoPausa","ripetizioni","getCurrentDayEvents","length","event","getCurrentDayActivities","activity","status"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/HomePrincipale.vue"],"sourcesContent":["<template>\n  <div class=\"home-principale\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-6 image-container\">\n          <img class=\"img-fluid\" src=\"https://images.hdqwalls.com/wallpapers/abstract-shapes-4k-q2.jpg\" alt=\"Immagine Home\">\n        </div>\n        <div class=\"col-md-6 content-container\">\n          <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-inner\">\n              <CarouselItem title=\"Evento\" :isCurrentDay=\"isCurrentDay\" :noMessage=\"noEventsMessage\"\n                            :itemTitle=\"lastEventTitle\" :itemDescription=\"lastEventDescription\" :itemDate=\"lastEventDate\"\n                            @getCurrentDay=\"getCurrentDayEvents\" @getLastItem=\"getLastEvent\" />\n              \n              <CarouselItem title=\"Attività\" :isCurrentDay=\"isCurrentDayActivity\" :noMessage=\"noActivitiesMessage\"\n                            :itemTitle=\"lastActivityTitle\" :itemDescription=\"lastActivityDescription\" :itemDate=\"lastActivityDeadline\"\n                            @getCurrentDay=\"getCurrentDayActivities\" @getLastItem=\"getLastActivity\" />\n              \n              <CarouselItem title=\"Nota\" :noMessage=\"noNotesMessage\"\n                            :itemTitle=\"lastNoteHeading\" :itemDescription=\"lastNoteAuthor\" />\n              \n              <CarouselItem title=\"Pomodoro\" :noMessage=\"noPomodorosMessage\"\n                            :itemTitle=\"'Tempo studio: ' + lastPomodoroTempoStudio\"\n                            :itemDescription=\"'Tempo pausa: ' + lastPomodoroTempoPausa\"\n                            :itemDate=\"'Ripetizioni: ' + lastPomodoroRipetizioni\" />\n            </div>\n            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n/* import NavigationBar from '../components/NavigationBar.vue';\n */\nimport axios from 'axios';\nimport caruselItem from '../components/carouselItem.vue';\n\nexport default {\n  name: 'HomePrincipale',\n  components: {\n    CarouselItem\n  },\n  /* components: {\n    NavigationBar,\n  }, */\n  data() {\n    return {\n      username: localStorage.getItem('username') || 'Guest',\n      lastEventTitle: '',\n      lastEventDescription: '',\n      lastEventDate: '',\n      lastActivityTitle: '',\n      lastActivityDescription: '',\n      lastActivityDeadline: '',\n      lastNoteHeading: '',\n      lastNoteAuthor: '',\n      noEventsMessage: '' ,\n      noActivitiesMessage: '',\n      noNotesMessage: '',\n      noPomodorosMessage: '',\n      lastPomodoroTempoStudio: '',\n      lastPomodoroTempoPausa: '',\n      lastPomodoroRipetizioni: '',\n      currentEventTitle: '',\n      currentEventDescription: '',\n      currentEventDate: '',\n      currentActivityTitle: '',\n      currentActivityDescription: '',\n      currentActivityDeadline: '',\n      isCurrentDay: false,\n      isCurrentDayActivity: false\n    };\n  },\n  mounted() {\n    this.getLastEvent();\n    this.getLastActivity();\n    this.getLastNote();\n    this.getLastPomodoro();\n  },\n  methods: {\n    async getLastEvent() {\n      try {\n        const token = sessionStorage.getItem('token');\n        console.log(\"token home \", token);\n        const response = await axios.get('/api/events/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n        if (response.data) {\n          this.lastEventTitle = response.data.title || 'Nessun evento';\n          this.lastEventDescription = response.data.description || 'Nessuna descrizione';\n          this.lastEventDate = response.data.date || 'Nessuna data';\n        } else {\n          this.noEventsMessage = 'Nessun evento trovato.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo evento:', error);\n        this.noEventsMessage = 'Errore nel caricamento dell\\'ultimo evento.';\n      }\n    },\n\n    logout() {\n      localStorage.clear();\n      this.$router.push('/');\n    },\n\n\n    async getLastActivity() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastActivityTitle = response.data.title;\n          this.lastActivityDescription = response.data.description;\n          this.lastActivityDeadline = new Date(response.data.deadline).toLocaleDateString();\n          this.noActivitiesMessage = '';\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n        }\n\n      } catch (error) {\n        console.error('Errore nel recupero delle attività:', error);\n      }\n    },\n    async getLastNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data) {\n          this.lastNoteHeading = response.data.heading;\n          this.lastNoteAuthor = response.data.author;\n          this.noNotesMessage = '';\n        } else {\n          this.noNotesMessage = 'Non ci sono note trovate';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultima nota:', error);\n        this.noNotesMessage = 'Errore nel caricamento dell\\'ultima nota.';\n      }\n    },\n    async getLastPomodoro() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastPomodoroTempoStudio = response.data.tempoStudio;\n          this.lastPomodoroTempoPausa = response.data.tempoPausa;\n          this.lastPomodoroRipetizioni = response.data.ripetizioni;\n          this.noPomodorosMessage = '';\n        } else {\n          this.noPomodorosMessage = 'Nessun pomodoro trovato';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo pomodoro:', error);\n        this.noPomodorosMessage = 'Errore nel caricamento dell\\'ultimo pomodoro.';\n      }\n    },\n    async getCurrentDayEvents() {\n  try { \n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const response = await axios.get('/api/events/current-day', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });     \n\n    if (response.data && response.data.length > 0) {\n      // Assumiamo che la risposta sia un array di eventi\n      const event = response.data[0]; // Prendiamo il primo evento\n      this.lastEventTitle = event.title;\n      this.lastEventDescription = event.description;\n      this.lastEventDate = new Date(event.date).toLocaleDateString();\n      this.noEventsMessage = '';\n      this.isCurrentDay = true;\n      // Puliamo il messaggio di errore\n    } else {\n      this.noEventsMessage = 'Non ci sono eventi imminenti';\n      this.lastEventTitle = '';\n      this.lastEventDescription = '';\n      this.lastEventDate = '';\n    }\n    console.log(\"eventi del giorno corrente\", response.data);\n  } catch (error) { \n    console.error('Errore nel recupero degli eventi del giorno corrente:', error);\n    this.noEventsMessage = 'Errore nel caricamento degli eventi del giorno corrente.';\n    this.lastEventTitle = '';\n    this.lastEventDescription = '';\n    this.lastEventDate = '';\n  }\n},\nasync getCurrentDayActivities() {\n  try {\n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const response = await axios.get('/api/activities/current-day', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n\n    if (response.data && response.data.length > 0) {\n      const activity = response.data[0];\n      this.lastActivityTitle = activity.title;\n      this.lastActivityDescription = activity.description;\n      this.lastActivityDeadline = new Date(activity.deadline).toLocaleDateString();\n      this.noActivitiesMessage = '';\n      this.isCurrentDayActivity = true;\n    } else {\n      this.noActivitiesMessage = 'Non ci sono attività imminenti';\n      this.lastActivityTitle = '';\n      this.lastActivityDescription = '';\n      this.lastActivityDeadline = '';\n      this.isCurrentDayActivity = true;\n    }\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      this.noActivitiesMessage = 'Non ci sono attività imminenti123';\n      console.log(\"no\",error) ;\n      this.lastActivityTitle = '';\n      this.lastActivityDescription = '';\n      this.lastActivityDeadline = '';\n      this.isCurrentDayActivity = true;\n    } else {\n      console.error('Errore nel recupero delle attività del giorno corrente:', error);\n      this.noActivitiesMessage = 'Errore nel caricamento delle attività del giorno corrente.';\n    }\n  }\n},\n  }\n\n};\n</script>\n\n<style scoped>\n.home-principale {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #6e8efb, #a777e3);\n  display: flex;\n  align-items: center;\n}\n\n.container-fluid {\n  height: 100%;\n}\n\n.row {\n  height: 100%;\n}\n\n.image-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n}\n\n.image-container img {\n  max-width: 100%;\n  height: auto;\n  border-radius: 15px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n}\n\n.content-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n}\n\n.carousel {\n  width: 100%;\n  max-width: 500px;\n  background-color: rgba(255, 255, 255, 0.9);\n  border-radius: 15px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 50%;\n  padding: 1.5rem;\n}\n\n@media (max-width: 768px) {\n  .home-principale {\n    padding: 2rem 0;\n  }\n  \n  .image-container {\n    order: 2;\n  }\n  \n  .content-container {\n    order: 1;\n  }\n}\n    \n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}