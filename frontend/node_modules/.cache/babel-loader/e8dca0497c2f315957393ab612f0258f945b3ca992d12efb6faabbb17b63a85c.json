{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { EventBus } from '@/EventBus';\nexport default {\n  setup() {\n    const router = useRouter();\n    const currentDate = ref(new Date());\n    const weekdays = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\n    const eventsMap = ref({});\n    const activityMap = ref({});\n    const pomodoroMap = ref({});\n    const calendarDays = ref([]);\n    const currentMonthYear = computed(() => {\n      return currentDate.value.toLocaleString('it-IT', {\n        month: 'long',\n        year: 'numeric'\n      });\n    });\n    function formatDateToLocal(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n    function createDayObject(date, currentMonth, today) {\n      const localDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n      const dateString = formatDateToLocal(localDate);\n      return {\n        date: localDate,\n        dayOfMonth: localDate.getDate(),\n        currentMonth: currentMonth,\n        isToday: localDate.toDateString() === today.toDateString(),\n        hasEvents: !!eventsMap.value[dateString],\n        hasActivities: !!activityMap.value[dateString],\n        hasPomodoros: !!pomodoroMap.value[dateString]\n      };\n    }\n    function updateCalendarDays() {\n      const year = currentDate.value.getFullYear();\n      const month = currentDate.value.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n      const calendarArray = [];\n      const today = new Date();\n      for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n        const day = new Date(year, month, -i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n      for (let i = 1; i <= daysInMonth; i++) {\n        const day = new Date(year, month, i);\n        calendarArray.push(createDayObject(day, true, today));\n      }\n      const remainingDays = 42 - calendarArray.length;\n      for (let i = 1; i <= remainingDays; i++) {\n        const day = new Date(year, month + 1, i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n      calendarDays.value = calendarArray;\n    }\n    async function getRecurringDates(event) {\n      const dates = [];\n      const startDate = new Date(event.date);\n      let occurrences = event.numberOfOccurrences;\n      if (event.isRecurring) {\n        switch (event.frequency) {\n          case 'daily':\n            for (let i = 0; i < occurrences; i++) {\n              let newDate = new Date(startDate);\n              newDate.setDate(startDate.getDate() + i);\n              dates.push(newDate);\n              try {\n                const newEvent = ref({\n                  title: event.title,\n                  description: event.description,\n                  date: newDate,\n                  startTime: event.startTime,\n                  duration: event.duration,\n                  location: event.localation,\n                  isRecurring: event.isRecurring,\n                  frequency: event.frequency,\n                  recurrencePattern: event.recurrencePattern,\n                  numberOfOccurrences: event.numberOfOccurrences,\n                  notificationMechanism: event.notificationMechanism,\n                  notificationTime: event.notificationTime,\n                  repeatNotification: event.repeatNotification,\n                  author: localStorage.getItem('username') || 'Guest'\n                });\n                const response = await axios.post('/api/events', newEvent.value, {\n                  headers: {\n                    Authorization: `Bearer ${token}`\n                  }\n                });\n                console.log('Evento creato con successo:', response.data);\n                newEvent.value = {\n                  title: '',\n                  description: '',\n                  date: '',\n                  startTime: '',\n                  duration: '',\n                  location: '',\n                  isRecurring: false,\n                  frequency: 'one-time',\n                  recurrencePattern: '',\n                  numberOfOccurrences: null,\n                  notificationMechanism: [],\n                  notificationTime: 0,\n                  repeatNotification: 0,\n                  author: localStorage.getItem('username') || 'Guest'\n                };\n              } catch (error) {\n                console.error(error);\n              }\n            }\n            break;\n          case 'weekly':\n            for (let i = 0; i < occurrences; i++) {\n              let newDate = new Date(startDate);\n              newDate.setDate(startDate.getDate() + i * 7);\n              dates.push(newDate);\n            }\n            break;\n          case 'monthly':\n            for (let i = 0; i < occurrences; i++) {\n              let newDate = new Date(startDate);\n              newDate.setMonth(startDate.getMonth() + i);\n              dates.push(newDate);\n            }\n            break;\n          default:\n            break;\n        }\n      }\n      return dates;\n    }\n\n    //FINE FUNZIONE EVENTI RICORRENTI\n\n    async function fetchEvents() {\n      try {\n        const username = localStorage.getItem('username');\n        const token = sessionStorage.getItem('token');\n        if (!username || !token) {\n          console.error('Username o token mancante. L\\'utente potrebbe non essere autenticato.');\n          return;\n        }\n        const response = await axios.get(`/api/eventsGET`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: username\n          }\n        });\n        const events = response.data;\n        const activityResponse = await axios.get(`/api/activitiesGET`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        const activities = activityResponse.data;\n        const pomodoroResponse = await axios.get(`/api/poms`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        const pomodoros = pomodoroResponse.data;\n        console.log(\"Risposta API Pomodori:\", pomodoroResponse.data);\n        eventsMap.value = {};\n        activityMap.value = {};\n        pomodoroMap.value = {};\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        events.filter(event => {\n          const eventDate = new Date(event.date);\n          eventDate.setHours(0, 0, 0, 0);\n          return eventDate >= today;\n        }).forEach(event => {\n          const eventDates = event.isRecurring ? getRecurringDates(event) : [new Date(event.date)];\n          eventDates.forEach(eventDate => {\n            const dateString = formatDateToLocal(eventDate);\n            eventsMap.value[dateString] = true;\n          });\n        });\n        activities.filter(activity => {\n          const activityDate = new Date(activity.deadline);\n          activityDate.setHours(0, 0, 0, 0);\n          return activityDate >= today;\n        }).forEach(activity => {\n          const activityDate = new Date(activity.deadline);\n          const dateString = formatDateToLocal(activityDate);\n          activityMap.value[dateString] = true;\n        });\n        pomodoros.filter(pomodoro => {\n          const pomodoroDate = new Date(pomodoro.giorno);\n          pomodoroDate.setHours(0, 0, 0, 0);\n          return pomodoroDate >= today;\n        }).forEach(pomodoro => {\n          const pomodoroDate = new Date(pomodoro.giorno);\n          const dateString = formatDateToLocal(pomodoroDate);\n          pomodoroMap.value[dateString] = true;\n        });\n        updateCalendarDays();\n      } catch (error) {\n        if (error.response) {\n          console.error('Errore nella risposta del server:', error.response.status, error.response.data);\n        } else if (error.request) {\n          console.error('Nessuna risposta ricevuta dal server:', error.request);\n        } else {\n          console.error('Errore durante l\\'impostazione della richiesta:', error.message);\n        }\n      }\n    }\n    function prevMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() - 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n    function nextMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() + 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n    function selectDate(day) {\n      const username = localStorage.getItem('username');\n      const dateString = formatDateToLocal(day.date);\n      console.log(\"dateString\", dateString);\n      router.push({\n        name: 'eventDayCalendar',\n        query: {\n          author: username,\n          date: dateString\n        }\n      });\n    }\n    onMounted(async () => {\n      await fetchEvents();\n      updateCalendarDays();\n      EventBus.on('timeMachineSet', simulatedTime => {\n        currentDate.value = simulatedTime;\n        updateCalendarDays();\n      });\n      EventBus.on('timeMachineUpdate', simulatedTime => {\n        currentDate.value = simulatedTime;\n        updateCalendarDays();\n      });\n      EventBus.on('timeMachineReset', () => {\n        currentDate.value = new Date();\n        updateCalendarDays();\n      });\n    });\n    watch(currentDate, async () => {\n      await fetchEvents();\n      updateCalendarDays();\n    });\n    return {\n      currentDate,\n      weekdays,\n      currentMonthYear,\n      calendarDays,\n      prevMonth,\n      nextMonth,\n      selectDate\n    };\n  },\n  beforeUnmount() {\n    EventBus.off('timeMachineSet');\n    EventBus.off('timeMachineUpdate');\n    EventBus.off('timeMachineReset');\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","axios","useRouter","EventBus","setup","router","currentDate","Date","weekdays","eventsMap","activityMap","pomodoroMap","calendarDays","currentMonthYear","value","toLocaleString","month","year","formatDateToLocal","date","getFullYear","String","getMonth","padStart","day","getDate","createDayObject","currentMonth","today","localDate","dateString","dayOfMonth","isToday","toDateString","hasEvents","hasActivities","hasPomodoros","updateCalendarDays","firstDay","lastDay","daysInMonth","startingDayOfWeek","getDay","calendarArray","i","push","remainingDays","length","getRecurringDates","event","dates","startDate","occurrences","numberOfOccurrences","isRecurring","frequency","newDate","setDate","newEvent","title","description","startTime","duration","location","localation","recurrencePattern","notificationMechanism","notificationTime","repeatNotification","author","localStorage","getItem","response","post","headers","Authorization","token","console","log","data","error","setMonth","fetchEvents","username","sessionStorage","get","params","events","activityResponse","activities","pomodoroResponse","pomodoros","setHours","filter","eventDate","forEach","eventDates","activity","activityDate","deadline","pomodoro","pomodoroDate","giorno","status","request","message","prevMonth","nextMonth","selectDate","name","query","on","simulatedTime","beforeUnmount","off"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/calendarEvent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button @click=\"prevMonth\">&lt;</button>\n      <h2>{{ currentMonthYear }}</h2>\n      <button @click=\"nextMonth\">&gt;</button>\n    </div>\n\n     <div class=\"legend\">\n      <div class=\"legend-item\">\n        <span class=\"event-dot\"></span> Eventi\n      </div>\n      <div class=\"legend-item\">\n        <span class=\"activity-dot\"></span> Attività\n      </div>\n      <div class=\"legend-item\">\n        <span class=\"pomodoro-dot\"></span> Pomodori\n      </div>\n    </div>\n\n    <div class=\"calendar-body\">\n      <div class=\"weekdays\">\n        <div v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\n      </div>\n      <div class=\"days\">\n        <div \n          v-for=\"day in calendarDays\" \n          :key=\"day.date\" \n          :class=\"{ 'current-month': day.currentMonth, 'other-month': !day.currentMonth, 'today': day.isToday }\"\n          @click=\"selectDate(day)\"\n        >\n          <div class=\"day-content\">\n            <span class=\"day-number\">{{ day.dayOfMonth }}</span>\n            <div class=\"indicators\">\n              <span v-if=\"day.hasEvents\" class=\"event-dot\"></span>\n              <span v-if=\"day.hasActivities\" class=\"activity-dot\"></span>\n              <span v-if=\"day.hasPomodoros\" class=\"pomodoro-dot\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { EventBus } from '@/EventBus';\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const currentDate = ref(new Date());\n    const weekdays = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\n    const eventsMap = ref({});\n    const activityMap = ref({});\n    const pomodoroMap = ref({});\n    const calendarDays = ref([]);\n\n    const currentMonthYear = computed(() => {\n      return currentDate.value.toLocaleString('it-IT', { month: 'long', year: 'numeric' });\n    });\n\n    function formatDateToLocal(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); \n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n\n\n\n    \n   \n\n\n\n    function createDayObject(date, currentMonth, today) {\n      const localDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n      const dateString = formatDateToLocal(localDate); \n      return {\n        date: localDate,\n        dayOfMonth: localDate.getDate(),\n        currentMonth: currentMonth,\n        isToday: localDate.toDateString() === today.toDateString(),\n        hasEvents: !!eventsMap.value[dateString],\n        hasActivities: !!activityMap.value[dateString],\n        hasPomodoros: !!pomodoroMap.value[dateString],\n      };\n    }\n\n    function updateCalendarDays() {\n      const year = currentDate.value.getFullYear();\n      const month = currentDate.value.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const calendarArray = [];\n      const today = new Date();\n\n      for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n        const day = new Date(year, month, -i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      for (let i = 1; i <= daysInMonth; i++) {\n        const day = new Date(year, month, i);\n        calendarArray.push(createDayObject(day, true, today));\n      }\n\n      const remainingDays = 42 - calendarArray.length;\n      for (let i = 1; i <= remainingDays; i++) {\n        const day = new Date(year, month + 1, i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      calendarDays.value = calendarArray;\n    }\n\n\n\n\n\n        async function getRecurringDates(event) {\n    const dates = [];\n    const startDate = new Date(event.date);\n    let occurrences = event.numberOfOccurrences;\n\n    if (event.isRecurring) {\n      switch (event.frequency) {\n        case 'daily':\n          for (let i = 0; i < occurrences; i++) {\n            let newDate = new Date(startDate);\n            newDate.setDate(startDate.getDate() + i); \n            dates.push(newDate);\n            try {\n              const newEvent = ref({\n      title: event.title,\n      description: event.description,\n      date: newDate,\n      startTime: event.startTime,\n      duration: event.duration,\n      location: event.localation,\n      isRecurring: event.isRecurring,\n      frequency: event.frequency,\n      recurrencePattern: event.recurrencePattern,\n      numberOfOccurrences: event.numberOfOccurrences,\n      notificationMechanism: event.notificationMechanism,\n      notificationTime: event.notificationTime,\n      repeatNotification: event.repeatNotification,\n      author: localStorage.getItem('username') || 'Guest'\n    });\n              const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento creato con successo:', response.data);\n\n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n          recurrencePattern: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest'\n        };\n\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          break;\n\n        case 'weekly':\n          for (let i = 0; i < occurrences; i++) {\n            let newDate = new Date(startDate);\n            newDate.setDate(startDate.getDate() + i * 7); \n            dates.push(newDate);\n          }\n          break;\n\n        case 'monthly':\n          for (let i = 0; i < occurrences; i++) {\n            let newDate = new Date(startDate);\n            newDate.setMonth(startDate.getMonth() + i); \n            dates.push(newDate);\n          }\n          break;\n\n        default:\n          break;\n      }\n    }\n    return dates;\n  }\n\n\n\n\n\n\n        //FINE FUNZIONE EVENTI RICORRENTI\n\n\n\n\n\n\n\n    async function fetchEvents() {\n  try {\n    const username = localStorage.getItem('username');\n    const token = sessionStorage.getItem('token');\n    if (!username || !token) {\n      console.error('Username o token mancante. L\\'utente potrebbe non essere autenticato.');\n      return;\n    }\n\n    const response = await axios.get(`/api/eventsGET`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { author: username }\n    });\n    const events = response.data;\n\n    const activityResponse = await axios.get(`/api/activitiesGET`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n    const activities = activityResponse.data;\n\n    const pomodoroResponse = await axios.get(`/api/poms`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n    const pomodoros = pomodoroResponse.data;\n\n    console.log(\"Risposta API Pomodori:\", pomodoroResponse.data);\n\n    eventsMap.value = {};\n    activityMap.value = {};\n    pomodoroMap.value = {};\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    events\n  .filter(event => {\n    const eventDate = new Date(event.date);\n    eventDate.setHours(0, 0, 0, 0);\n    return eventDate >= today; \n  })\n  .forEach(event => {\n    const eventDates = event.isRecurring ? getRecurringDates(event) : [new Date(event.date)];\n    eventDates.forEach(eventDate => {\n      const dateString = formatDateToLocal(eventDate);\n      eventsMap.value[dateString] = true; \n    });\n  });\n\n\n      \n\n    activities\n      .filter(activity => {\n        const activityDate = new Date(activity.deadline);\n        activityDate.setHours(0, 0, 0, 0);\n        return activityDate >= today; \n      })\n      .forEach(activity => {\n        const activityDate = new Date(activity.deadline);\n        const dateString = formatDateToLocal(activityDate); \n        activityMap.value[dateString] = true;\n      });\n\n    pomodoros\n      .filter(pomodoro => {\n        const pomodoroDate = new Date(pomodoro.giorno);\n        pomodoroDate.setHours(0, 0, 0, 0);\n        return pomodoroDate >= today; \n      })\n      .forEach(pomodoro => {\n        const pomodoroDate = new Date(pomodoro.giorno);\n        const dateString = formatDateToLocal(pomodoroDate);\n        pomodoroMap.value[dateString] = true;\n      });\n\n    updateCalendarDays();\n  } catch (error) {\n    if (error.response) {\n      console.error('Errore nella risposta del server:', error.response.status, error.response.data);\n    } else if (error.request) {\n      console.error('Nessuna risposta ricevuta dal server:', error.request);\n    } else {\n      console.error('Errore durante l\\'impostazione della richiesta:', error.message);\n    }\n  }\n}\n\n\n    function prevMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() - 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function nextMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() + 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function selectDate(day) {\n      const username = localStorage.getItem('username');\n      const dateString = formatDateToLocal(day.date); \n      console.log(\"dateString\", dateString);\n      router.push({\n        name: 'eventDayCalendar',\n        query: { author: username, date: dateString }\n      });\n    }\n\n    onMounted(async () => {\n      await fetchEvents();\n      updateCalendarDays();\n\n      EventBus.on('timeMachineSet', (simulatedTime) => {\n        currentDate.value = simulatedTime;\n        updateCalendarDays();\n      });\n\n      EventBus.on('timeMachineUpdate', (simulatedTime) => {\n        currentDate.value = simulatedTime;\n        updateCalendarDays();\n      });\n\n      EventBus.on('timeMachineReset', () => {\n        currentDate.value = new Date();\n        updateCalendarDays();\n      });\n    });\n\n    watch(currentDate, async () => {\n      await fetchEvents();\n      updateCalendarDays();\n    });\n\n    return {\n      currentDate,\n      weekdays,\n      currentMonthYear,\n      calendarDays,\n      prevMonth,\n      nextMonth,\n      selectDate,\n    };\n  }, \n  beforeUnmount() {\n    EventBus.off('timeMachineSet');\n    EventBus.off('timeMachineUpdate');\n    EventBus.off('timeMachineReset');\n  }\n};\n</script>\n\n<style scoped>\n\n\n.calendar {\n  max-width: 800px;\n  margin: 0 auto;\n  font-family: Arial, sans-serif;\n  background-color: #fff; \n  border-radius: 10px; \n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); \n  padding: 20px; \n  background: linear-gradient(to bottom, #f4a460, #eee8aa);\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.calendar-header button {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-size: 16px;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.calendar-header button:hover {\n  background-color: #0056b3; \n}\n\n.weekdays, .days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px; \n}\n\n.weekdays div {\n  background-color: #f0f0f0;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  border-radius: 5px; \n}\n\n.days div {\n  border: 1px solid #ddd;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n  height: 100px;\n  border-radius: 10px; \n  transition: transform 0.2s, background-color 0.3s ease;\n  background-color: #fff;\n}\n\n.days div:hover {\n  background-color: #f0f0f0;\n  transform: scale(1.05); \n}\n\n.day-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n}\n\n.day-number {\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.indicators {\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  margin-top: 5px;\n}\n\n.legend {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 15px;\n  gap: 15px;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.event-dot, .activity-dot, .pomodoro-dot {\n  height: 8px; \n  width: 8px;\n  border-radius: 50%; \n  display: inline-block;\n}\n\n.event-dot {\n  background-color: blue;\n}\n\n.activity-dot {\n  background-color: green;\n}\n\n.pomodoro-dot {\n  background-color: red;\n}\n\n.other-month {\n  opacity: 0.5;\n}\n\n.today {\n  background-color: #e6f2ff;\n  font-weight: bold;\n  border-radius: 10px; \n  box-shadow: 0 0 10px rgba(0, 123, 255, 0.3); \n}\n\n@media (max-width: 600px) {\n  .calendar {\n    padding: 10px; \n  }\n\n  .calendar-header button {\n    font-size: 14px;\n    padding: 8px; \n  }\n\n  .weekdays {\n    grid-template-columns: repeat(7, 1fr); \n  }\n\n  .days {\n    grid-template-columns: repeat(7, 1fr); \n  }\n  .weekdays div {\n  display: flex;\n  justify-content: center; \n  align-items: center;\n  text-align: center; \n}\n\n.days div {\n  display: flex;\n  flex-direction: column; \n  justify-content: center; \n  align-items: center; \n  text-align: center; \n}\n\n\n  .days div {\n    height: 70px; \n    font-size: 1.0em; \n    display: flex; \n    flex-direction: column;\n    align-items: center; \n    justify-content: center; \n    padding: 5px; \n    border: 1px solid transparent; \n    padding-left: 1000px; \n  }\n\n  .days div:nth-child(7n + 1) {\n    padding-left: 0; \n  }\n\n  .days div:not(:nth-child(7n + 1)) {\n    padding-left: 0px; \n  }\n\n  .day-number {\n    font-size: 1.2em;\n    font-weight: bold; \n    margin-bottom: 5px; \n  }\n\n  .indicators {\n    justify-content: center; \n  }\n\n  .other-month {\n    opacity: 0.5; \n  }\n\n  .today {\n    background-color: #e6f2ff;\n    font-weight: bold;\n    border-radius: 10px; \n    box-shadow: 0 0 10px rgba(0, 123, 255, 0.3); \n  }\n  .calendar {\n  max-width: 600px; \n  padding: 10px; \n}\n\n.calendar-header button {\n  font-size: 14px; \n  padding: 8px 12px; \n}\n\n.weekdays div, .days div {\n  padding: 5px; \n  font-size: 0.9em; \n}\n\n.days div {\n  height: 80px; \n}\n\n.day-number {\n  font-size: 1em; \n}\n\n}\n\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}