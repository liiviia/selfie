{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,\n      tempoPausa: 5,\n      ripetizioni: 5,\n      giorno: ''\n    });\n    const statusMessage = ref('');\n    let studyCycles = ref(0);\n    let timerInterval = null;\n    let isStudyPhase = ref(true);\n    let remainingTime = ref(0);\n    let isPaused = ref(false);\n    onMounted(() => {\n      if (route.query.date) {\n        newPom.value.giorno = route.query.date;\n      }\n      window.addEventListener('beforeunload', savePomData);\n    });\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione pomodoro aggiunta:', response.data);\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n    const startStudyTimer = (studyTime, cycles, pause) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      isStudyPhase.value = true;\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, studyTime, pause, cycles, startBreakTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n    const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, pauseTime, pauseTime, cycles, startStudyTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n    const updateTimer = (remaining, phaseTime, pauseTime, cycles, nextPhase) => {\n      if (remaining > 0) {\n        const minutes = Math.floor(remaining / 60);\n        const seconds = remaining % 60;\n        document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        nextPhase(phaseTime, studyCycles.value);\n      }\n    };\n    const skipPhase = () => {\n      clearInterval(timerInterval);\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n      if (studyCycles.value <= 0) {\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n    const endCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n    };\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      isPaused.value = true;\n    };\n    const resumeTimer = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, newPom.value.tempoStudio, newPom.value.tempoPausa, studyCycles.value, isStudyPhase.value ? startBreakTimer : startStudyTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","axios","setup","route","newPom","username","localStorage","getItem","tempoStudio","tempoPausa","ripetizioni","giorno","statusMessage","studyCycles","timerInterval","isStudyPhase","remainingTime","isPaused","query","date","value","window","addEventListener","savePomData","aggiungiPomodoro","token","sessionStorage","currentDate","Date","selectedDate","response","post","headers","Authorization","console","log","data","getTime","startStudyTimer","error","studyTime","cycles","pause","alert","clearInterval","setInterval","updateTimer","startBreakTimer","pauseTime","remaining","phaseTime","nextPhase","minutes","Math","floor","seconds","document","getElementById","textContent","String","padStart","skipPhase","restartCycle","endCycle","pauseTimer","resumeTimer"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/pomodoroTempo.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h1>Sessione Pomodoro</h1>\n    <form @submit.prevent=\"aggiungiPomodoro\">\n      <div>\n        <label for=\"tempoStudio\">Tempo di studio (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoStudio\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"tempoPausa\">Tempo di pausa (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoPausa\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"ripetizioni\">Numero di ripetizioni:</label>\n        <input type=\"number\" v-model=\"newPom.ripetizioni\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"giorno\">Giorno della sessione:</label>\n        <input type=\"date\" v-model=\"newPom.giorno\" required>\n      </div>\n\n      <button type=\"submit\" class=\"rounded-btn\">Aggiungi Sessione</button>\n    </form>\n\n    <p id=\"studio-pausa\">{{ statusMessage }}</p>\n\n    <div id=\"clock\" class=\"blob\">\n      <div class=\"timer\" id=\"timerDisplay\">00:00</div>\n      <div class=\"progress-bar\"></div>\n    </div>\n\n    <div class=\"controls\">\n  <div class=\"button-row\">\n    <button @click=\"skipPhase\">Salta alla fase successiva</button>\n    <button @click=\"restartCycle\">Ricomincia ciclo</button>\n  </div>\n  <div class=\"button-row\">\n    <button @click=\"endCycle\">Termina ciclo</button>\n    <button @click=\"pauseTimer\">Stoppa timer</button>\n    <button v-if=\"isPaused\" @click=\"resumeTimer\">Riprendi timer</button> \n  </div>\n</div>\n\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,  \n      tempoPausa: 5,    \n      ripetizioni: 5,  \n      giorno: ''\n    });\n    const statusMessage = ref('');\n    let studyCycles = ref(0); \n    let timerInterval = null;\n    let isStudyPhase = ref(true); \n    let remainingTime = ref(0); \n    let isPaused = ref(false); \n\n    onMounted(() => {\n      if (route.query.date) {\n        newPom.value.giorno = route.query.date;\n      }\n\n\n      window.addEventListener('beforeunload', savePomData);\n\n    });\n\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        console.log('Sessione pomodoro aggiunta:', response.data);\n\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n\n    const startStudyTimer = (studyTime, cycles, pause) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      isStudyPhase.value = true;\n      isPaused.value = false;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, studyTime, pause, cycles, startBreakTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n\n    const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, pauseTime, pauseTime, cycles, startStudyTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n\n    const updateTimer = (remaining, phaseTime, pauseTime, cycles, nextPhase) => {\n      if (remaining > 0) {\n        const minutes = Math.floor(remaining / 60);\n        const seconds = remaining % 60;\n        document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        nextPhase(phaseTime, studyCycles.value);\n      }\n    };\n\n    const skipPhase = () => {\n      clearInterval(timerInterval);\n\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n\n      if (studyCycles.value <= 0) {\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n\n    const endCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n    };\n\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      isPaused.value = true;\n    };\n\n    const resumeTimer = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, newPom.value.tempoStudio, newPom.value.tempoPausa, studyCycles.value, isStudyPhase.value ? startBreakTimer : startStudyTimer);\n        remainingTime.value--;\n      }, 1000); \n    };\n\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused\n    };\n  }\n};\n</script>\n\n<style scoped>\n#clock {\n  margin-top: 20px;\n}\n\n.progress-bar {\n  width: 0;\n  height: 20px;\n  background-color: green;\n  transition: width 1s linear;\n}\n\n.timer {\n  font-size: 2em;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\nform {\n  max-width: 400px;\n  margin: auto;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton.rounded-btn {\n  border-radius: 20px; \n}\n\n\n.controls {\n  margin-top: 20px;\n  margin-bottom: 40px;\n  display: flex; \n  flex-wrap: wrap; \n  justify-content: center; \n}\n\n.controls button {\n  padding: 10px;\n  margin: 10px; \n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.button-row {\n  display: flex; \n  justify-content: space-between; \n  margin-bottom: 10px; \n}\n\n.controls button {\n  flex: 1; \n  margin-right: 10px; \n}\n\n.controls button:last-child {\n  margin-right: 0;\n}\n\n#clock {\n  margin-top: 40px;\n}\n\n@media (max-width: 600px) {\n  h1 {\n    margin-top: 30px; \n  }\n\n  .controls button {\n    margin-right: 10px; \n  }\n}\n\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}