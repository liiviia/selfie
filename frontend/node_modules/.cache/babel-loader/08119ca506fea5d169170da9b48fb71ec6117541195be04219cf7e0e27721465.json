{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_3 = {\n  class: \"calendar-body\"\n};\nconst _hoisted_4 = {\n  class: \"weekdays\"\n};\nconst _hoisted_5 = {\n  class: \"days\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"day-content\"\n};\nconst _hoisted_8 = {\n  class: \"day-number\"\n};\nconst _hoisted_9 = {\n  class: \"indicators\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"event-dot\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"activity-dot\"\n};\nconst _hoisted_12 = {\n  key: 2,\n  class: \"pomodoro-dot\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.prevMonth && $setup.prevMonth(...args))\n  }, \"<\"), _createElementVNode(\"h2\", null, _toDisplayString($setup.currentMonthYear), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.nextMonth && $setup.nextMonth(...args))\n  }, \">\")]), _cache[2] || (_cache[2] = _createStaticVNode(\"<div class=\\\"legend\\\" data-v-61918852><div class=\\\"legend-item\\\" data-v-61918852><span class=\\\"event-dot\\\" data-v-61918852></span> Eventi </div><div class=\\\"legend-item\\\" data-v-61918852><span class=\\\"activity-dot\\\" data-v-61918852></span> Attività </div><div class=\\\"legend-item\\\" data-v-61918852><span class=\\\"pomodoro-dot\\\" data-v-61918852></span> Pomodori </div></div>\", 1)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.weekdays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day\n    }, _toDisplayString(day), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.calendarDays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day.date,\n      class: _normalizeClass({\n        'current-month': day.currentMonth,\n        'other-month': !day.currentMonth,\n        'today': day.isToday\n      }),\n      onClick: $event => $setup.selectDate(day)\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(day.dayOfMonth), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createCommentVNode(\" Pallino blu per eventi \"), day.hasEvents ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Pallino verde per attività \"), day.hasActivities ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Pallino rosso per pomodori \"), day.hasPomodoros ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12)) : _createCommentVNode(\"v-if\", true)])])], 10 /* CLASS, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","prevMonth","_toDisplayString","currentMonthYear","nextMonth","_createStaticVNode","_hoisted_3","_hoisted_4","_Fragment","_renderList","weekdays","day","_hoisted_5","calendarDays","date","_normalizeClass","currentMonth","isToday","$event","selectDate","_hoisted_7","_hoisted_8","dayOfMonth","_hoisted_9","_createCommentVNode","hasEvents","_hoisted_10","hasActivities","_hoisted_11","hasPomodoros","_hoisted_12","_hoisted_6"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/calendarEvent.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button @click=\"prevMonth\">&lt;</button>\n      <h2>{{ currentMonthYear }}</h2>\n      <button @click=\"nextMonth\">&gt;</button>\n    </div>\n\n     <div class=\"legend\">\n      <div class=\"legend-item\">\n        <span class=\"event-dot\"></span> Eventi\n      </div>\n      <div class=\"legend-item\">\n        <span class=\"activity-dot\"></span> Attività\n      </div>\n      <div class=\"legend-item\">\n        <span class=\"pomodoro-dot\"></span> Pomodori\n      </div>\n    </div>\n\n    <div class=\"calendar-body\">\n      <div class=\"weekdays\">\n        <div v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\n      </div>\n      <div class=\"days\">\n        <div \n          v-for=\"day in calendarDays\" \n          :key=\"day.date\" \n          :class=\"{ 'current-month': day.currentMonth, 'other-month': !day.currentMonth, 'today': day.isToday }\"\n          @click=\"selectDate(day)\"\n        >\n          <div class=\"day-content\">\n            <span class=\"day-number\">{{ day.dayOfMonth }}</span>\n            <div class=\"indicators\">\n              <!-- Pallino blu per eventi -->\n              <span v-if=\"day.hasEvents\" class=\"event-dot\"></span>\n              <!-- Pallino verde per attività -->\n              <span v-if=\"day.hasActivities\" class=\"activity-dot\"></span>\n              <!-- Pallino rosso per pomodori -->\n              <span v-if=\"day.hasPomodoros\" class=\"pomodoro-dot\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const currentDate = ref(new Date());\n    const weekdays = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\n    const eventsMap = ref({});\n    const activityMap = ref({});\n    const pomodoroMap = ref({});\n    const calendarDays = ref([]);\n\n    const currentMonthYear = computed(() => {\n      return currentDate.value.toLocaleString('it-IT', { month: 'long', year: 'numeric' });\n    });\n\n    function formatDateToLocal(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); \n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n\n    function createDayObject(date, currentMonth, today) {\n      const localDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n      const dateString = formatDateToLocal(localDate); \n      return {\n        date: localDate,\n        dayOfMonth: localDate.getDate(),\n        currentMonth: currentMonth,\n        isToday: localDate.toDateString() === today.toDateString(),\n        hasEvents: !!eventsMap.value[dateString],\n        hasActivities: !!activityMap.value[dateString],\n        hasPomodoros: !!pomodoroMap.value[dateString],\n      };\n    }\n\n    function updateCalendarDays() {\n      const year = currentDate.value.getFullYear();\n      const month = currentDate.value.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const calendarArray = [];\n      const today = new Date();\n\n      // Giorni del mese precedente\n      for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n        const day = new Date(year, month, -i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      // Giorni del mese corrente\n      for (let i = 1; i <= daysInMonth; i++) {\n        const day = new Date(year, month, i);\n        calendarArray.push(createDayObject(day, true, today));\n      }\n\n      // Giorni del mese successivo\n      const remainingDays = 42 - calendarArray.length;\n      for (let i = 1; i <= remainingDays; i++) {\n        const day = new Date(year, month + 1, i);\n        calendarArray.push(createDayObject(day, false, today));\n      }\n\n      calendarDays.value = calendarArray;\n    }\n\n    async function fetchEvents() {\n  try {\n    const username = localStorage.getItem('username');\n    const token = sessionStorage.getItem('token');\n    if (!username || !token) {\n      console.error('Username o token mancante. L\\'utente potrebbe non essere autenticato.');\n      return;\n    }\n\n    const response = await axios.get(`/api/eventsGET`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { author: username }\n    });\n    const events = response.data;\n\n    const activityResponse = await axios.get(`/api/activitiesGET`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n    const activities = activityResponse.data;\n\n    const pomodoroResponse = await axios.get(`/api/poms`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n    const pomodoros = pomodoroResponse.data;\n\n    console.log(\"Risposta API Pomodori:\", pomodoroResponse.data);\n\n    eventsMap.value = {};\n    activityMap.value = {};\n    pomodoroMap.value = {};\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    events\n      .filter(event => {\n        const eventDate = new Date(event.date);\n        eventDate.setHours(0, 0, 0, 0);\n        return eventDate >= today; // Mantiene solo gli eventi non scaduti\n      })\n      .forEach(event => {\n        const eventDate = new Date(event.date);\n        const dateString = formatDateToLocal(eventDate);\n        eventsMap.value[dateString] = true;\n      });\n\n    activities\n      .filter(activity => {\n        const activityDate = new Date(activity.deadline);\n        activityDate.setHours(0, 0, 0, 0);\n        return activityDate >= today; // Mantiene solo le attività non scadute\n      })\n      .forEach(activity => {\n        const activityDate = new Date(activity.deadline);\n        const dateString = formatDateToLocal(activityDate); \n        activityMap.value[dateString] = true;\n      });\n\n    pomodoros\n      .filter(pomodoro => {\n        const pomodoroDate = new Date(pomodoro.giorno);\n        pomodoroDate.setHours(0, 0, 0, 0);\n        return pomodoroDate >= today; // Mantiene solo i pomodori non scaduti\n      })\n      .forEach(pomodoro => {\n        const pomodoroDate = new Date(pomodoro.giorno);\n        const dateString = formatDateToLocal(pomodoroDate);\n        pomodoroMap.value[dateString] = true;\n      });\n\n    updateCalendarDays();\n  } catch (error) {\n    if (error.response) {\n      console.error('Errore nella risposta del server:', error.response.status, error.response.data);\n    } else if (error.request) {\n      console.error('Nessuna risposta ricevuta dal server:', error.request);\n    } else {\n      console.error('Errore durante l\\'impostazione della richiesta:', error.message);\n    }\n  }\n}\n\n\n    function prevMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() - 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function nextMonth() {\n      const newDate = new Date(currentDate.value);\n      newDate.setMonth(newDate.getMonth() + 1);\n      currentDate.value = newDate;\n      updateCalendarDays();\n    }\n\n    function selectDate(day) {\n      const username = localStorage.getItem('username');\n      const dateString = formatDateToLocal(day.date); \n      console.log(\"dateString\", dateString);\n      router.push({\n        name: 'eventDayCalendar',\n        query: { author: username, date: dateString }\n      });\n    }\n\n    onMounted(async () => {\n      await fetchEvents();\n      updateCalendarDays();\n    });\n\n    watch(currentDate, async () => {\n      await fetchEvents();\n      updateCalendarDays();\n    });\n\n    return {\n      currentDate,\n      weekdays,\n      currentMonthYear,\n      calendarDays,\n      prevMonth,\n      nextMonth,\n      selectDate,\n    };\n  }\n};\n</script>\n\n<style scoped>\n.calendar {\n  max-width: 800px;\n  margin: 0 auto;\n  font-family: Arial, sans-serif;\n  background: linear-gradient(90deg, #C7C5F4, #776BCC); \n    border-radius: 10px; \n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); \n  padding: 20px; \n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.calendar-header button {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-size: 16px;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.calendar-header button:hover {\n  background-color: #0056b3; \n}\n\n.weekdays, .days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px; \n}\n\n.weekdays div {\n  background-color: #f0f0f0;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  border-radius: 5px; \n}\n\n.days div {\n  border: 1px solid #ddd;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n  height: 100px;\n  border-radius: 10px; \n  transition: transform 0.2s, background-color 0.3s ease;\n  background-color: #fff;\n}\n\n.days div:hover {\n  background-color: #f0f0f0;\n  transform: scale(1.05); \n}\n\n.day-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n}\n\n.day-number {\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.indicators {\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  margin-top: 5px;\n}\n\n.legend {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 15px;\n  gap: 15px;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.event-dot, .activity-dot, .pomodoro-dot {\n  height: 8px;  /* Pallini piccoli */\n  width: 8px;\n  border-radius: 50%; \n  display: inline-block;\n}\n\n.event-dot {\n  background-color: blue;\n}\n\n.activity-dot {\n  background-color: green;\n}\n\n.pomodoro-dot {\n  background-color: red;\n}\n\n.other-month {\n  opacity: 0.5;\n}\n\n.today {\n  background-color: #e6f2ff;\n  font-weight: bold;\n  border-radius: 10px; \n  box-shadow: 0 0 10px rgba(0, 123, 255, 0.3); \n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAiB;;EAkBvBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAU;;EAGhBA,KAAK,EAAC;AAAM;mBAxBvB;;EA+BeA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAY;;EAjCnCC,GAAA;EAmCyCD,KAAK,EAAC;;;EAnC/CC,GAAA;EAqC6CD,KAAK,EAAC;;;EArCnDC,GAAA;EAuC4CD,KAAK,EAAC;;;uBAtChDE,mBAAA,CA4CM,OA5CNC,UA4CM,GA3CJC,mBAAA,CAIM,OAJNC,UAIM,GAHJD,mBAAA,CAAwC;IAA/BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,SAAA,IAAAD,MAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,GAAI,GAC/BJ,mBAAA,CAA+B,YAAAO,gBAAA,CAAxBF,MAAA,CAAAG,gBAAgB,kBACvBR,mBAAA,CAAwC;IAA/BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAI,SAAA,IAAAJ,MAAA,CAAAI,SAAA,IAAAL,IAAA,CAAS;KAAE,GAAI,E,6BALrCM,kBAAA,8XAoBIV,mBAAA,CAwBM,OAxBNW,UAwBM,GAvBJX,mBAAA,CAEM,OAFNY,UAEM,I,kBADJd,mBAAA,CAAuDe,SAAA,QAtB/DC,WAAA,CAsB2BT,MAAA,CAAAU,QAAQ,EAAfC,GAAG;yBAAflB,mBAAA,CAAuD;MAAzBD,GAAG,EAAEmB;IAAG,GAAAT,gBAAA,CAAKS,GAAG;oCAEhDhB,mBAAA,CAmBM,OAnBNiB,UAmBM,I,kBAlBJnB,mBAAA,CAiBMe,SAAA,QA1CdC,WAAA,CA0BwBT,MAAA,CAAAa,YAAY,EAAnBF,GAAG;yBADZlB,mBAAA,CAiBM;MAfHD,GAAG,EAAEmB,GAAG,CAACG,IAAI;MACbvB,KAAK,EA5BhBwB,eAAA;QAAA,iBA4BqCJ,GAAG,CAACK,YAAY;QAAA,gBAAkBL,GAAG,CAACK,YAAY;QAAA,SAAWL,GAAG,CAACM;MAAO;MAClGpB,OAAK,EAAAqB,MAAA,IAAElB,MAAA,CAAAmB,UAAU,CAACR,GAAG;QAEtBhB,mBAAA,CAUM,OAVNyB,UAUM,GATJzB,mBAAA,CAAoD,QAApD0B,UAAoD,EAAAnB,gBAAA,CAAxBS,GAAG,CAACW,UAAU,kBAC1C3B,mBAAA,CAOM,OAPN4B,UAOM,GANJC,mBAAA,4BAA+B,EACnBb,GAAG,CAACc,SAAS,I,cAAzBhC,mBAAA,CAAoD,QAApDiC,WAAoD,KAnClEF,mBAAA,gBAoCcA,mBAAA,gCAAmC,EACvBb,GAAG,CAACgB,aAAa,I,cAA7BlC,mBAAA,CAA2D,QAA3DmC,WAA2D,KArCzEJ,mBAAA,gBAsCcA,mBAAA,gCAAmC,EACvBb,GAAG,CAACkB,YAAY,I,cAA5BpC,mBAAA,CAA0D,QAA1DqC,WAA0D,KAvCxEN,mBAAA,e,6BAAAO,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}