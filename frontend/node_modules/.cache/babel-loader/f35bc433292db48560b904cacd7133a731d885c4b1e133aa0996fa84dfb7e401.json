{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]);\n    const incompleteSessions = ref([]);\n    const queryDate = computed(() => route.query.date);\n    const confirmDeleteActivity = id => {\n      if (confirm(\"Sicuro di voler eliminare questa Attività?\")) {\n        deleteActivities(id);\n      }\n    };\n    const navigateToAddActivity = () => {\n      router.push({\n        path: '/addActivities',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddEvent = () => {\n      router.push({\n        path: '/addEvent',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddPomodoro = () => {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const deleteActivities = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        console.log('Attività eliminata');\n        fetchEvents();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attività:', error);\n      }\n    };\n    const confirmDeleteEvent = id => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id);\n      }\n    };\n    const deleteEvents = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento eliminato');\n        fetchEvents();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n    const confirmDeletePomodoro = id => {\n      if (confirm(\"Sicuro di voler eliminare questa sessione Pomodoro?\")) {\n        deletePomodoro(id);\n      }\n    };\n    const deletePomodoro = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/pomRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione Pomodoro eliminata');\n        fetchPoms();\n        window.location.reload();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della sessione:', error);\n      }\n    };\n    const fetchPoms = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        // Filtra solo le sessioni future o presenti\n        this.poms = response.data.filter(pom => {\n          const sessionDate = new Date(pom.giorno);\n          sessionDate.setHours(0, 0, 0, 0);\n          return sessionDate >= today;\n        });\n        console.log('Sessioni Pomodoro recuperate e filtrate:', this.poms);\n      } catch (error) {\n        console.error('Errore durante il recupero delle sessioni Pomodoro:', error);\n      }\n    };\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n        const response = await axios.get('/api/events/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username,\n            date\n          }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attività e dei pomodori:', error);\n      }\n    };\n    const fetchIncompleteSessions = async () => {\n      console.log(\"fetchIncompleteSessions chiamata\");\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n      try {\n        const response = await axios.get('/api/poms/incomplete', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username\n          }\n        });\n        incompleteSessions.value = (Array.isArray(response.data) ? response.data : [response.data]).filter(session => session.studyCycles > 0);\n      } catch (error) {\n        console.error('Errore nel recupero delle sessioni incomplete:', error);\n      }\n    };\n    const resumePomodoro = session => {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: new Date(session.giorno).toISOString(),\n          remainingTime: session.remainingTime,\n          studyCycles: session.studyCycles,\n          isStudyPhase: session.isStudyPhase,\n          tempoStudio: session.tempoStudio,\n          tempoPausa: session.tempoPausa,\n          ripetizioni: session.ripetizioni\n        }\n      });\n    };\n    const discardPomodoro = async session => {\n      const token = sessionStorage.getItem('token');\n      try {\n        await axios.delete(`/api/pomRemove/${session._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        incompleteSessions.value = incompleteSessions.value.filter(s => s._id !== session._id);\n        console.log('Sessione Pomodoro scartata.');\n      } catch (error) {\n        console.error('Errore nello scartare la sessione pomodoro:', error.response?.data || error);\n      }\n    };\n    const formatDate = dateString => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date) ? date.toLocaleDateString('it-IT', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }) : 'Data non valida';\n    };\n    onMounted(() => {\n      fetchEvents();\n      fetchIncompleteSessions();\n    });\n    return {\n      events,\n      activities,\n      pomodoros,\n      incompleteSessions,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro,\n      resumePomodoro,\n      discardPomodoro,\n      confirmDeleteActivity,\n      confirmDeleteEvent,\n      confirmDeletePomodoro\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRoute","useRouter","axios","setup","route","router","events","activities","pomodoros","incompleteSessions","queryDate","query","date","confirmDeleteActivity","id","confirm","deleteActivities","navigateToAddActivity","push","path","value","navigateToAddEvent","navigateToAddPomodoro","token","sessionStorage","getItem","username","localStorage","delete","headers","Authorization","params","console","log","fetchEvents","error","confirmDeleteEvent","deleteEvents","confirmDeletePomodoro","deletePomodoro","fetchPoms","window","location","reload","response","get","today","Date","setHours","poms","data","filter","pom","sessionDate","giorno","author","Array","isArray","activityResponse","pomodoroResponse","fetchIncompleteSessions","session","studyCycles","resumePomodoro","toISOString","remainingTime","isStudyPhase","tempoStudio","tempoPausa","ripetizioni","discardPomodoro","_id","s","formatDate","dateString","isNaN","toLocaleDateString","year","month","day"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n   <div>\n    <h2 class=\"main-title\">Eventi, Attività e Pomodori per {{ formatDate(queryDate) }}</h2>\n    <div class=\"content-container\">\n      <div class=\"section activities-section\">\n        <h3>LE TUE ATTIVITÀ:</h3>\n        <div v-if=\"activities.length > 0\">\n          <div v-for=\"activity in activities\" :key=\"activity._id\" class=\"item-container\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ activity.title }}</h4>\n            <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <p v-if=\"activity.type === 'gruppo'\" style=\"color: #FF6347;\">\n              Attività di gruppo creata da: {{ activity.author }}<br>\n              Gruppo composto da: {{ activity.participants.join(', ') }}\n            </p>\n            <button @click=\"confirmDeleteActivity(activity._id)\" class=\"delete-btn\">🗑️</button>\n          </div>\n        </div>\n        <p v-else>Nessuna attività per questa data.</p>\n        <div class=\"button-container\">\n           <button class=\"fixed-button\" @click=\"navigateToAddActivity\" style=\"background:#f4a460;\">\n            Aggiungi attivita\n            </button>\n        </div>\n      </div>\n      \n      <div class=\"section events-section\">\n        <h3>I TUOI EVENTI:</h3>\n        <div v-if=\"events.length > 0\">\n          <div v-for=\"event in events\" :key=\"event._id\" class=\"item-container\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ event.title }}</h4>\n            <p>Data: {{ formatDate(event.date) }}</p>\n            <p>Descrizione: {{ event.description }}</p>\n            <p>ora inizio: {{ event.startTime }}</p>\n            <p>durata evento: {{ event.duration }} minuti</p>\n            <p>luogo evento: {{ event.location }}</p>\n            <button @click=\"confirmDeleteEvent(event._id)\" class=\"delete-btn\">🗑️</button>\n          </div>\n        </div>\n        <p v-else>Nessun evento per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddEvent\" style=\"background:#f4a460;\">\n            Aggiungi evento\n            </button>\n        </div>\n      </div>\n      \n      \n    </div>\n\n\n<div class=\"content-container\">\n  <div class=\"section pomodoros-section\">\n        <h3>I TUOI POMODORI:</h3>\n        <div v-if=\"pomodoros.length > 0\">\n          <div v-for=\"pomodoro in pomodoros\" :key=\"pomodoro._id\" class=\"item-container\">\n            <h4>Pomodoro Sessione</h4>\n            <p>Data: {{ formatDate(pomodoro.giorno) }}</p>\n            <p>Tempo di studio: {{ pomodoro.tempoStudio }} minuti</p>\n            <p>Tempo di pausa: {{ pomodoro.tempoPausa }} minuti</p>\n            <p>Ripetizioni: {{ pomodoro.ripetizioni }}</p>\n            <button @click=\"confirmDeletePomodoro(pomodoro._id)\" class=\"delete-btn\">🗑️</button>\n          </div>\n        </div>\n        <p v-else>Nessun pomodoro per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddPomodoro\" style=\"background:#f4a460;\">\n            Aggiungi pomodoro\n            </button>\n        </div>\n      </div>\n\n\n      <div class=\"section pomodorosScaduti-section\">\n        <h3>I TUOI POMODORI INCOMPLETI</h3>\n      <div v-if=\"incompleteSessions.length > 0\">\n      <div v-for=\"session in incompleteSessions\" :key=\"session._id\" class=\"item-container\">\n        <p>Data: {{ formatDate(session.giorno) }}</p>\n        <p>Tempo rimanente: {{ Math.floor(session.remainingTime / 60) }}:{{ session.remainingTime % 60 }}</p>\n        <p>Cicli rimanenti: {{ session.studyCycles }}</p>\n         <button @click=\"resumePomodoro(session)\" class=\"action-button\">Riprendi Sessione</button>\n         <button @click=\"discardPomodoro(session)\" class=\"action-button\">\n          <span class=\"trash-icon\">🗑️</span>Scarta\n         </button> \n      </div>\n    </div>\n    <p v-else>nessun pomodoro da portare a termine</p>\n  </div>\n\n  </div>\n\n\n\n\n  </div>\n\n\n \n</template>\n\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]); \n    const incompleteSessions = ref([]);\n    const queryDate = computed(() => route.query.date);\n\n    const confirmDeleteActivity = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa Attività?\")) {\n        deleteActivities(id); \n      }\n    };\n    const navigateToAddActivity = () => {\n      router.push({ path: '/addActivities', query: { date: queryDate.value } });\n    };\n    const navigateToAddEvent = () => {\n      router.push({ path: '/addEvent', query: { date: queryDate.value } });\n    };\n    const navigateToAddPomodoro = () => {\n      router.push({ path: '/pomodoroTempo', query: { date: queryDate.value } });\n    };\n\n    const deleteActivities = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username } \n        });\n        console.log('Attività eliminata');\n        fetchEvents(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attività:', error);\n      }\n    };\n\n    const confirmDeleteEvent = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id); \n      }\n    };\n\n    const deleteEvents = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Evento eliminato');\n        fetchEvents(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n\n    const confirmDeletePomodoro = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa sessione Pomodoro?\")) {\n        deletePomodoro(id); \n      }\n    };\n\n    const deletePomodoro = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/pomRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Sessione Pomodoro eliminata');\n        fetchPoms(); \n        window.location.reload();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della sessione:', error);\n      }\n    };\n\n\n    const fetchPoms = async () => {\n\n\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        // Filtra solo le sessioni future o presenti\n        this.poms = response.data.filter(pom => {\n          const sessionDate = new Date(pom.giorno);\n          sessionDate.setHours(0, 0, 0, 0);\n          return sessionDate >= today;\n        });\n\n        console.log('Sessioni Pomodoro recuperate e filtrate:', this.poms);\n      } catch (error) {\n        console.error('Errore durante il recupero delle sessioni Pomodoro:', error);\n      }\n    }\n\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username, date }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attività e dei pomodori:', error);\n      }\n    };\n\n    const fetchIncompleteSessions = async () => {\n      console.log(\"fetchIncompleteSessions chiamata\");\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n\n      try {\n        const response = await axios.get('/api/poms/incomplete', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username }\n        });\n        \n      incompleteSessions.value = (Array.isArray(response.data) ? response.data : [response.data])\n        .filter(session => session.studyCycles > 0);\n        \n      } catch (error) {\n        console.error('Errore nel recupero delle sessioni incomplete:', error);\n      }\n    };\n\n    const resumePomodoro = (session) => {\n\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date:  new Date(session.giorno).toISOString(),\n          remainingTime: session.remainingTime,\n          studyCycles: session.studyCycles,\n          isStudyPhase: session.isStudyPhase,\n          tempoStudio: session.tempoStudio,\n          tempoPausa: session.tempoPausa,\n          ripetizioni: session.ripetizioni,\n        },\n      });\n    };\n\n    const discardPomodoro = async (session) => {\n      const token = sessionStorage.getItem('token');\n      try {\n        await axios.delete(`/api/pomRemove/${session._id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n        incompleteSessions.value = incompleteSessions.value.filter(s => s._id !== session._id);\n        console.log('Sessione Pomodoro scartata.');\n      } catch (error) {\n        console.error('Errore nello scartare la sessione pomodoro:', error.response?.data || error);\n      }\n    };\n\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n    onMounted(() => {\n      fetchEvents();\n      fetchIncompleteSessions();\n    });\n\n    return {\n      events,\n      activities,\n      pomodoros, \n      incompleteSessions, \n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro, \n      resumePomodoro, \n      discardPomodoro,\n      confirmDeleteActivity,\n      confirmDeleteEvent,\n      confirmDeletePomodoro\n    };\n  }\n};\n\n\n</script>\n\n<style scoped>\n\n.button-container {\n  margin-top: auto; \n  margin-bottom: 10px; \n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n  padding: 20px;\n}\n\n.activities-section {\n  flex: 1.5; \n  background-color: #f9f9f9;\n}\n\n.events-section {\n  flex: 1.5; \n  background-color: #e6f7ff;\n}\n\n.pomodoros-section {\n  flex: 1.5; \n  margin-left: 10px;\n  background-color: #ffe6e6;\n}\n\n.section {\n  margin-right: 100px;\n  min-width: 500px;\n  flex: 1.5; \n  padding: 25px;\n  border: 1px solid #ddd; \n  border-radius: 10px; \n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); \n  background-color: rgba(255, 255, 255, 0.8); \n  display: flex; \n  flex-direction: column; \n  justify-content: space-between; \n}\n\n.section:hover {\n  transform: scale(1.02); \n}\n\n.activities-section {\n  background-color: rgba(249, 249, 249, 0.8); \n}\n\n.events-section {\n  background-color: rgba(230, 247, 255, 0.8); \n}\n\n.pomodoros-section {\n  background-color: rgba(255, 230, 230, 0.8);\n}\n\nhr {\n  border: 0; \n  height: 1px; \n  background-color: #ddd; \n  margin: 10px 0; \n}\n.item-container {\n  background-color: rgba(255, 255, 255, 0.9);\n  border: 1px solid #ddd; \n  border-radius: 8px; \n  padding: 15px; \n  margin-bottom: 15px; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative; \n}\n\n.delete-btn {\n  position: absolute; \n  bottom: 10px;\n  right: 10px; \n  background: none;\n  border: none; \n  cursor: pointer; \n  font-size: 1.2em;\n  color: #e74c3c; \n}\n\n.delete-btn:hover {\n  color: #c0392b; \n}\n\n\n@media (max-width: 768px) {\n  .content-container {\n    flex-direction: column; \n    margin-left: 0; \n  }\n\n  .section {\n    min-width: auto; \n    margin-right: 0; \n    margin-bottom: 20px; \n  }\n  .main-title {\n  margin-top: 20px; \n}\n}\n\n\n\n</style>\n"],"mappings":";AAsGA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAK;AAC9C,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAY;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,MAAK,GAAIT,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMU,UAAS,GAAIV,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMW,SAAQ,GAAIX,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMY,kBAAiB,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAClC,MAAMa,SAAQ,GAAIX,QAAQ,CAAC,MAAMK,KAAK,CAACO,KAAK,CAACC,IAAI,CAAC;IAElD,MAAMC,qBAAoB,GAAKC,EAAE,IAAK;MACpC,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzDC,gBAAgB,CAACF,EAAE,CAAC;MACtB;IACF,CAAC;IACD,MAAMG,qBAAoB,GAAIA,CAAA,KAAM;MAClCZ,MAAM,CAACa,IAAI,CAAC;QAAEC,IAAI,EAAE,gBAAgB;QAAER,KAAK,EAAE;UAAEC,IAAI,EAAEF,SAAS,CAACU;QAAM;MAAE,CAAC,CAAC;IAC3E,CAAC;IACD,MAAMC,kBAAiB,GAAIA,CAAA,KAAM;MAC/BhB,MAAM,CAACa,IAAI,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAER,KAAK,EAAE;UAAEC,IAAI,EAAEF,SAAS,CAACU;QAAM;MAAE,CAAC,CAAC;IACtE,CAAC;IACD,MAAME,qBAAoB,GAAIA,CAAA,KAAM;MAClCjB,MAAM,CAACa,IAAI,CAAC;QAAEC,IAAI,EAAE,gBAAgB;QAAER,KAAK,EAAE;UAAEC,IAAI,EAAEF,SAAS,CAACU;QAAM;MAAE,CAAC,CAAC;IAC3E,CAAC;IAED,MAAMJ,gBAAe,GAAI,MAAOF,EAAE,IAAK;MACrC,IAAI;QACF,MAAMS,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMvB,KAAK,CAAC0B,MAAM,CAAC,yBAAyBd,EAAE,EAAE,EAAE;UAChDe,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC,CAAC;UACDQ,MAAM,EAAE;YAAEL,QAAQ,EAAEA;UAAS;QAC/B,CAAC,CAAC;QACFM,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjCC,WAAW,CAAC,CAAC;MACf,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAED,MAAMC,kBAAiB,GAAKtB,EAAE,IAAK;MACjC,IAAIC,OAAO,CAAC,0CAA0C,CAAC,EAAE;QACvDsB,YAAY,CAACvB,EAAE,CAAC;MAClB;IACF,CAAC;IAED,MAAMuB,YAAW,GAAI,MAAOvB,EAAE,IAAK;MACjC,IAAI;QACF,MAAMS,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMvB,KAAK,CAAC0B,MAAM,CAAC,qBAAqBd,EAAE,EAAE,EAAE;UAC5Ce,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CAAC,CAAC;QACFS,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/BC,WAAW,CAAC,CAAC;MACf,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IAED,MAAMG,qBAAoB,GAAKxB,EAAE,IAAK;MACpC,IAAIC,OAAO,CAAC,qDAAqD,CAAC,EAAE;QAClEwB,cAAc,CAACzB,EAAE,CAAC;MACpB;IACF,CAAC;IAED,MAAMyB,cAAa,GAAI,MAAOzB,EAAE,IAAK;MACnC,IAAI;QACF,MAAMS,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMvB,KAAK,CAAC0B,MAAM,CAAC,kBAAkBd,EAAE,EAAE,EAAE;UACzCe,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CAAC,CAAC;QACFS,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1CO,SAAS,CAAC,CAAC;QACXC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,EAAE,OAAOR,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAGD,MAAMK,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAG5B,IAAI;QACF,MAAMjB,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMmB,QAAO,GAAI,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,WAAW,EAAE;UAC5ChB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC,CAAC;UACDQ,MAAM,EAAE;YAAEL,QAAQ,EAAEA;UAAS;QAC/B,CAAC,CAAC;QAEF,MAAMoB,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC;QACxBD,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;QAE1B;QACA,IAAI,CAACC,IAAG,GAAIL,QAAQ,CAACM,IAAI,CAACC,MAAM,CAACC,GAAE,IAAK;UACtC,MAAMC,WAAU,GAAI,IAAIN,IAAI,CAACK,GAAG,CAACE,MAAM,CAAC;UACxCD,WAAW,CAACL,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAChC,OAAOK,WAAU,IAAKP,KAAK;QAC7B,CAAC,CAAC;QAEFd,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE,IAAI,CAACgB,IAAI,CAAC;MACpE,EAAE,OAAOd,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC7E;IACF;IAEA,MAAMD,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMqB,MAAK,GAAInD,KAAK,CAACO,KAAK,CAAC4C,MAAM;QACjC,MAAM3C,IAAG,GAAIR,KAAK,CAACO,KAAK,CAACC,IAAI;QAC7B,MAAMc,QAAO,GAAItB,KAAK,CAACO,KAAK,CAACe,QAAO,IAAK6B,MAAM;QAE/C,MAAMhC,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7CO,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEsB,MAAM,EAAE3C,IAAI,CAAC;QAEjD,MAAMgC,QAAO,GAAI,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,qBAAqB,EAAE;UACtDhB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG,CAAC;UAC7CQ,MAAM,EAAE;YAAEwB,MAAM;YAAE3C;UAAK;QACzB,CAAC,CAAC;QACFN,MAAM,CAACc,KAAI,GAAIoC,KAAK,CAACC,OAAO,CAACb,QAAQ,CAACM,IAAI,IAAIN,QAAQ,CAACM,IAAG,GAAI,CAACN,QAAQ,CAACM,IAAI,CAAC;QAC7ElB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE3B,MAAM,CAACc,KAAK,CAAC;QAE5C,MAAMsC,gBAAe,GAAI,MAAMxD,KAAK,CAAC2C,GAAG,CAAC,yBAAyB,EAAE;UAClEhB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG,CAAC;UAC7CQ,MAAM,EAAE;YAAEwB,MAAM;YAAE3C;UAAK;QACzB,CAAC,CAAC;QACFL,UAAU,CAACa,KAAI,GAAIoC,KAAK,CAACC,OAAO,CAACC,gBAAgB,CAACR,IAAI,IAAIQ,gBAAgB,CAACR,IAAG,GAAI,CAACQ,gBAAgB,CAACR,IAAI,CAAC;QACzGlB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE1B,UAAU,CAACa,KAAK,CAAC;QAEpD,MAAMuC,gBAAe,GAAI,MAAMzD,KAAK,CAAC2C,GAAG,CAAC,mBAAmB,EAAE;UAC5DhB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG,CAAC;UAC7CQ,MAAM,EAAE;YAAEL,QAAQ;YAAEd;UAAK;QAC3B,CAAC,CAAC;QACFJ,SAAS,CAACY,KAAI,GAAIoC,KAAK,CAACC,OAAO,CAACE,gBAAgB,CAACT,IAAI,IAAIS,gBAAgB,CAACT,IAAG,GAAI,CAACS,gBAAgB,CAACT,IAAI,CAAC;QACxGlB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEzB,SAAS,CAACY,KAAK,CAAC;MAEpD,EAAE,OAAOe,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,kEAAkE,EAAEA,KAAK,CAAC;MAC1F;IACF,CAAC;IAED,MAAMyB,uBAAsB,GAAI,MAAAA,CAAA,KAAY;MAC1C5B,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,MAAMV,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;MAEjD,IAAI;QACF,MAAMmB,QAAO,GAAI,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,sBAAsB,EAAE;UACvDhB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG,CAAC;UAC7CQ,MAAM,EAAE;YAAEL;UAAS;QACrB,CAAC,CAAC;QAEJjB,kBAAkB,CAACW,KAAI,GAAI,CAACoC,KAAK,CAACC,OAAO,CAACb,QAAQ,CAACM,IAAI,IAAIN,QAAQ,CAACM,IAAG,GAAI,CAACN,QAAQ,CAACM,IAAI,CAAC,EACvFC,MAAM,CAACU,OAAM,IAAKA,OAAO,CAACC,WAAU,GAAI,CAAC,CAAC;MAE7C,EAAE,OAAO3B,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACxE;IACF,CAAC;IAED,MAAM4B,cAAa,GAAKF,OAAO,IAAK;MAElCxD,MAAM,CAACa,IAAI,CAAC;QACVC,IAAI,EAAE,gBAAgB;QACtBR,KAAK,EAAE;UACLC,IAAI,EAAG,IAAImC,IAAI,CAACc,OAAO,CAACP,MAAM,CAAC,CAACU,WAAW,CAAC,CAAC;UAC7CC,aAAa,EAAEJ,OAAO,CAACI,aAAa;UACpCH,WAAW,EAAED,OAAO,CAACC,WAAW;UAChCI,YAAY,EAAEL,OAAO,CAACK,YAAY;UAClCC,WAAW,EAAEN,OAAO,CAACM,WAAW;UAChCC,UAAU,EAAEP,OAAO,CAACO,UAAU;UAC9BC,WAAW,EAAER,OAAO,CAACQ;QACvB;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,eAAc,GAAI,MAAOT,OAAO,IAAK;MACzC,MAAMtC,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7C,IAAI;QACF,MAAMvB,KAAK,CAAC0B,MAAM,CAAC,kBAAkBiC,OAAO,CAACU,GAAG,EAAE,EAAE;UACpD1C,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAC9C,CAAC,CAAC;QACAd,kBAAkB,CAACW,KAAI,GAAIX,kBAAkB,CAACW,KAAK,CAAC+B,MAAM,CAACqB,CAAA,IAAKA,CAAC,CAACD,GAAE,KAAMV,OAAO,CAACU,GAAG,CAAC;QACtFvC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C,EAAE,OAAOE,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAACS,QAAQ,EAAEM,IAAG,IAAKf,KAAK,CAAC;MAC7F;IACF,CAAC;IAGD,MAAMsC,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,sBAAsB;MAC9C,MAAM9D,IAAG,GAAI,IAAImC,IAAI,CAAC2B,UAAU,CAAC;MACjC,OAAO9D,IAAG,YAAamC,IAAG,IAAK,CAAC4B,KAAK,CAAC/D,IAAI,IACtCA,IAAI,CAACgE,kBAAkB,CAAC,OAAO,EAAE;QAC/BC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE;MACP,CAAC,IACD,iBAAiB;IACvB,CAAC;IAEDjF,SAAS,CAAC,MAAM;MACdoC,WAAW,CAAC,CAAC;MACb0B,uBAAuB,CAAC,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAO;MACLtD,MAAM;MACNC,UAAU;MACVC,SAAS;MACTC,kBAAkB;MAClBgE,UAAU;MACV/D,SAAS;MACTW,kBAAkB;MAClBJ,qBAAqB;MACrBK,qBAAqB;MACrByC,cAAc;MACdO,eAAe;MACfzD,qBAAqB;MACrBuB,kBAAkB;MAClBE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}