{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: '',\n      tempoPausa: '',\n      ripetizioni: '',\n      giorno: ''\n    });\n    const statusMessage = ref('');\n    onMounted(() => {\n      if (route.query.date) {\n        newPom.value.giorno = route.query.date;\n      }\n    });\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione pomodoro aggiunta:', response.data);\n        newPom.value = {\n          username: newPom.value.username,\n          tempoStudio: '',\n          tempoPausa: '',\n          ripetizioni: '',\n          giorno: ''\n        };\n        startStudyTimer(parseInt(response.data.tempoStudio), parseInt(response.data.ripetizioni), parseInt(response.data.tempoPausa));\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n    const startStudyTimer = (studyTime, studyCycles, pause) => {\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${studyCycles}`;\n      const progressBar = document.querySelector('.progress-bar');\n      progressBar.style.width = '0%';\n      let remainingTime = studyTime * 60; // convert study time to seconds\n\n      const updateTimer = () => {\n        if (remainingTime > 0) {\n          const minutes = Math.floor(remainingTime / 60);\n          const seconds = remainingTime % 60;\n          document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n          remainingTime--;\n          const progressPercentage = (studyTime * 60 - remainingTime) / (studyTime * 60) * 100;\n          progressBar.style.width = `${progressPercentage}%`;\n          setTimeout(updateTimer, 1000);\n        } else {\n          progressBar.style.width = '0%';\n          startBreakTimer(pause, studyCycles);\n        }\n      };\n      updateTimer();\n    };\n    const startBreakTimer = (pause, studyCycles) => {\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${studyCycles}`;\n      const progressBar = document.querySelector('.progress-bar');\n      progressBar.style.width = '0%';\n      let remainingTime = pause * 60; // convert pause time to seconds\n\n      const updateTimer = () => {\n        if (remainingTime > 0) {\n          const minutes = Math.floor(remainingTime / 60);\n          const seconds = remainingTime % 60;\n          document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n          remainingTime--;\n          const progressPercentage = (pause * 60 - remainingTime) / (pause * 60) * 100;\n          progressBar.style.width = `${progressPercentage}%`;\n          setTimeout(updateTimer, 1000);\n        } else {\n          progressBar.style.width = '0%';\n          studyCycles--;\n          if (studyCycles > 0) {\n            startStudyTimer(newPom.value.tempoStudio, studyCycles, pause);\n          } else {\n            statusMessage.value = `Finito! Cicli rimanenti: ${studyCycles}`;\n            document.getElementById('timerDisplay').textContent = \"00:00\";\n          }\n        }\n      };\n      updateTimer();\n    };\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","axios","setup","route","newPom","username","localStorage","getItem","tempoStudio","tempoPausa","ripetizioni","giorno","statusMessage","query","date","value","aggiungiPomodoro","token","sessionStorage","response","post","headers","Authorization","console","log","data","startStudyTimer","parseInt","error","studyTime","studyCycles","pause","progressBar","document","querySelector","style","width","remainingTime","updateTimer","minutes","Math","floor","seconds","getElementById","textContent","String","padStart","progressPercentage","setTimeout","startBreakTimer"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/pomodoroTempo.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h1>Sessione Pomodoro</h1>\n    <form @submit.prevent=\"aggiungiPomodoro\">\n      <div>\n        <label for=\"tempoStudio\">Tempo di studio (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoStudio\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"tempoPausa\">Tempo di pausa (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoPausa\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"ripetizioni\">Numero di ripetizioni:</label>\n        <input type=\"number\" v-model=\"newPom.ripetizioni\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"giorno\">Giorno della sessione:</label>\n        <input type=\"date\" v-model=\"newPom.giorno\" required>\n      </div>\n\n      <button type=\"submit\">Aggiungi Sessione</button>\n    </form>\n\n    <p id=\"studio-pausa\">{{ statusMessage }}</p>\n\n    <div id=\"clock\" class=\"blob\">\n      <div class=\"timer\" id=\"timerDisplay\">00:00</div>\n      <div class=\"progress-bar\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: '',\n      tempoPausa: '',\n      ripetizioni: '',\n      giorno: ''\n    });\n    const statusMessage = ref('');\n\n    onMounted(() => {\n      if (route.query.date) {\n        newPom.value.giorno = route.query.date;\n      }\n    });\n\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione pomodoro aggiunta:', response.data);\n        newPom.value = {\n          username: newPom.value.username,\n          tempoStudio: '',\n          tempoPausa: '',\n          ripetizioni: '',\n          giorno: ''\n        };\n\n        startStudyTimer(parseInt(response.data.tempoStudio), parseInt(response.data.ripetizioni), parseInt(response.data.tempoPausa));\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n\n    const startStudyTimer = (studyTime, studyCycles, pause) => {\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${studyCycles}`;\n      const progressBar = document.querySelector('.progress-bar');\n      progressBar.style.width = '0%';\n\n      let remainingTime = studyTime * 60; // convert study time to seconds\n\n      const updateTimer = () => {\n        if (remainingTime > 0) {\n          const minutes = Math.floor(remainingTime / 60);\n          const seconds = remainingTime % 60;\n          document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n          remainingTime--;\n\n          const progressPercentage = ((studyTime * 60 - remainingTime) / (studyTime * 60)) * 100;\n          progressBar.style.width = `${progressPercentage}%`;\n          setTimeout(updateTimer, 1000);\n        } else {\n          progressBar.style.width = '0%';\n          startBreakTimer(pause, studyCycles);\n        }\n      };\n\n      updateTimer();\n    };\n\n    const startBreakTimer = (pause, studyCycles) => {\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${studyCycles}`;\n      const progressBar = document.querySelector('.progress-bar');\n      progressBar.style.width = '0%';\n\n      let remainingTime = pause * 60; // convert pause time to seconds\n\n      const updateTimer = () => {\n        if (remainingTime > 0) {\n          const minutes = Math.floor(remainingTime / 60);\n          const seconds = remainingTime % 60;\n          document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n          remainingTime--;\n\n          const progressPercentage = ((pause * 60 - remainingTime) / (pause * 60)) * 100;\n          progressBar.style.width = `${progressPercentage}%`;\n          setTimeout(updateTimer, 1000);\n        } else {\n          progressBar.style.width = '0%';\n          studyCycles--;\n          if (studyCycles > 0) {\n            startStudyTimer(newPom.value.tempoStudio, studyCycles, pause);\n          } else {\n            statusMessage.value = `Finito! Cicli rimanenti: ${studyCycles}`;\n            document.getElementById('timerDisplay').textContent = \"00:00\";\n          }\n        }\n      };\n\n      updateTimer();\n    };\n\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro\n    };\n  }\n};\n</script>\n\n<style scoped>\n#clock {\n  margin-top: 20px;\n}\n\n.progress-bar {\n  width: 0;\n  height: 20px;\n  background-color: green;\n  transition: width 1s linear;\n}\n\n.timer {\n  font-size: 2em;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\nform {\n  max-width: 400px;\n  margin: auto;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}