{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      poms: []\n    };\n  },\n  async created() {\n    await this.getPoms();\n  },\n  methods: {\n    async getPoms() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        this.poms = response.data;\n      } catch (error) {\n        console.error('Errore durante il recupero delle sessioni Pomodoro:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","poms","created","getPoms","methods","token","sessionStorage","getItem","username","localStorage","response","get","headers","Authorization","params","error","console"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/pomSession.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Sessioni Pomodoro Salvate</h1>\n    <div v-if=\"poms.length > 0\">\n      <ul>\n        <li v-for=\"pom in poms\" :key=\"pom._id\">\n          <p><strong>Username:</strong> {{ pom.username }}</p>\n          <p><strong>Tempo di Studio:</strong> {{ pom.tempoStudio }} minuti</p>\n          <p><strong>Tempo di Pausa:</strong> {{ pom.tempoPausa }} minuti</p>\n          <p><strong>Ripetizioni:</strong> {{ pom.ripetizioni }}</p>\n          <hr>\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p>Non ci sono sessioni Pomodoro salvate al momento.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      poms: [] \n    };\n  },\n  async created() {\n    await this.getPoms(); \n  },\n  methods: {\n    async getPoms() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username'); \n        const response = await axios.get('/api/poms', {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username }\n        });\n        this.poms = response.data; \n      } catch (error) {\n        console.error('Errore durante il recupero delle sessioni Pomodoro:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  margin-bottom: 20px;\n}\n\nhr {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"AAqBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,OAAO,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAME,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMG,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,WAAW,EAAE;UAC5CC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK;UAChC,CAAC;UACDS,MAAM,EAAE;YAAEN,QAAQ,EAAEA;UAAS;QAC/B,CAAC,CAAC;QACF,IAAI,CAACP,IAAG,GAAIS,QAAQ,CAACV,IAAI;MAC3B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC7E;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}