{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, getCurrentInstance } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport NotificationManager from '../components/NotificationManager.vue';\nexport default {\n  components: {\n    NotificationManager\n  },\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance(); // Ottieni il contesto corrente (proxy)\n    const route = useRoute();\n    const router = useRouter();\n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      //recurrencePattern: '',\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: localStorage.getItem('username') || 'Guest'\n    });\n    onMounted(() => {\n      //PERMESSO NOTIFICHE\n      // const notificationManager=proxy.$refs.notificationManager;\n      //   notificationManager.requestNotificationPermission();\n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n    });\n    const message = ref('');\n\n    //crea evento\n    const createEvent = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        ///////////\n        const notificationManager = proxy.$refs.notificationManager;\n        const emaill = localStorage.getItem('email');\n        notificationManager.scheduleNotification(newEvent.value, emaill);\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento creato con successo:', response.data);\n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n          // recurrencePattern: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest'\n        };\n        message.value = 'Evento creato con successo!';\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale'); ////\n        }, 3000);\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n    return {\n      newEvent,\n      message,\n      createEvent\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","getCurrentInstance","useRoute","useRouter","axios","NotificationManager","components","setup","proxy","route","router","newEvent","title","description","date","startTime","duration","location","isRecurring","frequency","numberOfOccurrences","notificationMechanism","notificationTime","repeatNotification","author","localStorage","getItem","query","value","message","createEvent","token","sessionStorage","notificationManager","$refs","emaill","scheduleNotification","response","post","headers","Authorization","console","log","data","setTimeout","push","error"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/addEvent.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h2>Crea un Nuovo Evento</h2>\n    <form @submit.prevent=\"createEvent\">\n      <div>\n        <label for=\"title\">Titolo:</label>\n        <input type=\"text\" v-model=\"newEvent.title\" required />\n      </div>\n      <div>\n        <label for=\"description\">Descrizione:</label>\n        <textarea v-model=\"newEvent.description\"></textarea>\n      </div>\n      <div>\n        <label for=\"date\">Data:</label>\n        <input type=\"date\" v-model=\"newEvent.date\" required />\n      </div>\n      <div>\n        <label for=\"startTime\">Ora di Inizio:</label>\n        <input type=\"time\" v-model=\"newEvent.startTime\" required />\n      </div>\n      <div>\n        <label for=\"duration\">Durata (minuti):</label>\n        <input type=\"number\" v-model=\"newEvent.duration\" required />\n      </div>\n      <div>\n        <label for=\"location\">Luogo:</label>\n        <input type=\"text\" v-model=\"newEvent.location\" />\n      </div>\n      <div>\n        <label>È Ripetibile?</label>\n        <input type=\"checkbox\" v-model=\"newEvent.isRecurring\" />\n      </div>\n      <div v-if=\"newEvent.isRecurring\">\n        <label for=\"frequency\">Frequenza:</label>\n        <select v-model=\"newEvent.frequency\">\n          <option value=\"one-time\">Una tantum</option>\n          <option value=\"daily\">Giornaliero</option>\n          <option value=\"weekly\">Settimanale</option>\n          <option value=\"monthly\">Mensile</option>\n         <!-- <option value=\"custom\">Personalizzato</option> -->\n        </select>\n        <!--<div v-if=\"newEvent.frequency === 'custom'\">\n          <label for=\"recurrencePattern\">Pattern di Ripetizione:</label>\n          <input type=\"text\" v-model=\"newEvent.recurrencePattern\" placeholder=\"Esempio: ogni martedì\" />\n        </div>-->\n        <div> \n          <label for=\"numberOfOccurrences\">Numero di Ripetizioni:</label>\n          <input type=\"number\" v-model=\"newEvent.numberOfOccurrences\" placeholder=\"Lascia vuoto per ripetere indefinitamente\" />\n        </div>\n      </div>\n      <div>\n        <label>Meccanismo di Notifica:</label>\n        <div>\n          <input type=\"checkbox\" value=\"system\" v-model=\"newEvent.notificationMechanism\" /> Sistema\n          <input type=\"checkbox\" value=\"email\" v-model=\"newEvent.notificationMechanism\" /> Email\n          <input type=\"checkbox\" value=\"whatsapp\" v-model=\"newEvent.notificationMechanism\" /> WhatsApp\n          <input type=\"checkbox\" value=\"alert\" v-model=\"newEvent.notificationMechanism\" /> Alert\n        </div>\n        <div>\n          <label for=\"notificationTime\">Tempo di Notifica (minuti prima):</label>\n          <input type=\"number\" v-model=\"newEvent.notificationTime\" />\n        </div>\n        <div>\n          <label for=\"repeatNotification\">Ripeti Notifica (minuti):</label>\n          <input type=\"number\" v-model=\"newEvent.repeatNotification\" />\n        </div>\n      </div>\n      <div>\n        <label for=\"author\">Autore:</label>\n        <input type=\"text\" v-model=\"newEvent.author\" required />\n      </div>\n      <button type=\"submit\">Crea Evento</button>\n    </form>\n    <NotificationManager ref=\"notificationManager\" />\n    <p v-if=\"message\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, getCurrentInstance } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport NotificationManager from '../components/NotificationManager.vue';\n\nexport default {\n  components:{\n    NotificationManager\n  },\n  \n  setup() {\n    const { proxy } = getCurrentInstance(); // Ottieni il contesto corrente (proxy)\n    const route = useRoute();\n    const router=useRouter();\n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      //recurrencePattern: '',\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: localStorage.getItem('username') || 'Guest'\n    });\n\n    onMounted(() => {\n\n      //PERMESSO NOTIFICHE\n      // const notificationManager=proxy.$refs.notificationManager;\n      //   notificationManager.requestNotificationPermission();\n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n    });\n\n    \n    const message = ref('');\n\n    //crea evento\n    const createEvent = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        ///////////\n        const notificationManager = proxy.$refs.notificationManager;\n        const emaill = localStorage.getItem('email');\n        notificationManager.scheduleNotification(newEvent.value, emaill);\n\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento creato con successo:', response.data);\n\n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n         // recurrencePattern: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest'\n        };\n\n        message.value = 'Evento creato con successo!';\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale'); ////\n        }, 3000);\n\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n\n    return {\n      newEvent,\n      message,\n      createEvent\n    };\n  }\n};\n</script>\n\n<style scoped>\n.event-form {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #15172b;\n  border-radius: 12px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1); \n  transition: transform 0.3s ease; /* transizione */\n  box-sizing: border-box;\n}\n\n.event-form:hover {\n  transform: translateY(-5px); /* animazione al passaggio */\n}\n\n.event-form h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  font-size: 28px;\n}\n\n.event-form div {\n  margin-bottom: 20px;\n}\n\n.event-form label {\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  display: block;\n}\n\n.event-form input[type=\"text\"],\n.event-form input[type=\"date\"],\n.event-form input[type=\"time\"],\n.event-form input[type=\"number\"],\n.event-form textarea,\n.event-form select {\n  padding: 12px;\n  border: 2px solid #ced4da;\n  border-radius: 8px;\n  font-size: 16px;\n  width: 100%;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.event-form input:focus,\n.event-form textarea:focus,\n.event-form select:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25); /* effetto focus */\n  outline: none;\n}\n\n.event-form textarea {\n  height: 120px;\n  resize: none;\n}\n\n.event-form button {\n  padding: 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  font-family: 'Poppins', sans-serif;\n  transition: background-color 0.3s ease, transform 0.2s;\n}\n\n.event-form button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\n.event-form p {\n  text-align: center;\n  margin-top: 20px;\n  color: #28a745;\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n}\n\n.event-form input,\n.event-form textarea,\n.event-form button {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \n}\n\n.event-form div {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.back-home-link {\n  color: #0016db;\n  font-family: 'Poppins', sans-serif;\n  text-decoration: none;\n  margin-bottom: 20px;\n  transition: color 0.3s ease;\n  text-align: left;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}