{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"button-container\"\n};\nconst _hoisted_2 = {\n  class: \"content-container\"\n};\nconst _hoisted_3 = {\n  class: \"section activities-section\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 0,\n  style: {\n    \"color\": \"#FF6347\"\n  }\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  class: \"section events-section\"\n};\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = {\n  class: \"section pomodoros-section\"\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, \"Eventi, Attività e Pomodori per \" + _toDisplayString($setup.formatDate($setup.queryDate)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.navigateToAddEvent && $setup.navigateToAddEvent(...args))\n  }, \"Aggiungi Evento\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.navigateToAddActivity && $setup.navigateToAddActivity(...args))\n  }, \"Aggiungi Attività\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.navigateToAddPomodoro && $setup.navigateToAddPomodoro(...args))\n  }, \"Aggiungi Pomodoro\")]), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Sezione Attività \"), _createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"LE TUE ATTIVITÀ:\", -1 /* HOISTED */)), $setup.activities.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.activities, activity => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: activity._id\n    }, [_createElementVNode(\"h4\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n      style: {\n        \"font-size\": \"0.9em\"\n      }\n    }, \"Titolo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(activity.title), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(activity.deadline || activity.date)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(activity.description), 1 /* TEXT */), activity.type === 'gruppo' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, [_createTextVNode(\" Attività di gruppo creata da: \" + _toDisplayString(activity.author), 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Gruppo composto da: \" + _toDisplayString(activity.participants.join(', ')), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"Nessuna attività per questa data.\"))]), _createCommentVNode(\" Sezione Eventi \"), _createElementVNode(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"I TUOI EVENTI:\", -1 /* HOISTED */)), $setup.events.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.events, event => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: event._id\n    }, [_createElementVNode(\"h4\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n      style: {\n        \"font-size\": \"0.9em\"\n      }\n    }, \"Titolo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(event.title), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(event.date)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Descrizione: \" + _toDisplayString(event.description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"Nessun evento per questa data.\"))]), _createCommentVNode(\" Sezione Pomodori \"), _createElementVNode(\"div\", _hoisted_10, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"I TUOI POMODORI:\", -1 /* HOISTED */)), $setup.pomodoros.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pomodoros, pomodoro => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pomodoro._id\n    }, [_cache[8] || (_cache[8] = _createElementVNode(\"h4\", null, \"Pomodoro Sessione\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Data: \" + _toDisplayString($setup.formatDate(pomodoro.giorno)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tempo di studio: \" + _toDisplayString(pomodoro.tempoStudio) + \" minuti\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tempo di pausa: \" + _toDisplayString(pomodoro.tempoPausa) + \" minuti\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Ripetizioni: \" + _toDisplayString(pomodoro.ripetizioni), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"Nessun pomodoro per questa data.\"))])])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_createElementVNode","_toDisplayString","$setup","formatDate","queryDate","_hoisted_1","onClick","_cache","args","navigateToAddEvent","navigateToAddActivity","navigateToAddPomodoro","_hoisted_2","_createCommentVNode","_hoisted_3","activities","length","_hoisted_4","_Fragment","_renderList","activity","_id","_createTextVNode","title","deadline","date","description","type","_hoisted_5","author","participants","join","_hoisted_6","_hoisted_7","events","_hoisted_8","event","_hoisted_9","_hoisted_10","pomodoros","_hoisted_11","pomodoro","giorno","tempoStudio","tempoPausa","ripetizioni","_hoisted_12"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Eventi, Attività e Pomodori per {{ formatDate(queryDate) }}</h2>\n    <div class=\"button-container\">\n      <button @click=\"navigateToAddEvent\">Aggiungi Evento</button>\n      <button @click=\"navigateToAddActivity\">Aggiungi Attività</button>\n      <button @click=\"navigateToAddPomodoro\">Aggiungi Pomodoro</button>\n    </div>\n    \n    <div class=\"content-container\">\n      <!-- Sezione Attività -->\n      <div class=\"section activities-section\">\n        <h3>LE TUE ATTIVITÀ:</h3>\n        <div v-if=\"activities.length > 0\">\n          <div v-for=\"activity in activities\" :key=\"activity._id\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ activity.title }}</h4>\n            <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <p v-if=\"activity.type === 'gruppo'\" style=\"color: #FF6347;\">\n              Attività di gruppo creata da: {{ activity.author }}<br>\n              Gruppo composto da: {{ activity.participants.join(', ') }}\n            </p>\n          </div>\n        </div>\n        <p v-else>Nessuna attività per questa data.</p>\n      </div>\n      \n      <!-- Sezione Eventi -->\n      <div class=\"section events-section\">\n        <h3>I TUOI EVENTI:</h3>\n        <div v-if=\"events.length > 0\">\n          <div v-for=\"event in events\" :key=\"event._id\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ event.title }}</h4>\n            <p>Data: {{ formatDate(event.date) }}</p>\n            <p>Descrizione: {{ event.description }}</p>\n          </div>\n        </div>\n        <p v-else>Nessun evento per questa data.</p>\n      </div>\n      \n      <!-- Sezione Pomodori -->\n      <div class=\"section pomodoros-section\">\n        <h3>I TUOI POMODORI:</h3>\n        <div v-if=\"pomodoros.length > 0\">\n          <div v-for=\"pomodoro in pomodoros\" :key=\"pomodoro._id\">\n            <h4>Pomodoro Sessione</h4>\n            <p>Data: {{ formatDate(pomodoro.giorno) }}</p>\n            <p>Tempo di studio: {{ pomodoro.tempoStudio }} minuti</p>\n            <p>Tempo di pausa: {{ pomodoro.tempoPausa }} minuti</p>\n            <p>Ripetizioni: {{ pomodoro.ripetizioni }}</p>\n          </div>\n        </div>\n        <p v-else>Nessun pomodoro per questa data.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]); \n    const queryDate = computed(() => route.query.date);\n\n    const navigateToAddEvent = () => {\n      router.push({ path: '/addEvent', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddActivity = () => {\n      router.push({ path: '/addActivities', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddPomodoro = () => {\n      router.push({ path: '/pomodoroTempo', query: { date: queryDate.value } });\n    };\n\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username, date }\n        });\n\n        console.log('Pomodori recuperati:', pomodoroResponse.data);\n\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attività e dei pomodori:', error);\n      }\n    };\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n    onMounted(fetchEvents);\n\n    return {\n      events,\n      activities,\n      pomodoros, \n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro\n    };\n  }\n};\n</script>\n\n<style scoped>\n.button-container {\n  margin-bottom: 20px;\n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n  padding: 20px;\n}\n\n.activities-section {\n  flex: 1.2; /* Rendi la sezione sinistra più grande */\n  background-color: #f9f9f9;\n  height: 20%;\n  width: 20%;\n}\n\n.events-section {\n  flex: 1.5; /* Rendi la sezione centrale più grande */\n  background-color: #e6f7ff;\n}\n\n.pomodoros-section {\n  flex: 1.2; /* Rendi la sezione destra più grande */\n  margin-left: 10px; /* Spingi leggermente a destra */\n  background-color: #ffe6e6;\n}\n\n.section {\n  margin-right: 100px;\n  min-width: 500px;\n  flex: 1.5; \n  padding: 25px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n\n</style>\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAkB;;EAMxBA,KAAK,EAAC;AAAmB;;EAEvBA,KAAK,EAAC;AAA4B;;EAX7CC,GAAA;AAAA;;EAAAA,GAAA;EAkBiDC,KAAuB,EAAvB;IAAA;EAAA;;;EAlBjDD,GAAA;AAAA;;EA4BWD,KAAK,EAAC;AAAwB;;EA5BzCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAyCWD,KAAK,EAAC;AAA2B;;EAzC5CC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEE,mBAAA,CAsDM,cArDJC,mBAAA,CAAoE,YAAhE,kCAAgC,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACD,MAAA,CAAAE,SAAS,mBAC3DJ,mBAAA,CAIM,OAJNK,UAIM,GAHJL,mBAAA,CAA4D;IAAnDM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAO,kBAAA,IAAAP,MAAA,CAAAO,kBAAA,IAAAD,IAAA,CAAkB;KAAE,iBAAe,GACnDR,mBAAA,CAAiE;IAAxDM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAQ,qBAAA,IAAAR,MAAA,CAAAQ,qBAAA,IAAAF,IAAA,CAAqB;KAAE,mBAAiB,GACxDR,mBAAA,CAAiE;IAAxDM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAS,qBAAA,IAAAT,MAAA,CAAAS,qBAAA,IAAAH,IAAA,CAAqB;KAAE,mBAAiB,E,GAG1DR,mBAAA,CA6CM,OA7CNY,UA6CM,GA5CJC,mBAAA,sBAAyB,EACzBb,mBAAA,CAcM,OAdNc,UAcM,G,0BAbJd,mBAAA,CAAyB,YAArB,kBAAgB,sBACTE,MAAA,CAAAa,UAAU,CAACC,MAAM,Q,cAA5BjB,mBAAA,CAUM,OAvBdkB,UAAA,I,kBAcUlB,mBAAA,CAQMmB,SAAA,QAtBhBC,WAAA,CAckCjB,MAAA,CAAAa,UAAU,EAAtBK,QAAQ;yBAApBrB,mBAAA,CAQM;MAR+BF,GAAG,EAAEuB,QAAQ,CAACC;QACjDrB,mBAAA,CAA4E,a,0BAAxEA,mBAAA,CAA8C;MAAxCF,KAAyB,EAAzB;QAAA;MAAA;IAAyB,GAAC,SAAO,sBAfvDwB,gBAAA,CAe8D,GAAC,GAAArB,gBAAA,CAAGmB,QAAQ,CAACG,KAAK,iB,GACpEvB,mBAAA,CAAiE,WAA9D,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACiB,QAAQ,CAACI,QAAQ,IAAIJ,QAAQ,CAACK,IAAI,mBACzDzB,mBAAA,CAA8C,WAA3C,eAAa,GAAAC,gBAAA,CAAGmB,QAAQ,CAACM,WAAW,kBAC9BN,QAAQ,CAACO,IAAI,iB,cAAtB5B,mBAAA,CAGI,KAHJ6B,UAGI,GArBhBN,gBAAA,CAkByE,iCAC7B,GAAArB,gBAAA,CAAGmB,QAAQ,CAACS,MAAM,kB,0BAAG7B,mBAAA,CAAI,sCAnBrEsB,gBAAA,CAmBqE,uBACnC,GAAArB,gBAAA,CAAGmB,QAAQ,CAACU,YAAY,CAACC,IAAI,uB,KApB/DlB,mBAAA,e;qDAwBQd,mBAAA,CAA+C,KAxBvDiC,UAAA,EAwBkB,mCAAiC,G,GAG7CnB,mBAAA,oBAAuB,EACvBb,mBAAA,CAUM,OAVNiC,UAUM,G,0BATJjC,mBAAA,CAAuB,YAAnB,gBAAc,sBACPE,MAAA,CAAAgC,MAAM,CAAClB,MAAM,Q,cAAxBjB,mBAAA,CAMM,OApCdoC,UAAA,I,kBA+BUpC,mBAAA,CAIMmB,SAAA,QAnChBC,WAAA,CA+B+BjB,MAAA,CAAAgC,MAAM,EAAfE,KAAK;yBAAjBrC,mBAAA,CAIM;MAJwBF,GAAG,EAAEuC,KAAK,CAACf;QACvCrB,mBAAA,CAAyE,a,0BAArEA,mBAAA,CAA8C;MAAxCF,KAAyB,EAAzB;QAAA;MAAA;IAAyB,GAAC,SAAO,sBAhCvDwB,gBAAA,CAgC8D,GAAC,GAAArB,gBAAA,CAAGmC,KAAK,CAACb,KAAK,iB,GACjEvB,mBAAA,CAAyC,WAAtC,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACiC,KAAK,CAACX,IAAI,mBACjCzB,mBAAA,CAA2C,WAAxC,eAAa,GAAAC,gBAAA,CAAGmC,KAAK,CAACV,WAAW,iB;qDAGxC3B,mBAAA,CAA4C,KArCpDsC,UAAA,EAqCkB,gCAA8B,G,GAG1CxB,mBAAA,sBAAyB,EACzBb,mBAAA,CAYM,OAZNsC,WAYM,G,0BAXJtC,mBAAA,CAAyB,YAArB,kBAAgB,sBACTE,MAAA,CAAAqC,SAAS,CAACvB,MAAM,Q,cAA3BjB,mBAAA,CAQM,OAnDdyC,WAAA,I,kBA4CUzC,mBAAA,CAMMmB,SAAA,QAlDhBC,WAAA,CA4CkCjB,MAAA,CAAAqC,SAAS,EAArBE,QAAQ;yBAApB1C,mBAAA,CAMM;MAN8BF,GAAG,EAAE4C,QAAQ,CAACpB;kCAChDrB,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAA8C,WAA3C,QAAM,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,UAAU,CAACsC,QAAQ,CAACC,MAAM,mBACtC1C,mBAAA,CAAyD,WAAtD,mBAAiB,GAAAC,gBAAA,CAAGwC,QAAQ,CAACE,WAAW,IAAG,SAAO,iBACrD3C,mBAAA,CAAuD,WAApD,kBAAgB,GAAAC,gBAAA,CAAGwC,QAAQ,CAACG,UAAU,IAAG,SAAO,iBACnD5C,mBAAA,CAA8C,WAA3C,eAAa,GAAAC,gBAAA,CAAGwC,QAAQ,CAACI,WAAW,iB;qDAG3C9C,mBAAA,CAA8C,KApDtD+C,WAAA,EAoDkB,kCAAgC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}