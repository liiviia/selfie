{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-principale\"\n};\nconst _hoisted_2 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-6 content-container\"\n};\nconst _hoisted_5 = {\n  id: \"carouselExampleIndicators\",\n  class: \"carousel slide\",\n  \"data-bs-ride\": \"carousel\"\n};\nconst _hoisted_6 = {\n  class: \"carousel-inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CarouselContent = _resolveComponent(\"CarouselContent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"col-md-6 image-container\"\n  }, [_createElementVNode(\"img\", {\n    class: \"img-fluid\",\n    src: \"https://images.hdqwalls.com/wallpapers/abstract-shapes-4k-q2.jpg\",\n    alt: \"Immagine Home\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"carousel-item\", {\n      active: $data.activeIndex === 0\n    }])\n  }, [_createVNode(_component_CarouselContent, {\n    title: \"Evento\",\n    isCurrentDay: $data.isCurrentDay,\n    noMessage: $data.noEventsMessage,\n    itemTitle: $data.lastEventTitle,\n    itemDescription: $data.lastEventDescription,\n    itemDate: $data.lastEventDate,\n    onGetCurrentDay: $options.getCurrentDayEvents,\n    onGetLastItem: $options.getLastEvent\n  }, null, 8 /* PROPS */, [\"isCurrentDay\", \"noMessage\", \"itemTitle\", \"itemDescription\", \"itemDate\", \"onGetCurrentDay\", \"onGetLastItem\"])], 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"carousel-item\", {\n      active: $data.activeIndex === 1\n    }])\n  }, [_createVNode(_component_CarouselContent, {\n    title: \"Attività\",\n    isCurrentDay: $data.isCurrentDayActivity,\n    noMessage: $data.noActivitiesMessage,\n    itemTitle: $data.lastActivityTitle,\n    itemDescription: $data.lastActivityDescription,\n    itemDate: $data.lastActivityDeadline,\n    onGetCurrentDay: $options.getCurrentDayActivities,\n    onGetLastItem: $options.getLastActivity\n  }, null, 8 /* PROPS */, [\"isCurrentDay\", \"noMessage\", \"itemTitle\", \"itemDescription\", \"itemDate\", \"onGetCurrentDay\", \"onGetLastItem\"])], 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"carousel-item\", {\n      active: $data.activeIndex === 2\n    }])\n  }, [_createVNode(_component_CarouselContent, {\n    title: \"Nota\",\n    noMessage: $data.noNotesMessage,\n    itemTitle: $data.lastNoteHeading,\n    itemDescription: $data.lastNoteAuthor\n  }, null, 8 /* PROPS */, [\"noMessage\", \"itemTitle\", \"itemDescription\"])], 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"carousel-item\", {\n      active: $data.activeIndex === 3\n    }])\n  }, [_createVNode(_component_CarouselContent, {\n    title: \"Pomodoro\",\n    noMessage: $data.noPomodorosMessage,\n    itemTitle: 'Tempo studio: ' + $data.lastPomodoroTempoStudio,\n    itemDescription: 'Tempo pausa: ' + $data.lastPomodoroTempoPausa,\n    itemDate: 'Ripetizioni: ' + $data.lastPomodoroRipetizioni\n  }, null, 8 /* PROPS */, [\"noMessage\", \"itemTitle\", \"itemDescription\", \"itemDate\"])], 2 /* CLASS */)]), _createElementVNode(\"button\", {\n    class: \"carousel-control-prev\",\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevSlide && $options.prevSlide(...args))\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"span\", {\n    class: \"carousel-control-prev-icon\",\n    \"aria-hidden\": \"true\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"Previous\", -1 /* HOISTED */)])), _createElementVNode(\"button\", {\n    class: \"carousel-control-next\",\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextSlide && $options.nextSlide(...args))\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"span\", {\n    class: \"carousel-control-next-icon\",\n    \"aria-hidden\": \"true\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"Next\", -1 /* HOISTED */)]))])])])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","alt","_hoisted_4","_hoisted_5","_hoisted_6","_normalizeClass","active","$data","activeIndex","_createVNode","_component_CarouselContent","title","isCurrentDay","noMessage","noEventsMessage","itemTitle","lastEventTitle","itemDescription","lastEventDescription","itemDate","lastEventDate","onGetCurrentDay","$options","getCurrentDayEvents","onGetLastItem","getLastEvent","isCurrentDayActivity","noActivitiesMessage","lastActivityTitle","lastActivityDescription","lastActivityDeadline","getCurrentDayActivities","getLastActivity","noNotesMessage","lastNoteHeading","lastNoteAuthor","noPomodorosMessage","lastPomodoroTempoStudio","lastPomodoroTempoPausa","lastPomodoroRipetizioni","type","onClick","_cache","args","prevSlide","nextSlide"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/HomePrincipale.vue"],"sourcesContent":["<template>\n  <div class=\"home-principale\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-6 image-container\">\n          <img class=\"img-fluid\" src=\"https://images.hdqwalls.com/wallpapers/abstract-shapes-4k-q2.jpg\" alt=\"Immagine Home\">\n        </div>\n        <div class=\"col-md-6 content-container\">\n          <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-inner\">\n              <div class=\"carousel-item\" :class=\"{ active: activeIndex === 0 }\">\n                <CarouselContent title=\"Evento\" :isCurrentDay=\"isCurrentDay\" :noMessage=\"noEventsMessage\"\n                                 :itemTitle=\"lastEventTitle\" :itemDescription=\"lastEventDescription\" :itemDate=\"lastEventDate\"\n                                 @getCurrentDay=\"getCurrentDayEvents\" @getLastItem=\"getLastEvent\" />\n              </div>\n              \n              <div class=\"carousel-item\" :class=\"{ active: activeIndex === 1 }\">\n                <CarouselContent title=\"Attività\" :isCurrentDay=\"isCurrentDayActivity\" :noMessage=\"noActivitiesMessage\"\n                                 :itemTitle=\"lastActivityTitle\" :itemDescription=\"lastActivityDescription\" :itemDate=\"lastActivityDeadline\"\n                                 @getCurrentDay=\"getCurrentDayActivities\" @getLastItem=\"getLastActivity\" />\n              </div>\n              \n              <div class=\"carousel-item\" :class=\"{ active: activeIndex === 2 }\">\n                <CarouselContent title=\"Nota\" :noMessage=\"noNotesMessage\"\n                                 :itemTitle=\"lastNoteHeading\" :itemDescription=\"lastNoteAuthor\" />\n              </div>\n              \n              <div class=\"carousel-item\" :class=\"{ active: activeIndex === 3 }\">\n                <CarouselContent title=\"Pomodoro\" :noMessage=\"noPomodorosMessage\"\n                                 :itemTitle=\"'Tempo studio: ' + lastPomodoroTempoStudio\"\n                                 :itemDescription=\"'Tempo pausa: ' + lastPomodoroTempoPausa\"\n                                 :itemDate=\"'Ripetizioni: ' + lastPomodoroRipetizioni\" />\n              </div>\n            </div>\n            <button class=\"carousel-control-prev\" type=\"button\" @click=\"prevSlide\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n            <button class=\"carousel-control-next\" type=\"button\" @click=\"nextSlide\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n/* import NavigationBar from '../components/NavigationBar.vue';\n */\nimport axios from 'axios';\n\nexport default {\n  name: 'HomePrincipale',\n  /* components: {\n    NavigationBar,\n  }, */\n  data() {\n    return {\n      activeIndex: 0,\n      username: localStorage.getItem('username') || 'Guest',\n      lastEventTitle: '',\n      lastEventDescription: '',\n      lastEventDate: '',\n      lastActivityTitle: '',\n      lastActivityDescription: '',\n      lastActivityDeadline: '',\n      lastNoteHeading: '',\n      lastNoteAuthor: '',\n      noEventsMessage: '' ,\n      noActivitiesMessage: '',\n      noNotesMessage: '',\n      noPomodorosMessage: '',\n      lastPomodoroTempoStudio: '',\n      lastPomodoroTempoPausa: '',\n      lastPomodoroRipetizioni: '',\n      currentEventTitle: '',\n      currentEventDescription: '',\n      currentEventDate: '',\n      currentActivityTitle: '',\n      currentActivityDescription: '',\n      currentActivityDeadline: '',\n      isCurrentDay: false,\n      isCurrentDayActivity: false\n    };\n  },\n  mounted() {\n    this.getLastEvent();\n    this.getLastActivity();\n    this.getLastNote();\n    this.getLastPomodoro();\n  },\n  methods: {\n    async getLastEvent() {\n      try {\n        const token = sessionStorage.getItem('token');\n        console.log(\"token home \", token);\n        const response = await axios.get('/api/events/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n        if (response.data) {\n          this.lastEventTitle = response.data.title || 'Nessun evento';\n          this.lastEventDescription = response.data.description || 'Nessuna descrizione';\n          this.lastEventDate = response.data.date || 'Nessuna data';\n        } else {\n          this.noEventsMessage = 'Nessun evento trovato.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo evento:', error);\n        this.noEventsMessage = 'Errore nel caricamento dell\\'ultimo evento.';\n      }\n    },\n\n    logout() {\n      localStorage.clear();\n      this.$router.push('/');\n    },\n\n\n    async getLastActivity() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastActivityTitle = response.data.title;\n          this.lastActivityDescription = response.data.description;\n          this.lastActivityDeadline = new Date(response.data.deadline).toLocaleDateString();\n          this.noActivitiesMessage = '';\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n        }\n\n      } catch (error) {\n        console.error('Errore nel recupero delle attività:', error);\n      }\n    },\n    async getLastNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data) {\n          this.lastNoteHeading = response.data.heading;\n          this.lastNoteAuthor = response.data.author;\n          this.noNotesMessage = '';\n        } else {\n          this.noNotesMessage = 'Non ci sono note trovate';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultima nota:', error);\n        this.noNotesMessage = 'Errore nel caricamento dell\\'ultima nota.';\n      }\n    },\n    async getLastPomodoro() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastPomodoroTempoStudio = response.data.tempoStudio;\n          this.lastPomodoroTempoPausa = response.data.tempoPausa;\n          this.lastPomodoroRipetizioni = response.data.ripetizioni;\n          this.noPomodorosMessage = '';\n        } else {\n          this.noPomodorosMessage = 'Nessun pomodoro trovato';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo pomodoro:', error);\n        this.noPomodorosMessage = 'Errore nel caricamento dell\\'ultimo pomodoro.';\n      }\n    },\n    async getCurrentDayEvents() {\n  try { \n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const response = await axios.get('/api/events/current-day', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });     \n\n    if (response.data && response.data.length > 0) {\n      // Assumiamo che la risposta sia un array di eventi\n      const event = response.data[0]; // Prendiamo il primo evento\n      this.lastEventTitle = event.title;\n      this.lastEventDescription = event.description;\n      this.lastEventDate = new Date(event.date).toLocaleDateString();\n      this.noEventsMessage = '';\n      this.isCurrentDay = true;\n      // Puliamo il messaggio di errore\n    } else {\n      this.noEventsMessage = 'Non ci sono eventi imminenti';\n      this.lastEventTitle = '';\n      this.lastEventDescription = '';\n      this.lastEventDate = '';\n    }\n    console.log(\"eventi del giorno corrente\", response.data);\n  } catch (error) { \n    console.error('Errore nel recupero degli eventi del giorno corrente:', error);\n    this.noEventsMessage = 'Errore nel caricamento degli eventi del giorno corrente.';\n    this.lastEventTitle = '';\n    this.lastEventDescription = '';\n    this.lastEventDate = '';\n  }\n},\nasync getCurrentDayActivities() {\n  try {\n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const response = await axios.get('/api/activities/current-day', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: { username: username }\n    });\n\n    if (response.data && response.data.length > 0) {\n      const activity = response.data[0];\n      this.lastActivityTitle = activity.title;\n      this.lastActivityDescription = activity.description;\n      this.lastActivityDeadline = new Date(activity.deadline).toLocaleDateString();\n      this.noActivitiesMessage = '';\n      this.isCurrentDayActivity = true;\n    } else {\n      this.noActivitiesMessage = 'Non ci sono attività imminenti';\n      this.lastActivityTitle = '';\n      this.lastActivityDescription = '';\n      this.lastActivityDeadline = '';\n      this.isCurrentDayActivity = true;\n    }\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      this.noActivitiesMessage = 'Non ci sono attività imminenti123';\n      console.log(\"no\",error) ;\n      this.lastActivityTitle = '';\n      this.lastActivityDescription = '';\n      this.lastActivityDeadline = '';\n      this.isCurrentDayActivity = true;\n    } else {\n      console.error('Errore nel recupero delle attività del giorno corrente:', error);\n      this.noActivitiesMessage = 'Errore nel caricamento delle attività del giorno corrente.';\n    }\n  }\n},\n\n\n    prevSlide() {\n      this.activeIndex = (this.activeIndex - 1 + 4) % 4;\n    },\n    nextSlide() {\n      this.activeIndex = (this.activeIndex + 1) % 4;\n    }\n  },\n  components: {\n    CarouselContent: {\n      props: ['title', 'isCurrentDay', 'noMessage', 'itemTitle', 'itemDescription', 'itemDate'],\n      template: `\n        <div class=\"carousel-content\">\n          <h2>{{ isCurrentDay ? title + ' di Oggi' : 'Ultimo ' + title }}</h2>\n          <p v-if=\"noMessage\">{{ noMessage }}</p>\n          <div v-else class=\"item-details\">\n            <p><strong>Titolo:</strong> {{ itemTitle }}</p>\n            <p><strong>Descrizione:</strong> {{ itemDescription }}</p>\n            <p v-if=\"itemDate\"><strong>Data:</strong> {{ itemDate }}</p>\n          </div>\n          <div class=\"button-container\">\n            <button v-if=\"!isCurrentDay\" class=\"btn btn-primary\" @click=\"$emit('getCurrentDay')\">\n              Vedi {{ title.toLowerCase() }} del giorno corrente\n            </button>\n            <button v-else class=\"btn btn-secondary\" @click=\"$emit('getLastItem')\">\n              Torna all'ultimo {{ title.toLowerCase() }}\n            </button>\n          </div>\n        </div>\n      `\n    }\n  }\n\n};\n</script>\n\n<style scoped>\nbody {\n  background: linear-gradient(to bottom, #0000ff, #ffffff);\n  margin: 0;\n}\n\n.home-principale {\n  text-align: center;\n}\n\n.carousel-item {\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  background-color: #000;\n  border-radius: 50%;\n}\n    \n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}