{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nexport default {\n  data() {\n    return {\n      username: localStorage.getItem('username') || 'Guest',\n      showNotifications: false,\n      notifications: [],\n      timeMachineDate: '',\n      timeMachineTime: ''\n    };\n  },\n  computed: {\n    currentPage() {\n      const routeNameMap = {\n        '/': 'Login',\n        '/homePrincipale': 'Home',\n        '/pomodoroTempo': 'Pomodoro',\n        '/todo': 'Lista Note',\n        '/calendarEvent': 'Calendario',\n        '/addEvent': 'Aggiungi Evento',\n        '/eventsE': 'Lista Eventi',\n        '/addActivities': 'Aggiungi Attività',\n        '/activities': 'Lista Attività',\n        '/pomSession': 'Sessioni Pomodoro',\n        '/accountUtente': 'Gestisci il tuo Account'\n      };\n      return routeNameMap[this.$route.path] || '';\n    }\n  },\n  mounted() {\n    this.fetchData(); // Questo chiamerà fetchData al caricamento del componente\n  },\n  methods: {\n    async fetchData() {\n      try {\n        // Fai la richiesta GET\n        const response = await axios.get('/api/getTime-machine'); // Sostituisci con il tuo endpoint\n        // Stampa i dati ricevuti dalla risposta in console\n        console.log(\"get time machine\", response.data);\n      } catch (error) {\n        // Gestisci eventuali errori\n        console.error('Errore nella richiesta GET:', error);\n      }\n    },\n    async activateTimeMachine() {\n      // Assicurati che la data e l'ora siano selezionate\n      if (!this.selectedDate || !this.selectedTime) {\n        alert('Per favore seleziona una data e un\\'ora!');\n        return;\n      }\n\n      // Combina la data e l'ora in una stringa ISO nel fuso orario locale\n      const timeMachineData = {\n        date: moment(`${this.selectedDate}T${this.selectedTime}:00`).tz('Europe/Rome').format()\n      };\n      try {\n        const token = sessionStorage.getItem('token'); // Recupera il token di autenticazione, se presente\n        const response = await axios.post('/api/updateTime-machine', timeMachineData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Successo, ad esempio, mostra un messaggio\n        alert('Time Machine attivata con successo!');\n        console.log(response.data);\n        this.fetchData();\n      } catch (error) {\n        // Gestione degli errori\n        console.error('Errore nell\\'attivazione della Time Machine:', error);\n        alert('Si è verificato un errore durante l\\'attivazione della Time Machine');\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.clear();\n      sessionStorage.clear();\n      this.$router.push('/');\n    },\n    async toggleNotifications() {\n      // Mostra o nasconde il menu delle notifiche\n      this.showNotifications = !this.showNotifications;\n      if (this.showNotifications) {\n        await this.checkDeadlines();\n      }\n    },\n    async checkDeadlines() {\n      //notifiche con scadenza <= 2gg\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activities/2days', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        this.notifications = response.data; // Salva le notifiche nella variabile\n        console.log(this.notifications);\n        console.log(response.data);\n        //alert('Email inviata con successo!');\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche:', error);\n      }\n    },\n    async sendEmail() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.post('/api/activities/sendEmail', {\n          username: username\n        },\n        // Dati nel body della richiesta\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // Headers separati\n        });\n        alert(response.data.message);\n      } catch (error) {\n        console.error('Errore nell invio dell email:', error);\n        alert('Errore durante invio email');\n      }\n    }\n    // mounted() {\n    //  this.checkDeadlines();\n    // }\n  }\n};","map":{"version":3,"names":["axios","moment","data","username","localStorage","getItem","showNotifications","notifications","timeMachineDate","timeMachineTime","computed","currentPage","routeNameMap","$route","path","mounted","fetchData","methods","response","get","console","log","error","activateTimeMachine","selectedDate","selectedTime","alert","timeMachineData","date","tz","format","token","sessionStorage","post","headers","Authorization","logout","removeItem","clear","$router","push","toggleNotifications","checkDeadlines","params","sendEmail","message"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NavigationBar.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar bg-body-tertiary\">\n    <div class=\"container-fluid\">\n      <div class=\"d-flex align-items-center\">\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\"\n          aria-controls=\"offcanvasNavbar\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        \n      </div>\n\n        \n\n      <div class=\"d-flex ms-auto align-items-center\">\n        <a class=\"navbar-brand me-4\" href=\"/homePrincipale\">\n            <i class=\"fas fa-home\"></i>\n        </a>\n\n        <a class=\"me-4\" href=\"/accountUtente\">\n            <i class=\"fas fa-user\" style=\"color: black;\"></i>\n            <span class=\"username-initials\">{{ username }}</span>\n        </a>\n\n        <a class=\"me-4\" href=\"#\" @click=\"toggleNotifications\">\n          <i class=\"fas fa-bell\" style=\"color: black;\"></i> \n          <span v-if=\"notifications.length\" class=\"badge\">{{ notifications.length }}</span> \n        </a>\n\n        <div v-if=\"showNotifications\" class=\"notifications-dropdown\">\n          <ul>\n            <li v-for=\"notification in notifications\" :key=\"notification._id\">\n              titolo: {{ notification.title }} - Scadenza: {{ notification.deadline }}\n            </li>\n            <li v-if=\"notifications.length === 0\">\n              Nessuna notifica\n            </li>\n          </ul>\n          <button @click=\"sendEmail\" class=\"btn btn-primary\">Invia Email</button> \n        </div>        \n\n      </div>\n\n\n\n      <div class=\"d-flex ms-auto align-items-center time-machine-form\">\n  <input type=\"date\" v-model=\"selectedDate\" class=\"form-control form-control-sm me-2\" />\n  <input type=\"time\" v-model=\"selectedTime\" class=\"form-control form-control-sm me-2\" />\n  <button @click=\"activateTimeMachine\" class=\"btn btn-sm btn-primary\">Vai nella Time Machine</button>\n</div>\n\n\n\n      <!-- Offcanvas Sidebar -->\n      <div class=\"offcanvas offcanvas-start\" tabindex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\n        <div class=\"offcanvas-header\">\n          <h5 class=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"offcanvas-body\">\n          <ul class=\"navbar-nav me-auto\">\n            <span class=\"nav-item username-text\">\n              Benvenuto, {{ username }}!\n            </span>\n            <li class=\"nav-item\"><a class=\"nav-link\" href=\"/todo\">Note</a></li>\n\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"eventDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                Eventi\n              </a>\n              <ul class=\"dropdown-menu\" aria-labelledby=\"eventDropdown\">\n                <li><a class=\"dropdown-item\" href=\"/addEvent\">Aggiungi evento</a></li>\n             <!--   <li><a class=\"dropdown-item\" href=\"/eventsE\">Lista eventi</a></li>-->\n              </ul>\n            </li>\n  \n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"activityDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                Attività\n              </a>\n              <ul class=\"dropdown-menu\" aria-labelledby=\"activityDropdown\">\n                <li><a class=\"dropdown-item\" href=\"/addActivities\">Aggiungi attività</a></li>\n              <!--  <li><a class=\"dropdown-item\" href=\"/activities\">Lista attività</a></li> -->\n              </ul>\n            </li>\n  \n            <li class=\"nav-item\"><a class=\"nav-link\" href=\"/calendarEvent\">Calendario</a></li>\n            <li class=\"nav-item\"><a class=\"nav-link\" href=\"/pomodoroTempo\">Pomodoro</a></li>\n          <!--  <li class=\"nav-item\"><a class=\"nav-link\" href=\"/pomSession\">Sessioni Pomodoro</a></li>-->\n            <!-- <li class=\"nav-item\"><a class=\"nav-link\" href=\"/accountUtente\">Gestisci il tuo Account</a></li> --> \n          </ul>\n          <!-- Logout Button -->\n          <button type=\"button\" class=\"btn btn-dark mt-3\" @click=\"logout\">Logout</button>\n        </div>\n      </div>\n    </div>\n  </nav>\n</template>\n  \n<script>\n\nimport axios from 'axios';\nimport moment from 'moment-timezone';\n\n\n  export default {\n    data() {\n      return {\n        username: localStorage.getItem('username') || 'Guest',\n        showNotifications: false,\n        notifications: [] ,\n        timeMachineDate: '',  \n        timeMachineTime: ''  \n      };\n    }, \n    computed:{\n      currentPage() {\n        const routeNameMap = {\n          '/': 'Login', \n          '/homePrincipale': 'Home',\n          '/pomodoroTempo': 'Pomodoro',\n          '/todo': 'Lista Note',\n          '/calendarEvent': 'Calendario',\n          '/addEvent': 'Aggiungi Evento',\n          '/eventsE': 'Lista Eventi',\n          '/addActivities': 'Aggiungi Attività',\n          '/activities': 'Lista Attività',\n          '/pomSession': 'Sessioni Pomodoro',\n          '/accountUtente': 'Gestisci il tuo Account',\n        };\n        return routeNameMap[this.$route.path] || ''; \n      },\n     \n    },\n\n    mounted() {\n  this.fetchData();  // Questo chiamerà fetchData al caricamento del componente\n},\n\n\n    methods:{\n\n      async fetchData() {\n    try {\n      // Fai la richiesta GET\n      const response = await axios.get('/api/getTime-machine'); // Sostituisci con il tuo endpoint\n      // Stampa i dati ricevuti dalla risposta in console\n      console.log(\"get time machine\",response.data);\n    } catch (error) {\n      // Gestisci eventuali errori\n      console.error('Errore nella richiesta GET:', error);\n    }\n  },\n\n\n  async activateTimeMachine() {\n    // Assicurati che la data e l'ora siano selezionate\n    if (!this.selectedDate || !this.selectedTime) {\n        alert('Per favore seleziona una data e un\\'ora!');\n        return;\n    }\n\n    // Combina la data e l'ora in una stringa ISO nel fuso orario locale\n    const timeMachineData = {\n        date: moment(`${this.selectedDate}T${this.selectedTime}:00`).tz('Europe/Rome').format()\n    };\n\n    try {\n        const token = sessionStorage.getItem('token'); // Recupera il token di autenticazione, se presente\n        const response = await axios.post('/api/updateTime-machine', timeMachineData, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n\n        // Successo, ad esempio, mostra un messaggio\n        alert('Time Machine attivata con successo!');\n        console.log(response.data);\n        this.fetchData();\n    } catch (error) {\n        // Gestione degli errori\n        console.error('Errore nell\\'attivazione della Time Machine:', error);\n        alert('Si è verificato un errore durante l\\'attivazione della Time Machine');\n    }\n},\n\n\n      \n     \n\n\n      logout() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        localStorage.clear();\n        sessionStorage.clear();\n        this.$router.push('/');\n      },\n\n\n      async toggleNotifications(){\n        // Mostra o nasconde il menu delle notifiche\n        this.showNotifications = !this.showNotifications;\n        if (this.showNotifications) {\n          await this.checkDeadlines();\n        }\n      },\n  \n\n      async checkDeadlines() {    //notifiche con scadenza <= 2gg\n        try {\n          const token = sessionStorage.getItem('token');\n          const username = localStorage.getItem('username');\n          const response = await axios.get('/api/activities/2days', {\n            headers: {Authorization: `Bearer ${token}`},\n            params:{username: username}\n          });\n          this.notifications = response.data; // Salva le notifiche nella variabile\n          console.log(this.notifications);\n          console.log(response.data);\n          //alert('Email inviata con successo!');\n        } catch (error) {\n          console.error('Errore nel recupero delle notifiche:', error);\n        } \n      },\n\n\n      async sendEmail() {\n        try {\n          const token = sessionStorage.getItem('token');\n          const username = localStorage.getItem('username');\n          const response = await axios.post('/api/activities/sendEmail', \n            { username: username },  // Dati nel body della richiesta\n            {headers: { Authorization: `Bearer ${token}` }  // Headers separati\n            }\n          );\n          alert(response.data.message); \n        } catch (error) {\n          console.error('Errore nell invio dell email:', error);\n          alert('Errore durante invio email');\n        }\n      }      \n      // mounted() {\n      //  this.checkDeadlines();\n      // }\n      \n    }\n    \n    \n  };\n\n</script>\n\n<style scoped>\n\n.time-machine-form input,\n.time-machine-form button {\n  width: 150px; /* Imposta una larghezza fissa */\n}\n\n\n.form-control-sm {\n  font-size: 0.8rem; /* Riduce la dimensione del testo */\n  padding: 0.375rem 0.75rem; /* Riduce l'altezza degli input */\n}\n\n.btn-sm {\n  padding: 0.375rem 0.75rem; /* Riduce l'altezza del bottone */\n  font-size: 0.8rem; /* Riduce la dimensione del testo nel bottone */\n}\n\n\n.form-control-sm {\n  font-size: 0.8rem; /* Riduce la dimensione del testo */\n  padding: 0.375rem 0.75rem; /* Riduce l'altezza degli input */\n}\n\n.btn-sm {\n  padding: 0.375rem 0.75rem; /* Riduce l'altezza del bottone */\n  font-size: 0.8rem; /* Riduce la dimensione del testo nel bottone */\n}\n\n.carousel-item {\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  background-color: #000;\n  border-radius: 50%;\n}\n\n.navbar {\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.6);\n}\n\n.nav-link {\n  padding: 10px 15px;\n  transition: background-color 0.3s;\n}\n\n.nav-link:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 5px;\n}\n\n.btn-danger {\n  margin-left: 10px;\n}\n\n\n.btn-danger:hover {\n  background-color: #c82333;\n  transition: background-color 0.3s;\n}\n\n.username-text{\n  color: #1100ff; \n  font-weight: bold;\n}\n\n\n\n\n.notifications-dropdown {\n  position: absolute;\n  top: 50px; \n  right: 10px;\n  width: 200px;\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  padding: 10px;\n  z-index: 1000; \n}\n\n.notifications-dropdown ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.notifications-dropdown li {\n  padding: 8px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.notifications-dropdown li:last-child {\n  border-bottom: none;\n}\n\n.notifications-dropdown button {\n  margin-top: 10px;\n  width: 100%; \n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}