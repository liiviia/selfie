{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-principale\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-3 text-center\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-3 d-flex flex-column align-items-center\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"col-md-6 d-flex justify-content-center\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"col-md-3 d-flex flex-column align-items-center justify-content-center\"\n};\nconst _hoisted_9 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"row\",\n    style: {\n      \"height\": \"10%\",\n      \"width\": \"100%\"\n    }\n  }, [_createElementVNode(\"div\", {\n    class: \"col-12\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"Benvenuto su SELFIE\")])], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: $data.gestisciImagePath,\n    alt: \"Gestisci eventi e attività\",\n    class: \"img-left\"\n  }, null, 8 /* PROPS */, _hoisted_5), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"img-description-container\"\n  }, [_createElementVNode(\"p\", {\n    class: \"img-description\"\n  }, \"Con SELFIE, puoi gestire i tuoi eventi e le tue attività quotidiane in modo semplice e visualizzarle nel tuo calendario!\")], -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: $data.imagePath,\n    alt: \"Homepage Design\",\n    class: \"img-fluid\"\n  }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"img-description-container-2\"\n  }, [_createElementVNode(\"p\", {\n    class: \"img-description-2\"\n  }, \"SELFIE ti permette di creare delle note per gestire i tuoi appunti, condividendoli anche con altre persone, e ti permette di studiare comodamente con cicli di studio e pausa programmabili a piacere.\")], -1 /* HOISTED */)), _createElementVNode(\"img\", {\n    src: $data.img2Path,\n    alt: \"Immagine a destra\",\n    class: \"img-right\"\n  }, null, 8 /* PROPS */, _hoisted_9)])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","style","_hoisted_3","_hoisted_4","src","$data","gestisciImagePath","alt","_hoisted_5","_hoisted_6","imagePath","_hoisted_7","_hoisted_8","img2Path","_hoisted_9"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/HomePrincipale.vue"],"sourcesContent":["<template>\n  <div class=\"home-principale\">\n    <div class=\"container mt-3 text-center\">\n      <div class=\"row\" style=\"height: 10%; width: 100%;\">\n        <div class=\"col-12\">\n          <h1 class=\"title\">Benvenuto su SELFIE</h1>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-3 d-flex flex-column align-items-center\">\n          <img :src=\"gestisciImagePath\" alt=\"Gestisci eventi e attività\" class=\"img-left\" />\n          <div class=\"img-description-container\">\n            <p class=\"img-description\">Con SELFIE, puoi gestire i tuoi eventi e le tue attività quotidiane in modo semplice e visualizzarle nel tuo calendario!</p>\n          </div>\n        </div>\n        <div class=\"col-md-6 d-flex justify-content-center\">\n          <img :src=\"imagePath\" alt=\"Homepage Design\" class=\"img-fluid\" />\n        </div>\n        <div class=\"col-md-3 d-flex flex-column align-items-center justify-content-center\">\n          <div class=\"img-description-container-2\">\n            <p class=\"img-description-2\">SELFIE ti permette di creare delle note per gestire i tuoi appunti, condividendoli anche con altre persone, e ti permette di studiare comodamente con cicli di studio e pausa programmabili a piacere.</p>\n          </div>\n          <img :src=\"img2Path\" alt=\"Immagine a destra\" class=\"img-right\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<!--\n<template>\n\n        \n\n  <div class=\"home-principale\">\n    <div class=\"container mt-3\">\n      <div class=\"row\">\n\n\n     \n\n\n\n\n\n        \n\n        <div class=\"col-md-6\">\n       \n          <div class=\"notification-form mt-4\">\n            <div class=\"form-group\">\n              <label for=\"userSelect\">Seleziona utenti per notifica:</label>\n              <select id=\"userSelect\" v-model=\"selectedUsers\" multiple class=\"form-control\">\n                <option v-for=\"user in users\" :key=\"user._id\" :value=\"user._id\">\n                  {{ user.username }}\n                </option>\n              </select>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"message\">Scrivi il messaggio:</label>\n              <textarea id=\"message\" v-model=\"notificationMessage\" placeholder=\"Scrivi il tuo messaggio qui...\" class=\"form-control\"></textarea>\n            </div>\n          \n            <button @click=\"sendNotifications\" class=\"btn btn-primary\">Invia Notifica</button>\n          </div>\n        </div>\n\n        \n\n\n\n\n\n\n        <div class=\"col-md-6\">\n          <div id=\"carouselExampleIndicators\" class=\"carousel slide mt-4\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-indicators\">\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"3\" aria-label=\"Slide 4\"></button>\n            </div>\n\n\n\n            <div class=\"carousel-inner\">\n\n\n              <div class=\"carousel-item active\">\n  <div class=\"d-block w-100 text-center p-4\">\n    <div class=\"form-group mt-3\">\n      <label for=\"eventSelect\">Scegli preview:</label>\n      <select id=\"eventSelect\" v-model=\"isCurrentDay\" @change=\"toggleEvent\" class=\"custom-select\">\n        <option :value=\"false\">Ultimo Evento</option>\n        <option :value=\"true\">Evento del giorno corrente</option>\n        <option :value=\"null\">Tutti gli Eventi</option>\n      </select>\n    </div>\n\n    <h2>\n      {{ isCurrentDay === null ? 'Tutti gli Eventi' : (isCurrentDay ? 'Evento di Oggi' : 'Ultimo Evento') }}\n    </h2>\n    <p v-if=\"noEventsMessage\">{{ noEventsMessage }}</p>\n\n    <div v-if=\"isCurrentDay === null && allEvents.length > 0\">\n      <h3>Eventi Trovati:</h3>\n      <ul>\n        <li v-for=\"event in allEvents\" :key=\"event.id\">\n          <strong>Titolo:</strong> {{ event.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ event.description || 'N/A' }}<br>\n          <strong>Data:</strong> {{ formatDate(event.date) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else-if=\"isCurrentDay\">\n      <ul>\n        <li v-for=\"event in allEventCurrent\" :key=\"event.id\">\n          <strong>Titolo:</strong> {{ event.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ event.description || 'N/A' }}<br>\n          <strong>Data:</strong> {{ formatDate(event.date) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else>\n      <p>\n        <strong>Titolo:</strong> {{ lastEventTitle }}<br>\n        <strong>Descrizione:</strong> {{ lastEventDescription }}<br>\n        <strong>Data:</strong> {{ lastEventDate }}\n      </p>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n<div class=\"carousel-item\">\n  <div class=\"d-block w-100 text-center p-4\">\n\n    <div class=\"form-group mt-3\">\n      <label for=\"activitySelect\">Scegli preview:</label>\n      <select id=\"activitySelect\" v-model=\"isCurrentDayActivity\" @change=\"toogleActivity\" class=\"custom-select\">\n        <option :value=\"false\">Ultima attività</option>\n        <option :value=\"true\">Attività del giorno corrente</option>\n        <option :value=\"null\">Tutte le attività</option>\n      </select>\n    </div>\n\n    <h2>\n      {{ isCurrentDayActivity === null ? 'Tutte le Attività' : (isCurrentDayActivity ? 'Attività di Oggi' : 'Ultima Attività') }}\n    </h2>\n    <p v-if=\"noActivitiesMessage\">{{ noActivitiesMessage }}</p>\n\n    <div v-if=\"isCurrentDayActivity === null && allActivities.length > 0\">\n      <h3>Attività Trovate:</h3>\n      <ul>\n        <li v-for=\"activity in allActivities\" :key=\"activity.id\">\n          <strong>Titolo:</strong> {{ activity.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ activity.description || 'N/A' }}<br>\n          <strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else-if=\"isCurrentDayActivity\">\n      <p v-if=\"currentDayActivities.length === 0\">Non ci sono attività per oggi.</p>\n      <ul>\n        <li v-for=\"activity in currentDayActivities\" :key=\"activity.id\">\n          <strong>Titolo:</strong> {{ activity.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ activity.description || 'N/A' }}<br>\n          <strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else>\n      <strong>Titolo:</strong> {{ lastActivityTitle }}<br>\n      <strong>Descrizione:</strong> {{ lastActivityDescription }}<br>\n      <strong>Scadenza:</strong> {{ lastActivityDeadline }}\n    </div>\n  </div>\n</div>\n\n\n\n\n\n  \n  <div class=\"carousel-item\">\n  <div class=\"d-block w-100 text-center p-4\">\n    <h2>Ultima Nota</h2>\n    <p><strong>Titolo:</strong> {{ lastNoteHeading }}</p>\n\n    <div v-if=\"!showNoteText\">\n      <p v-if=\"noNotesMessage\">{{ noNotesMessage }}</p>\n\n      <p v-else>\n        <strong>Autore:</strong> {{ lastNoteAuthor }}\n      </p>\n      <button v-if=\"lastNoteHeading\" class=\"btn btn-primary mt-3\" @click=\"getNoteText\">Vedi testo completo della nota</button>\n    </div>\n\n    <div v-if=\"showNoteText\" class=\"note-text\">\n      <p><strong>Testo completo:</strong></p>\n      <div v-html=\"convertMarkdown(lastNoteText)\"></div>\n      <button class=\"btn btn-secondary mt-3\" @click=\"showNoteText = false\">Torna indietro</button>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n\n\n\n            <div class=\"carousel-item\">\n              <div class=\"d-block w-100 text-center p-4\">\n                <h2>Ultimo Pomodoro</h2>\n                <p v-if=\"noPomodorosMessage\">{{ noPomodorosMessage }}</p>\n                <p v-else>\n                   <strong>tempo studio prefissato:</strong> {{ lastPomodoroTempoStudio }}<br>\n                   <strong>tempo pausa prefissato:</strong> {{ lastPomodoroTempoPausa }}<br>\n                   <strong>ripetizioni prefissate:</strong> {{ lastPomodoroRipetizioni }}\n                </p>\n              </div>\n            </div>\n\n\n\n\n\n            </div>\n            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n\n\n\n          </div>\n\n\n          <div id=\"carouselNotifications\" class=\"carousel slide mt-4\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-indicators\">\n              <button v-for=\"(notification, index) in notifications\" :key=\"index\" type=\"button\" \n                      :data-bs-target=\"'#carouselNotifications'\" :data-bs-slide-to=\"index\" \n                      :class=\"{ active: index === 0 }\" :aria-current=\"index === 0 ? 'true' : 'false'\"\n                      :aria-label=\"'Slide ' + (index + 1)\">\n              </button>\n            </div>\n          \n            <div class=\"carousel-inner\">\n              <div v-if=\"notifications.length === 0\" class=\"carousel-item active\">\n                <div class=\"d-block w-100 text-center p-4\">\n                  <h2>Nessuna Notifica</h2>\n                  <p>{{ noNotificationsMessage }}</p>\n                </div>\n              </div>\n          \n              <div v-else v-for=\"(notification, index) in notifications\" :key=\"index\" \n                   :class=\"['carousel-item', { active: index === 0 }]\">\n                <div class=\"d-block w-100 text-center p-4\">\n                  <h2>Notifica {{ index + 1 }}</h2>\n                  <p>\n                    <strong>Messaggio:</strong> {{ notification.message }}<br>\n                    <strong>Data:</strong> {{ new Date(notification.createdAt).toLocaleDateString() }}\n                  </p>\n                  <button @click=\"deleteNotification(notification._id)\" class=\"btn btn-danger\">Elimina</button>\n                </div>\n              </div>\n            </div>\n          \n            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselNotifications\"\n              data-bs-slide=\"prev\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n          \n            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselNotifications\"\n              data-bs-slide=\"next\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n          </div>\n        </div>\n         \n      </div>\n   \n    </div>\n  </div>\n\n\n</template> -->\n\n<script>\n\n\nimport axios from 'axios';\nimport { marked } from 'marked';\nimport homePageImage from '@/assets/images/home page design with calendar, activities, study management, and notes preview.jpeg';\nimport gestisciImmagine from '@/assets/images/img1.jpeg'; \nexport default {\n  name: 'HomePrincipale',\n\n  data() {\n    return {\n      imagePath: homePageImage,\n     gestisciImagePath: gestisciImmagine,\n     img2Path: require('@/assets/images/img2.jpeg'), \n      username: localStorage.getItem('username'),\n      lastEventTitle: '',\n      lastEventDescription: '',\n      lastEventDate: '',\n      lastActivityTitle: '',\n      lastActivityDescription: '',\n      lastActivityDeadline: '',\n      noActivitiesMessage: '',\n      currentDayActivities: [],\n      allActivities: [],\n\n      notifications: [],\n      noNotificationsMessage: '',\n\n      users: [], \n      selectedUsers: [], \n      notificationMessage: '',\n      lastNoteHeading: '',\n      lastNoteAuthor: '',\n      noEventsMessage: '',\n      allEvents: [],\n      allEventCurrent: [],\n      noNotesMessage: '',\n      noPomodorosMessage: '',\n      lastPomodoroTempoStudio: '',\n      lastPomodoroTempoPausa: '',\n      lastPomodoroRipetizioni: '',\n      currentEventTitle: '',\n      currentEventDescription: '',\n      currentEventDate: '',\n      currentActivityTitle: '',\n      currentActivityDescription: '',\n      currentActivityDeadline: '',\n      isCurrentDay: false,\n      lastGroupActivity: '' ,\n      lastNoteText: '',\n      showNoteText: false,\n      isCurrentDayActivity: false,\n      notificationEnabled: false,\n    };\n  },\n  mounted() {\n    this.getLastEvent();\n    this.getLastActivity();\n    this.getNotifies();\n    this.getUsers();\n    this.getLastNote();\n    this.getLastPomodoro();\n  },\n  methods: {\n\n    async getCurrentDayActivities() {\n      console.log(\"Chiamata a getCurrentDayActivities\");\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        this.lastActivityTitle = '';\n        this.lastActivityDescription = '';\n        this.lastActivityDeadline = '';\n        this.noActivitiesMessage = '';\n        this.isCurrentDayActivity = false;\n\n        const response = await axios.get('/api/activities/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        this.isCurrentDayActivity = true;\n\n        if (response.data && response.data.length > 0) {\n          this.currentDayActivities = response.data;\n          this.noActivitiesMessage = '';\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n          this.isCurrentDayActivity = false;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n          this.currentDayActivities = [];\n        } else {\n          console.error('Errore nel recupero delle attività del giorno corrente:', error);\n          this.noActivitiesMessage = 'Errore nel caricamento delle attività del giorno corrente.';\n          this.currentDayActivities = [];\n        }\n      }\n    },\n\n    async getLastActivity() {\n      console.log(\"Chiamata a getLastActivity\");\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        this.lastActivityTitle = '';\n        this.lastActivityDescription = '';\n        this.lastActivityDeadline = '';\n        this.noActivitiesMessage = '';\n\n        const response = await axios.get('/api/activities/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        this.isCurrentDayActivity = false;\n\n\n        if (response.data) {\n          this.lastActivityTitle = response.data.title;\n          this.lastActivityDescription = response.data.description;\n          this.lastActivityDeadline = new Date(response.data.deadline).toLocaleDateString();\n          this.lastGroupActivity = response.data.type;\n          console.log(this.lastGroupActivity) ;\n          this.noActivitiesMessage = '';\n          this.isCurrentDayActivity = false;\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle attività:', error);\n      }\n    },\n\n\n    async getAllActivity() {\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n\n      try {\n\n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.allActivities = response.data;\n          this.noActivitiesMessage = '';\n        } else {\n          this.allActivities = [];\n          this.noActivitiesMessage = '';\n        }\n      } catch (error) {\n        console.error(\"error\", error);\n        this.noActivitiesMessage = 'errore nel recupero delle attivita';\n\n      }\n\n\n    },\n\n\n\n    formatDate(date) {\n      if (!date) return 'N/A';\n      const d = new Date(date);\n      return isNaN(d.getTime()) ? 'Data non valida' : d.toLocaleDateString();\n    },\n\n\n\n    toggleEvent() {\n      if (this.isCurrentDay === null) {\n        this.getAllEvents();\n      } else if (this.isCurrentDay) {\n        this.getCurrentDayEvents();\n      } else {\n        this.getLastEvent();\n      }\n    },\n\n\n    toogleActivity() {\n\n      if (this.isCurrentDayActivity === null) {\n        this.getAllActivity();\n      }\n\n      else if (this.isCurrentDayActivity) {\n        this.getCurrentDayActivities();\n      }\n      else {\n        this.getLastActivity();\n      }\n    },\n\n\n    async getAllEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        const response = await axios.get('/api/eventsGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data && response.data.length > 0) {\n          this.allEvents = response.data;\n          this.noEventsMessage = '';\n          console.log(\"tutti gli eventi:\", response.data);\n        } else {\n          this.noEventsMessage = 'Non ci sono eventi disponibili';\n          this.allEvents = [];\n        }\n      } catch (error) {\n        console.error('Errore nel recupero di tutti gli eventi:', error);\n        this.noEventsMessage = 'Errore nel caricamento di tutti gli eventi.';\n        this.allEvents = [];\n      }\n    },\n\n\n    async getCurrentDayEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        this.lastEventTitle = '';\n        this.lastEventDescription = '';\n        this.lastEventDate = '';\n\n\n        const response = await axios.get('/api/events/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n\n        this.isCurrentDay = true;\n\n        if (response.data && response.data.length > 0) {\n          this.allEventCurrent = response.data;\n          this.noEventsMessage = '';\n        } else {\n          this.noEventsMessage = 'Non ci sono eventi imminenti';\n          this.allEventCurrent = [];\n        }\n        console.log(\"eventi del giorno corrente\", response.data);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi del giorno corrente:', error);\n        this.noEventsMessage = 'Errore nel caricamento degli eventi del giorno corrente.';\n\n        this.allEventCurrent = [];\n\n      }\n\n    },\n\n\n    async getLastEvent() {\n      try {\n        const token = sessionStorage.getItem('token');\n        console.log(\"token home \", token);\n        const response = await axios.get('/api/events/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n\n        this.isCurrentDay = false;\n\n        if (response.data) {\n          this.lastEventTitle = response.data.title || 'Nessun evento';\n          this.lastEventDescription = response.data.description || 'Nessuna descrizione';\n          this.lastEventDate = response.data.date || 'Nessuna data';\n          this.noEventsMessage = '';\n        } else {\n          this.noEventsMessage = 'Nessun evento trovato.';\n          this.lastEventTitle = '';\n          this.lastEventDescription = '';\n          this.lastEventDate = '';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo evento:', error);\n        this.noEventsMessage = 'Errore nel caricamento dell\\'ultimo evento.';\n        this.lastEventTitle = '';\n        this.lastEventDescription = '';\n        this.lastEventDate = '';\n      }\n    },\n\n\n    async getLastNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data) {\n          this.lastNoteHeading = response.data.heading;\n          this.lastNoteAuthor = response.data.author;\n          this.noNotesMessage = '';\n        } else {\n          this.noNotesMessage = 'Non ci sono note trovate';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultima nota:', error);\n        this.noNotesMessage = 'Errore nel caricamento dell\\'ultima nota.';\n      }\n    },\n\n    async getNoteText() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data && response.data.content) {\n          this.lastNoteText = response.data.content;\n          this.showNoteText = true;\n        } else {\n          this.lastNoteText = 'Testo non disponibile';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero del testo della nota:', error);\n        this.lastNoteText = 'Errore nel caricamento del testo della nota.';\n      }\n    },\n\n    convertMarkdown(content) {\n      return marked(content);\n    },\n\n    etNoteText() {\n      this.showNoteText = true;\n    },\n\n\n    async getLastPomodoro() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastPomodoroTempoStudio = response.data.tempoStudio;\n          this.lastPomodoroTempoPausa = response.data.tempoPausa;\n          this.lastPomodoroRipetizioni = response.data.ripetizioni;\n          this.noPomodorosMessage = '';\n        } else {\n          this.noPomodorosMessage = 'Nessun pomodoro trovato';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo pomodoro:', error);\n        this.noPomodorosMessage = 'Errore nel caricamento dell\\'ultimo pomodoro.';\n      }\n    },\n\n\n\n    async getNotifies() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/notifications/getNotif', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n        //console.log(response.data);\n        if (response.data) {\n          this.notifications = response.data;\n        } else {\n          this.noNotificationsMessage = 'Nessuna notifica trovata.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche :', error);\n        this.noNotificationsMessage = 'Errore caricamento delle notifiche.';\n      }\n    },\n\n    async getUsers() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n        this.users = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    },\n\n    async sendNotifications() {\n      if (this.selectedUsers.length === 0) {\n        alert('Seleziona almeno un utente per inviare una notifica.');\n        return;\n      }\n\n      if (this.notificationMessage.trim() === '') {\n        alert('Scrivi un messaggio per inviare una notifica.');\n        return;\n      }\n\n      try {\n        const token = sessionStorage.getItem('token');\n\n        await axios.post('/api/notifications/send', {\n          recipients: this.selectedUsers,\n          message: this.notificationMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        alert('notifiche inviate!');\n      } catch (error) {\n        console.error('errore durante invio notifiche:', error);\n        alert('Errore durante invio notifiche.');\n      }\n    },\n\n    async deleteNotification(notificationId) {\n      try {\n        const token = sessionStorage.getItem('token');\n\n        await axios.delete(`/api/notifications/${notificationId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        this.notifications = this.notifications.filter(notification => notification._id !== notificationId);\n        alert('Notifica eliminata, aggiorna pagina per vedere effetto');\n      } catch (error) {\n        console.error('errore durante eliminazione notifica:', error);\n        alert('errore durante leliminazione della notifica.');\n      }\n    },\n\n  }\n\n};\n</script>\n\n<style scoped>\n.home-principale {\n  height: 100vh; /* Imposta l'altezza della pagina */\n  background-color: white; /* Sfondo bianco */\n  display: flex;\n  flex-direction: column; /* Aggiunto per allineare il contenuto in verticale */\n  justify-content: flex-start; /* Allinea il contenuto in alto */\n}\n\n.title {\n  font-size: 2.5rem; /* Dimensione del titolo */\n  margin-bottom: 20px; /* Spazio sotto il titolo */\n  position: relative; /* Mantiene il titolo nella stessa posizione */\n  z-index: 1; /* Assicura che il titolo sia sopra le immagini */\n}\n\n.img-left {\n  max-width: 150%; /* Imposta una larghezza massima per l'immagine a sinistra e a destra */\n  height: auto; /* Mantiene il rapporto di aspetto dell'immagine */\n  max-height: 60%; /* Imposta un'altezza massima per renderla più grande */\n  margin-top: 0px; /* Sposta l'immagine più in basso */\n  margin-left: -250px;\n}\n\n.img-right {\n  max-width: 150%;\n  height: auto;\n  max-height: 60%;\n  margin-right: -250px;\n  margin-top: 235px;\n\n}\n\n\n.img-fluid {\n  max-width: 100%; /* Imposta una larghezza massima dell'immagine centrale */\n  height: auto; /* Mantiene il rapporto di aspetto dell'immagine */\n  max-height: 90%; /* Imposta un'altezza massima per renderla più grande */\n  margin-top: 10px; /* Spazio sopra l'immagine centrale */\n  margin-right: 50px; /* Sposta l'immagine centrale più a sinistra */\n}\n\n.img-description-container {\n  display: flex; /* Utilizza flexbox */\n  justify-content: center; /* Centra il contenuto orizzontalmente */\n  align-items: center; /* Centra il contenuto verticalmente */\n  text-align: center; /* Centra il testo */\n  padding: 0 20px; /* Aggiungi padding per un po' di spazio ai lati */\n  width: 700px;\n}\n\n.img-description-container-2 {\n  display: flex; /* Utilizza flexbox */\n  justify-content: center; /* Centra il contenuto orizzontalmente */\n  align-items: center; /* Centra il contenuto verticalmente */\n  text-align: center; /* Centra il testo */\n  padding: 0 20px; /* Aggiungi padding per un po' di spazio ai lati */\n  width: 500px;\n  margin-left: 2%;\n}\n\n.img-description-2 {\n  font-family: 'Lora', serif; /* Usa il font scelto */\n  font-size: 1.2rem; /* Dimensione del font */\n  color: #333; /* Colore del testo */\n  text-align: center; /* Allinea il testo al centro */\n  padding: 10px; /* Padding per migliorare l'aspetto */\n  line-height: 1.5; /* Aumenta l'interlinea per una lettura migliore */\n  margin-right: 0px;\n  margin-top: 30px; \n}\n\n.img-description {\n  font-family: 'Lora', serif; /* Usa il font scelto */\n  font-size: 1.2rem; /* Dimensione del font */\n  color: #333; /* Colore del testo */\n  text-align: center; /* Allinea il testo al centro */\n  padding: 10px; /* Padding per migliorare l'aspetto */\n  line-height: 1.5; /* Aumenta l'interlinea per una lettura migliore */\n  margin-right: 300px;\n  margin-top: 30px; \n}\n\n\n\n\n\n\n\n\n\n\n\n\n/*body {\n /* background: linear-gradient(to bottom, #0000ff, #ffffff);\n  margin: 0;\n}\n\n.home-principale {\n  text-align: center;\n /* background-image: url('https://images.hdqwalls.com/wallpapers/abstract-shapes-4k-q2.jpg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100vh;\n  /* Imposta l'altezza minima per riempire la viewport \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: rgb(0, 0, 0);\n  /* colore testo \n}\n\n.carousel-item {\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  background-color: #000;\n  border-radius: 50%;\n}\n\n.notification-form {\n  max-width: 300px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.form-group select,\n.form-group textarea {\n  width: 100%;\n  padding: 8px;\n  font-size: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\ntextarea {\n  height: 100px;\n  resize: vertical;\n}\n\nbutton.btn {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton.btn:hover {\n  background-color: #0056b3;\n}\n\nbutton.btn-danger {\n  background-color: rgb(194, 27, 27);\n}\n\n.note-text {\n  margin-top: 20px;\n  text-align: left;\n  font-size: 16px;\n  line-height: 1.5;\n}\n\n\n.custom-select {\n  width: 100%;\n  padding: 10px;\n  border-radius: 8px;\n  border: 2px solid #ced4da;\n  background-color: #f8f9fa;\n  color: #495057;\n  font-size: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.custom-select:focus {\n  border-color: #80bdff;\n  outline: none;\n  box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);\n}\n\n.custom-select:hover {\n  border-color: #5a6268;\n}\n\n.form-group label {\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n*/\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAA4B;;EAMhCA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAgD;mBATnE;;EAeaA,KAAK,EAAC;AAAwC;mBAf3D;;EAkBaA,KAAK,EAAC;AAAuE;mBAlB1F;;uBACEC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJD,mBAAA,CAIM;IAJDH,KAAK,EAAC,KAAK;IAACK,KAAiC,EAAjC;MAAA;MAAA;IAAA;MACfF,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAQ,IACjBG,mBAAA,CAA0C;IAAtCH,KAAK,EAAC;EAAO,GAAC,qBAAmB,E,wBAGzCG,mBAAA,CAgBM,OAhBNG,UAgBM,GAfJH,mBAAA,CAKM,OALNI,UAKM,GAJJJ,mBAAA,CAAkF;IAA5EK,GAAG,EAAEC,KAAA,CAAAC,iBAAiB;IAAEC,GAAG,EAAC,4BAA4B;IAACX,KAAK,EAAC;0BAV/EY,UAAA,G,0BAWUT,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAA2B,IACpCG,mBAAA,CAAuJ;IAApJH,KAAK,EAAC;EAAiB,GAAC,0HAAwH,E,wBAGvJG,mBAAA,CAEM,OAFNU,UAEM,GADJV,mBAAA,CAAgE;IAA1DK,GAAG,EAAEC,KAAA,CAAAK,SAAS;IAAEH,GAAG,EAAC,iBAAiB;IAACX,KAAK,EAAC;0BAhB5De,UAAA,E,GAkBQZ,mBAAA,CAKM,OALNa,UAKM,G,0BAJJb,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAA6B,IACtCG,mBAAA,CAAuO;IAApOH,KAAK,EAAC;EAAmB,GAAC,wMAAsM,E,sBAErOG,mBAAA,CAAiE;IAA3DK,GAAG,EAAEC,KAAA,CAAAQ,QAAQ;IAAEN,GAAG,EAAC,mBAAmB;IAACX,KAAK,EAAC;0BAtB7DkB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}