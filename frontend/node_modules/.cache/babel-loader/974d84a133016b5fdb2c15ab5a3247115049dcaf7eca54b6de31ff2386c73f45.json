{"ast":null,"code":"import axios from 'axios';\nimport { marked } from 'marked';\nimport homePageImage from '@/assets/images/home page design with calendar, activities, study management, and notes preview.jpeg';\nimport gestisciImmagine from '@/assets/images/img1.jpeg';\nexport default {\n  name: 'HomePrincipale',\n  data() {\n    return {\n      imagePath: homePageImage,\n      gestisciImagePath: gestisciImmagine,\n      isModalOpen: false,\n      img2Path: require('@/assets/images/img2.jpeg'),\n      username: localStorage.getItem('username'),\n      lastEventTitle: '',\n      lastEventDescription: '',\n      lastEventDate: '',\n      lastActivityTitle: '',\n      lastActivityDescription: '',\n      lastActivityDeadline: '',\n      noActivitiesMessage: '',\n      currentDayActivities: [],\n      allActivities: [],\n      notifications: [],\n      noNotificationsMessage: '',\n      users: [],\n      selectedUsers: [],\n      notificationMessage: '',\n      lastNoteHeading: '',\n      lastNoteAuthor: '',\n      noEventsMessage: '',\n      allEvents: [],\n      allEventCurrent: [],\n      noNotesMessage: '',\n      noPomodorosMessage: '',\n      lastPomodoroTempoStudio: '',\n      lastPomodoroTempoPausa: '',\n      lastPomodoroRipetizioni: '',\n      currentEventTitle: '',\n      currentEventDescription: '',\n      currentEventDate: '',\n      currentActivityTitle: '',\n      currentActivityDescription: '',\n      currentActivityDeadline: '',\n      isCurrentDay: false,\n      lastGroupActivity: '',\n      lastNoteText: '',\n      showNoteText: false,\n      isCurrentDayActivity: false,\n      notificationEnabled: false\n    };\n  },\n  mounted() {\n    this.getLastEvent();\n    this.getLastActivity();\n    this.getNotifies();\n    this.getUsers();\n    this.getLastNote();\n    this.getLastPomodoro();\n  },\n  methods: {\n    openModal() {\n      this.isModalOpen = true;\n    },\n    closeModal() {\n      this.isModalOpen = false;\n    },\n    async getCurrentDayActivities() {\n      console.log(\"Chiamata a getCurrentDayActivities\");\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        this.lastActivityTitle = '';\n        this.lastActivityDescription = '';\n        this.lastActivityDeadline = '';\n        this.noActivitiesMessage = '';\n        this.isCurrentDayActivity = false;\n        const response = await axios.get('/api/activities/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        this.isCurrentDayActivity = true;\n        if (response.data && response.data.length > 0) {\n          this.currentDayActivities = response.data;\n          this.noActivitiesMessage = '';\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n          this.isCurrentDayActivity = false;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n          this.currentDayActivities = [];\n        } else {\n          console.error('Errore nel recupero delle attività del giorno corrente:', error);\n          this.noActivitiesMessage = 'Errore nel caricamento delle attività del giorno corrente.';\n          this.currentDayActivities = [];\n        }\n      }\n    },\n    async getLastActivity() {\n      console.log(\"Chiamata a getLastActivity\");\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        this.lastActivityTitle = '';\n        this.lastActivityDescription = '';\n        this.lastActivityDeadline = '';\n        this.noActivitiesMessage = '';\n        const response = await axios.get('/api/activities/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        this.isCurrentDayActivity = false;\n        if (response.data) {\n          this.lastActivityTitle = response.data.title;\n          this.lastActivityDescription = response.data.description;\n          this.lastActivityDeadline = new Date(response.data.deadline).toLocaleDateString();\n          this.lastGroupActivity = response.data.type;\n          console.log(this.lastGroupActivity);\n          this.noActivitiesMessage = '';\n          this.isCurrentDayActivity = false;\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle attività:', error);\n      }\n    },\n    async getAllActivity() {\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n      try {\n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        if (response.data) {\n          this.allActivities = response.data;\n          this.noActivitiesMessage = '';\n        } else {\n          this.allActivities = [];\n          this.noActivitiesMessage = '';\n        }\n      } catch (error) {\n        console.error(\"error\", error);\n        this.noActivitiesMessage = 'errore nel recupero delle attivita';\n      }\n    },\n    formatDate(date) {\n      if (!date) return 'N/A';\n      const d = new Date(date);\n      return isNaN(d.getTime()) ? 'Data non valida' : d.toLocaleDateString();\n    },\n    toggleEvent() {\n      if (this.isCurrentDay === null) {\n        this.getAllEvents();\n      } else if (this.isCurrentDay) {\n        this.getCurrentDayEvents();\n      } else {\n        this.getLastEvent();\n      }\n    },\n    toogleActivity() {\n      if (this.isCurrentDayActivity === null) {\n        this.getAllActivity();\n      } else if (this.isCurrentDayActivity) {\n        this.getCurrentDayActivities();\n      } else {\n        this.getLastActivity();\n      }\n    },\n    async getAllEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/eventsGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: username\n          }\n        });\n        if (response.data && response.data.length > 0) {\n          this.allEvents = response.data;\n          this.noEventsMessage = '';\n          console.log(\"tutti gli eventi:\", response.data);\n        } else {\n          this.noEventsMessage = 'Non ci sono eventi disponibili';\n          this.allEvents = [];\n        }\n      } catch (error) {\n        console.error('Errore nel recupero di tutti gli eventi:', error);\n        this.noEventsMessage = 'Errore nel caricamento di tutti gli eventi.';\n        this.allEvents = [];\n      }\n    },\n    async getCurrentDayEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        this.lastEventTitle = '';\n        this.lastEventDescription = '';\n        this.lastEventDate = '';\n        const response = await axios.get('/api/events/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        this.isCurrentDay = true;\n        if (response.data && response.data.length > 0) {\n          this.allEventCurrent = response.data;\n          this.noEventsMessage = '';\n        } else {\n          this.noEventsMessage = 'Non ci sono eventi imminenti';\n          this.allEventCurrent = [];\n        }\n        console.log(\"eventi del giorno corrente\", response.data);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi del giorno corrente:', error);\n        this.noEventsMessage = 'Errore nel caricamento degli eventi del giorno corrente.';\n        this.allEventCurrent = [];\n      }\n    },\n    async getLastEvent() {\n      try {\n        const token = sessionStorage.getItem('token');\n        console.log(\"token home \", token);\n        const response = await axios.get('/api/events/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: this.username\n          }\n        });\n        this.isCurrentDay = false;\n        if (response.data) {\n          this.lastEventTitle = response.data.title || 'Nessun evento';\n          this.lastEventDescription = response.data.description || 'Nessuna descrizione';\n          this.lastEventDate = response.data.date || 'Nessuna data';\n          this.noEventsMessage = '';\n        } else {\n          this.noEventsMessage = 'Nessun evento trovato.';\n          this.lastEventTitle = '';\n          this.lastEventDescription = '';\n          this.lastEventDate = '';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo evento:', error);\n        this.noEventsMessage = 'Errore nel caricamento dell\\'ultimo evento.';\n        this.lastEventTitle = '';\n        this.lastEventDescription = '';\n        this.lastEventDate = '';\n      }\n    },\n    async getLastNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: username\n          }\n        });\n        if (response.data) {\n          this.lastNoteHeading = response.data.heading;\n          this.lastNoteAuthor = response.data.author;\n          this.noNotesMessage = '';\n        } else {\n          this.noNotesMessage = 'Non ci sono note trovate';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultima nota:', error);\n        this.noNotesMessage = 'Errore nel caricamento dell\\'ultima nota.';\n      }\n    },\n    async getNoteText() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: username\n          }\n        });\n        if (response.data && response.data.content) {\n          this.lastNoteText = response.data.content;\n          this.showNoteText = true;\n        } else {\n          this.lastNoteText = 'Testo non disponibile';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero del testo della nota:', error);\n        this.lastNoteText = 'Errore nel caricamento del testo della nota.';\n      }\n    },\n    convertMarkdown(content) {\n      return marked(content);\n    },\n    etNoteText() {\n      this.showNoteText = true;\n    },\n    async getLastPomodoro() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        if (response.data) {\n          this.lastPomodoroTempoStudio = response.data.tempoStudio;\n          this.lastPomodoroTempoPausa = response.data.tempoPausa;\n          this.lastPomodoroRipetizioni = response.data.ripetizioni;\n          this.noPomodorosMessage = '';\n        } else {\n          this.noPomodorosMessage = 'Nessun pomodoro trovato';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo pomodoro:', error);\n        this.noPomodorosMessage = 'Errore nel caricamento dell\\'ultimo pomodoro.';\n      }\n    },\n    async getNotifies() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/notifications/getNotif', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: this.username\n          }\n        });\n        //console.log(response.data);\n        if (response.data) {\n          this.notifications = response.data;\n        } else {\n          this.noNotificationsMessage = 'Nessuna notifica trovata.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche :', error);\n        this.noNotificationsMessage = 'Errore caricamento delle notifiche.';\n      }\n    },\n    async getUsers() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: this.username\n          }\n        });\n        this.users = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    },\n    async sendNotifications() {\n      if (this.selectedUsers.length === 0) {\n        alert('Seleziona almeno un utente per inviare una notifica.');\n        return;\n      }\n      if (this.notificationMessage.trim() === '') {\n        alert('Scrivi un messaggio per inviare una notifica.');\n        return;\n      }\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.post('/api/notifications/send', {\n          recipients: this.selectedUsers,\n          message: this.notificationMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('notifiche inviate!');\n      } catch (error) {\n        console.error('errore durante invio notifiche:', error);\n        alert('Errore durante invio notifiche.');\n      }\n    },\n    async deleteNotification(notificationId) {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/notifications/${notificationId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.notifications = this.notifications.filter(notification => notification._id !== notificationId);\n        alert('Notifica eliminata, aggiorna pagina per vedere effetto');\n      } catch (error) {\n        console.error('errore durante eliminazione notifica:', error);\n        alert('errore durante leliminazione della notifica.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","marked","homePageImage","gestisciImmagine","name","data","imagePath","gestisciImagePath","isModalOpen","img2Path","require","username","localStorage","getItem","lastEventTitle","lastEventDescription","lastEventDate","lastActivityTitle","lastActivityDescription","lastActivityDeadline","noActivitiesMessage","currentDayActivities","allActivities","notifications","noNotificationsMessage","users","selectedUsers","notificationMessage","lastNoteHeading","lastNoteAuthor","noEventsMessage","allEvents","allEventCurrent","noNotesMessage","noPomodorosMessage","lastPomodoroTempoStudio","lastPomodoroTempoPausa","lastPomodoroRipetizioni","currentEventTitle","currentEventDescription","currentEventDate","currentActivityTitle","currentActivityDescription","currentActivityDeadline","isCurrentDay","lastGroupActivity","lastNoteText","showNoteText","isCurrentDayActivity","notificationEnabled","mounted","getLastEvent","getLastActivity","getNotifies","getUsers","getLastNote","getLastPomodoro","methods","openModal","closeModal","getCurrentDayActivities","console","log","token","sessionStorage","response","get","headers","Authorization","params","length","error","status","title","description","Date","deadline","toLocaleDateString","type","getAllActivity","formatDate","date","d","isNaN","getTime","toggleEvent","getAllEvents","getCurrentDayEvents","toogleActivity","author","heading","getNoteText","content","convertMarkdown","etNoteText","tempoStudio","tempoPausa","ripetizioni","sendNotifications","alert","trim","post","recipients","message","deleteNotification","notificationId","delete","filter","notification","_id"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/HomePrincipale.vue"],"sourcesContent":["<template>\n  <div class=\"home-principale\">\n    <div class=\"container mt-3 text-center\">\n      <div class=\"row\" style=\"height: 10%; width: 100%;\">\n        <div class=\"col-12\">\n          <h1 class=\"title\">Ciao {{ username }}, bentornato su SELFIE</h1>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-3 d-flex flex-column align-items-center\">\n          <img :src=\"gestisciImagePath\" alt=\"Gestisci eventi e attività\" class=\"img-left\" />\n          <div class=\"img-description-container\">\n            <p class=\"img-description\">Con SELFIE, puoi gestire i tuoi eventi e le tue attività quotidiane in modo semplice e visualizzarle nel tuo calendario!</p>\n          </div>\n        </div>\n        <div class=\"col-md-6 d-flex justify-content-center\">\n          <img :src=\"imagePath\" alt=\"Homepage Design\" class=\"img-fluid\" />\n        </div>\n        <div class=\"col-md-3 d-flex flex-column align-items-center justify-content-center\">\n          <div class=\"img-description-container-2\">\n            <p class=\"img-description-2\">SELFIE ti permette di creare delle note per gestire i tuoi appunti, condividendoli anche con altre persone, e ti permette di studiare comodamente con cicli di studio e pausa programmabili a piacere.</p>\n          </div>\n          <img :src=\"img2Path\" alt=\"Immagine a destra\" class=\"img-right\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <h2 class=\"reminder-title\">Non scordare i tuoi prossimi impegni!</h2>\n        </div>\n      </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      <div class=\"home-preview\" style=\"margin-top: 50px;\">\n\n\n   <div class=\"row\">\n  <div class=\"col-5 section-container\">\n    <div class=\"text-center p-4\">\n      <div class=\"form-group mt-3\">\n        <label for=\"eventSelect\">Scegli preview:</label>\n        <select id=\"eventSelect\" v-model=\"isCurrentDay\" @change=\"toggleEvent\" class=\"custom-select event-select\">\n          <option :value=\"false\">Ultimo Evento</option>\n          <option :value=\"true\">Evento del giorno corrente</option>\n          <option :value=\"null\">Tutti gli Eventi</option>\n        </select>\n      </div>\n\n      <h2 class=\"section-title\">\n        {{ isCurrentDay === null ? 'Tutti gli Eventi' : (isCurrentDay ? 'Evento di Oggi' : 'Ultimo Evento') }}\n      </h2>\n      <p v-if=\"noEventsMessage\">{{ noEventsMessage }}</p>\n\n      <div v-if=\"isCurrentDay === null && allEvents.length > 0\">\n        <h3>Eventi Trovati:</h3>\n        <ul>\n          <li v-for=\"event in allEvents\" :key=\"event.id\">\n            <strong>Titolo:</strong> {{ event.title || 'N/A' }}<br>\n            <strong>Descrizione:</strong> {{ event.description || 'N/A' }}<br>\n            <strong>Data:</strong> {{ formatDate(event.date) }}\n          </li>\n        </ul>\n      </div>\n\n      <div v-else-if=\"isCurrentDay\">\n        <ul>\n          <li v-for=\"event in allEventCurrent\" :key=\"event.id\">\n            <strong>Titolo:</strong> {{ event.title || 'N/A' }}<br>\n            <strong>Descrizione:</strong> {{ event.description || 'N/A' }}<br>\n            <strong>Data:</strong> {{ formatDate(event.date) }}\n          </li>\n        </ul>\n      </div>\n\n      <div v-else>\n        <p>\n          <strong>Titolo:</strong> {{ lastEventTitle }}<br>\n          <strong>Descrizione:</strong> {{ lastEventDescription }}<br>\n          <strong>Data:</strong> {{ formatDate(lastEventDate) }}\n        </p>\n      </div>\n    </div>\n  </div>\n\n\n   <div class=\"col-5 section-container\">\n    <div class=\"form-group mt-3\">\n      <label for=\"activitySelect\">Scegli preview:</label>\n      <select id=\"activitySelect\" v-model=\"isCurrentDayActivity\" @change=\"toogleActivity\" class=\"custom-select event-select\">\n        <option :value=\"false\">Ultima attività</option>\n        <option :value=\"true\">Attività del giorno corrente</option>\n        <option :value=\"null\">Tutte le attività</option>\n      </select>\n    </div>\n\n    <h2>\n      {{ isCurrentDayActivity === null ? 'Tutte le Attività' : (isCurrentDayActivity ? 'Attività di Oggi' : 'Ultima Attività') }}\n    </h2>\n    <p v-if=\"noActivitiesMessage\">{{ noActivitiesMessage }}</p>\n\n    <div v-if=\"isCurrentDayActivity === null && allActivities.length > 0\">\n      <h3>Attività Trovate:</h3>\n      <ul>\n        <li v-for=\"activity in allActivities\" :key=\"activity.id\">\n          <strong>Titolo:</strong> {{ activity.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ activity.description || 'N/A' }}<br>\n          <strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else-if=\"isCurrentDayActivity\">\n      <p v-if=\"currentDayActivities.length === 0\">Non ci sono attività per oggi.</p>\n      <ul>\n        <li v-for=\"activity in currentDayActivities\" :key=\"activity.id\">\n          <strong>Titolo:</strong> {{ activity.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ activity.description || 'N/A' }}<br>\n          <strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else>\n      <strong>Titolo:</strong> {{ lastActivityTitle }}<br>\n      <strong>Descrizione:</strong> {{ lastActivityDescription }}<br>\n      <strong>Scadenza:</strong> {{ lastActivityDeadline }}\n    </div>\n   </div>\n</div>\n\n\n<div class=\"row\" style=\"margin-top: 50px;\">\n  <div class=\"col-5 section-container\">\n\n<h2>Ultima Nota</h2>\n    <p><strong>Titolo:</strong> {{ lastNoteHeading }}</p>\n\n    <div v-if=\"!showNoteText\">\n      <p v-if=\"noNotesMessage\">{{ noNotesMessage }}</p>\n\n      <p v-else>\n        <strong>Autore:</strong> {{ lastNoteAuthor }}\n      </p>\n      <button v-if=\"lastNoteHeading\" class=\"btn btn-primary mt-3\" style=\"background: white; color: black; \" @click=\"getNoteText\">Vedi testo completo della nota</button>\n    </div>\n\n    <div v-if=\"showNoteText\" class=\"note-text\">\n      <p><strong>Testo completo:</strong></p>\n      <div v-html=\"convertMarkdown(lastNoteText)\"></div>\n      <button class=\"btn btn-secondary mt-3\" style=\"background: white; color: black; \" @click=\"showNoteText = false\">Torna indietro</button>\n    </div>\n  </div>\n   \n  <div class=\"col-5 section-container\">\n    <h2>Ultimo Pomodoro</h2>\n                <p v-if=\"noPomodorosMessage\">{{ noPomodorosMessage }}</p>\n                <p v-else>\n                   <strong>tempo studio prefissato:</strong> {{ lastPomodoroTempoStudio }}<br>\n                   <strong>tempo pausa prefissato:</strong> {{ lastPomodoroTempoPausa }}<br>\n                   <strong>ripetizioni prefissate:</strong> {{ lastPomodoroRipetizioni }}\n                </p>\n  </div>\n\n\n</div>\n\n\n\n  </div>\n\n\n  <button class=\"fixed-button\" @click=\"openModal\" style=\"background:#f4a460;\">\n    <i class=\"fas fa-comment-dots\"></i>\n  </button>\n\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Nuovo messaggio</h1>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form>\n              <div class=\"mb-3\">\n                <label for=\"recipient-name\" class=\"col-form-label\">Destinatario:</label>\n                <input type=\"text\" class=\"form-control\" id=\"recipient-name\">\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"message-text\" class=\"col-form-label\">Messaggio:</label>\n                <textarea class=\"form-control\" id=\"message-text\"></textarea>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Chiudi</button>\n            <button type=\"button\" class=\"btn btn-primary\">Invia messaggio</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    \n    </div>\n  </div>\n</template>\n\n\n<!--\n<template>\n\n        \n\n  <div class=\"home-principale\">\n    <div class=\"container mt-3\">\n      <div class=\"row\">\n\n\n     \n\n\n\n\n\n        \n\n        <div class=\"col-md-6\">\n       \n          <div class=\"notification-form mt-4\">\n            <div class=\"form-group\">\n              <label for=\"userSelect\">Seleziona utenti per notifica:</label>\n              <select id=\"userSelect\" v-model=\"selectedUsers\" multiple class=\"form-control\">\n                <option v-for=\"user in users\" :key=\"user._id\" :value=\"user._id\">\n                  {{ user.username }}\n                </option>\n              </select>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"message\">Scrivi il messaggio:</label>\n              <textarea id=\"message\" v-model=\"notificationMessage\" placeholder=\"Scrivi il tuo messaggio qui...\" class=\"form-control\"></textarea>\n            </div>\n          \n            <button @click=\"sendNotifications\" class=\"btn btn-primary\">Invia Notifica</button>\n          </div>\n        </div>\n\n        \n\n\n\n\n\n\n        <div class=\"col-md-6\">\n          <div id=\"carouselExampleIndicators\" class=\"carousel slide mt-4\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-indicators\">\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"3\" aria-label=\"Slide 4\"></button>\n            </div>\n\n\n\n            <div class=\"carousel-inner\">\n\n\n              <div class=\"carousel-item active\">\n  <div class=\"d-block w-100 text-center p-4\">\n    <div class=\"form-group mt-3\">\n      <label for=\"eventSelect\">Scegli preview:</label>\n      <select id=\"eventSelect\" v-model=\"isCurrentDay\" @change=\"toggleEvent\" class=\"custom-select\">\n        <option :value=\"false\">Ultimo Evento</option>\n        <option :value=\"true\">Evento del giorno corrente</option>\n        <option :value=\"null\">Tutti gli Eventi</option>\n      </select>\n    </div>\n\n    <h2>\n      {{ isCurrentDay === null ? 'Tutti gli Eventi' : (isCurrentDay ? 'Evento di Oggi' : 'Ultimo Evento') }}\n    </h2>\n    <p v-if=\"noEventsMessage\">{{ noEventsMessage }}</p>\n\n    <div v-if=\"isCurrentDay === null && allEvents.length > 0\">\n      <h3>Eventi Trovati:</h3>\n      <ul>\n        <li v-for=\"event in allEvents\" :key=\"event.id\">\n          <strong>Titolo:</strong> {{ event.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ event.description || 'N/A' }}<br>\n          <strong>Data:</strong> {{ formatDate(event.date) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else-if=\"isCurrentDay\">\n      <ul>\n        <li v-for=\"event in allEventCurrent\" :key=\"event.id\">\n          <strong>Titolo:</strong> {{ event.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ event.description || 'N/A' }}<br>\n          <strong>Data:</strong> {{ formatDate(event.date) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else>\n      <p>\n        <strong>Titolo:</strong> {{ lastEventTitle }}<br>\n        <strong>Descrizione:</strong> {{ lastEventDescription }}<br>\n        <strong>Data:</strong> {{ lastEventDate }}\n      </p>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n<div class=\"carousel-item\">\n  <div class=\"d-block w-100 text-center p-4\">\n\n    <div class=\"form-group mt-3\">\n      <label for=\"activitySelect\">Scegli preview:</label>\n      <select id=\"activitySelect\" v-model=\"isCurrentDayActivity\" @change=\"toogleActivity\" class=\"custom-select\">\n        <option :value=\"false\">Ultima attività</option>\n        <option :value=\"true\">Attività del giorno corrente</option>\n        <option :value=\"null\">Tutte le attività</option>\n      </select>\n    </div>\n\n    <h2>\n      {{ isCurrentDayActivity === null ? 'Tutte le Attività' : (isCurrentDayActivity ? 'Attività di Oggi' : 'Ultima Attività') }}\n    </h2>\n    <p v-if=\"noActivitiesMessage\">{{ noActivitiesMessage }}</p>\n\n    <div v-if=\"isCurrentDayActivity === null && allActivities.length > 0\">\n      <h3>Attività Trovate:</h3>\n      <ul>\n        <li v-for=\"activity in allActivities\" :key=\"activity.id\">\n          <strong>Titolo:</strong> {{ activity.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ activity.description || 'N/A' }}<br>\n          <strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else-if=\"isCurrentDayActivity\">\n      <p v-if=\"currentDayActivities.length === 0\">Non ci sono attività per oggi.</p>\n      <ul>\n        <li v-for=\"activity in currentDayActivities\" :key=\"activity.id\">\n          <strong>Titolo:</strong> {{ activity.title || 'N/A' }}<br>\n          <strong>Descrizione:</strong> {{ activity.description || 'N/A' }}<br>\n          <strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}\n        </li>\n      </ul>\n    </div>\n\n    <div v-else>\n      <strong>Titolo:</strong> {{ lastActivityTitle }}<br>\n      <strong>Descrizione:</strong> {{ lastActivityDescription }}<br>\n      <strong>Scadenza:</strong> {{ lastActivityDeadline }}\n    </div>\n  </div>\n</div>\n\n\n\n\n\n  \n  <div class=\"carousel-item\">\n  <div class=\"d-block w-100 text-center p-4\">\n    <h2>Ultima Nota</h2>\n    <p><strong>Titolo:</strong> {{ lastNoteHeading }}</p>\n\n    <div v-if=\"!showNoteText\">\n      <p v-if=\"noNotesMessage\">{{ noNotesMessage }}</p>\n\n      <p v-else>\n        <strong>Autore:</strong> {{ lastNoteAuthor }}\n      </p>\n      <button v-if=\"lastNoteHeading\" class=\"btn btn-primary mt-3\" @click=\"getNoteText\">Vedi testo completo della nota</button>\n    </div>\n\n    <div v-if=\"showNoteText\" class=\"note-text\">\n      <p><strong>Testo completo:</strong></p>\n      <div v-html=\"convertMarkdown(lastNoteText)\"></div>\n      <button class=\"btn btn-secondary mt-3\" @click=\"showNoteText = false\">Torna indietro</button>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n\n\n\n            <div class=\"carousel-item\">\n              <div class=\"d-block w-100 text-center p-4\">\n                <h2>Ultimo Pomodoro</h2>\n                <p v-if=\"noPomodorosMessage\">{{ noPomodorosMessage }}</p>\n                <p v-else>\n                   <strong>tempo studio prefissato:</strong> {{ lastPomodoroTempoStudio }}<br>\n                   <strong>tempo pausa prefissato:</strong> {{ lastPomodoroTempoPausa }}<br>\n                   <strong>ripetizioni prefissate:</strong> {{ lastPomodoroRipetizioni }}\n                </p>\n              </div>\n            </div>\n\n\n\n\n\n            </div>\n            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n\n\n\n          </div>\n\n\n          <div id=\"carouselNotifications\" class=\"carousel slide mt-4\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-indicators\">\n              <button v-for=\"(notification, index) in notifications\" :key=\"index\" type=\"button\" \n                      :data-bs-target=\"'#carouselNotifications'\" :data-bs-slide-to=\"index\" \n                      :class=\"{ active: index === 0 }\" :aria-current=\"index === 0 ? 'true' : 'false'\"\n                      :aria-label=\"'Slide ' + (index + 1)\">\n              </button>\n            </div>\n          \n            <div class=\"carousel-inner\">\n              <div v-if=\"notifications.length === 0\" class=\"carousel-item active\">\n                <div class=\"d-block w-100 text-center p-4\">\n                  <h2>Nessuna Notifica</h2>\n                  <p>{{ noNotificationsMessage }}</p>\n                </div>\n              </div>\n          \n              <div v-else v-for=\"(notification, index) in notifications\" :key=\"index\" \n                   :class=\"['carousel-item', { active: index === 0 }]\">\n                <div class=\"d-block w-100 text-center p-4\">\n                  <h2>Notifica {{ index + 1 }}</h2>\n                  <p>\n                    <strong>Messaggio:</strong> {{ notification.message }}<br>\n                    <strong>Data:</strong> {{ new Date(notification.createdAt).toLocaleDateString() }}\n                  </p>\n                  <button @click=\"deleteNotification(notification._id)\" class=\"btn btn-danger\">Elimina</button>\n                </div>\n              </div>\n            </div>\n          \n            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselNotifications\"\n              data-bs-slide=\"prev\">\n              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Previous</span>\n            </button>\n          \n            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselNotifications\"\n              data-bs-slide=\"next\">\n              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span class=\"visually-hidden\">Next</span>\n            </button>\n          </div>\n        </div>\n         \n      </div>\n   \n    </div>\n  </div>\n\n\n</template> -->\n\n<script>\n\n\nimport axios from 'axios';\nimport { marked } from 'marked';\nimport homePageImage from '@/assets/images/home page design with calendar, activities, study management, and notes preview.jpeg';\nimport gestisciImmagine from '@/assets/images/img1.jpeg'; \nexport default {\n  name: 'HomePrincipale',\n\n  data() {\n    return {\n      imagePath: homePageImage,\n     gestisciImagePath: gestisciImmagine,\n     isModalOpen: false,\n     img2Path: require('@/assets/images/img2.jpeg'), \n      username: localStorage.getItem('username'),\n      lastEventTitle: '',\n      lastEventDescription: '',\n      lastEventDate: '',\n      lastActivityTitle: '',\n      lastActivityDescription: '',\n      lastActivityDeadline: '',\n      noActivitiesMessage: '',\n      currentDayActivities: [],\n      allActivities: [],\n\n      notifications: [],\n      noNotificationsMessage: '',\n\n      users: [], \n      selectedUsers: [], \n      notificationMessage: '',\n      lastNoteHeading: '',\n      lastNoteAuthor: '',\n      noEventsMessage: '',\n      allEvents: [],\n      allEventCurrent: [],\n      noNotesMessage: '',\n      noPomodorosMessage: '',\n      lastPomodoroTempoStudio: '',\n      lastPomodoroTempoPausa: '',\n      lastPomodoroRipetizioni: '',\n      currentEventTitle: '',\n      currentEventDescription: '',\n      currentEventDate: '',\n      currentActivityTitle: '',\n      currentActivityDescription: '',\n      currentActivityDeadline: '',\n      isCurrentDay: false,\n      lastGroupActivity: '' ,\n      lastNoteText: '',\n      showNoteText: false,\n      isCurrentDayActivity: false,\n      notificationEnabled: false,\n    };\n  },\n  mounted() {\n    this.getLastEvent();\n    this.getLastActivity();\n    this.getNotifies();\n    this.getUsers();\n    this.getLastNote();\n    this.getLastPomodoro();\n  },\n  methods: {\n\n    openModal() {\n      this.isModalOpen = true;\n    },\n    closeModal() {\n      this.isModalOpen = false;\n    },\n\n\n\n    async getCurrentDayActivities() {\n      console.log(\"Chiamata a getCurrentDayActivities\");\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        this.lastActivityTitle = '';\n        this.lastActivityDescription = '';\n        this.lastActivityDeadline = '';\n        this.noActivitiesMessage = '';\n        this.isCurrentDayActivity = false;\n\n        const response = await axios.get('/api/activities/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        this.isCurrentDayActivity = true;\n\n        if (response.data && response.data.length > 0) {\n          this.currentDayActivities = response.data;\n          this.noActivitiesMessage = '';\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n          this.isCurrentDayActivity = false;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n          this.currentDayActivities = [];\n        } else {\n          console.error('Errore nel recupero delle attività del giorno corrente:', error);\n          this.noActivitiesMessage = 'Errore nel caricamento delle attività del giorno corrente.';\n          this.currentDayActivities = [];\n        }\n      }\n    },\n\n    async getLastActivity() {\n      console.log(\"Chiamata a getLastActivity\");\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        this.lastActivityTitle = '';\n        this.lastActivityDescription = '';\n        this.lastActivityDeadline = '';\n        this.noActivitiesMessage = '';\n\n        const response = await axios.get('/api/activities/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        this.isCurrentDayActivity = false;\n\n\n        if (response.data) {\n          this.lastActivityTitle = response.data.title;\n          this.lastActivityDescription = response.data.description;\n          this.lastActivityDeadline = new Date(response.data.deadline).toLocaleDateString();\n          this.lastGroupActivity = response.data.type;\n          console.log(this.lastGroupActivity) ;\n          this.noActivitiesMessage = '';\n          this.isCurrentDayActivity = false;\n        } else {\n          this.noActivitiesMessage = 'Non ci sono attività imminenti';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle attività:', error);\n      }\n    },\n\n\n    async getAllActivity() {\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n\n      try {\n\n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.allActivities = response.data;\n          this.noActivitiesMessage = '';\n        } else {\n          this.allActivities = [];\n          this.noActivitiesMessage = '';\n        }\n      } catch (error) {\n        console.error(\"error\", error);\n        this.noActivitiesMessage = 'errore nel recupero delle attivita';\n\n      }\n\n\n    },\n\n\n\n    formatDate(date) {\n      if (!date) return 'N/A';\n      const d = new Date(date);\n      return isNaN(d.getTime()) ? 'Data non valida' : d.toLocaleDateString();\n    },\n\n\n\n    toggleEvent() {\n      if (this.isCurrentDay === null) {\n        this.getAllEvents();\n      } else if (this.isCurrentDay) {\n        this.getCurrentDayEvents();\n      } else {\n        this.getLastEvent();\n      }\n    },\n\n\n    toogleActivity() {\n\n      if (this.isCurrentDayActivity === null) {\n        this.getAllActivity();\n      }\n\n      else if (this.isCurrentDayActivity) {\n        this.getCurrentDayActivities();\n      }\n      else {\n        this.getLastActivity();\n      }\n    },\n\n\n    async getAllEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        const response = await axios.get('/api/eventsGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data && response.data.length > 0) {\n          this.allEvents = response.data;\n          this.noEventsMessage = '';\n          console.log(\"tutti gli eventi:\", response.data);\n        } else {\n          this.noEventsMessage = 'Non ci sono eventi disponibili';\n          this.allEvents = [];\n        }\n      } catch (error) {\n        console.error('Errore nel recupero di tutti gli eventi:', error);\n        this.noEventsMessage = 'Errore nel caricamento di tutti gli eventi.';\n        this.allEvents = [];\n      }\n    },\n\n\n    async getCurrentDayEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n\n        this.lastEventTitle = '';\n        this.lastEventDescription = '';\n        this.lastEventDate = '';\n\n\n        const response = await axios.get('/api/events/current-day', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n\n        this.isCurrentDay = true;\n\n        if (response.data && response.data.length > 0) {\n          this.allEventCurrent = response.data;\n          this.noEventsMessage = '';\n        } else {\n          this.noEventsMessage = 'Non ci sono eventi imminenti';\n          this.allEventCurrent = [];\n        }\n        console.log(\"eventi del giorno corrente\", response.data);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi del giorno corrente:', error);\n        this.noEventsMessage = 'Errore nel caricamento degli eventi del giorno corrente.';\n\n        this.allEventCurrent = [];\n\n      }\n\n    },\n\n\n    async getLastEvent() {\n      try {\n        const token = sessionStorage.getItem('token');\n        console.log(\"token home \", token);\n        const response = await axios.get('/api/events/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n\n        this.isCurrentDay = false;\n\n        if (response.data) {\n          this.lastEventTitle = response.data.title || 'Nessun evento';\n          this.lastEventDescription = response.data.description || 'Nessuna descrizione';\n          this.lastEventDate = response.data.date || 'Nessuna data';\n          this.noEventsMessage = '';\n        } else {\n          this.noEventsMessage = 'Nessun evento trovato.';\n          this.lastEventTitle = '';\n          this.lastEventDescription = '';\n          this.lastEventDate = '';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo evento:', error);\n        this.noEventsMessage = 'Errore nel caricamento dell\\'ultimo evento.';\n        this.lastEventTitle = '';\n        this.lastEventDescription = '';\n        this.lastEventDate = '';\n      }\n    },\n\n\n    async getLastNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data) {\n          this.lastNoteHeading = response.data.heading;\n          this.lastNoteAuthor = response.data.author;\n          this.noNotesMessage = '';\n        } else {\n          this.noNotesMessage = 'Non ci sono note trovate';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultima nota:', error);\n        this.noNotesMessage = 'Errore nel caricamento dell\\'ultima nota.';\n      }\n    },\n\n    async getNoteText() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/notes/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: username }\n        });\n\n        if (response.data && response.data.content) {\n          this.lastNoteText = response.data.content;\n          this.showNoteText = true;\n        } else {\n          this.lastNoteText = 'Testo non disponibile';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero del testo della nota:', error);\n        this.lastNoteText = 'Errore nel caricamento del testo della nota.';\n      }\n    },\n\n    convertMarkdown(content) {\n      return marked(content);\n    },\n\n    etNoteText() {\n      this.showNoteText = true;\n    },\n\n\n    async getLastPomodoro() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/poms/last', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n\n        if (response.data) {\n          this.lastPomodoroTempoStudio = response.data.tempoStudio;\n          this.lastPomodoroTempoPausa = response.data.tempoPausa;\n          this.lastPomodoroRipetizioni = response.data.ripetizioni;\n          this.noPomodorosMessage = '';\n        } else {\n          this.noPomodorosMessage = 'Nessun pomodoro trovato';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero dell\\'ultimo pomodoro:', error);\n        this.noPomodorosMessage = 'Errore nel caricamento dell\\'ultimo pomodoro.';\n      }\n    },\n\n\n\n    async getNotifies() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/notifications/getNotif', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n        //console.log(response.data);\n        if (response.data) {\n          this.notifications = response.data;\n        } else {\n          this.noNotificationsMessage = 'Nessuna notifica trovata.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche :', error);\n        this.noNotificationsMessage = 'Errore caricamento delle notifiche.';\n      }\n    },\n\n    async getUsers() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { author: this.username }\n        });\n        this.users = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    },\n\n    async sendNotifications() {\n      if (this.selectedUsers.length === 0) {\n        alert('Seleziona almeno un utente per inviare una notifica.');\n        return;\n      }\n\n      if (this.notificationMessage.trim() === '') {\n        alert('Scrivi un messaggio per inviare una notifica.');\n        return;\n      }\n\n      try {\n        const token = sessionStorage.getItem('token');\n\n        await axios.post('/api/notifications/send', {\n          recipients: this.selectedUsers,\n          message: this.notificationMessage\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        alert('notifiche inviate!');\n      } catch (error) {\n        console.error('errore durante invio notifiche:', error);\n        alert('Errore durante invio notifiche.');\n      }\n    },\n\n    async deleteNotification(notificationId) {\n      try {\n        const token = sessionStorage.getItem('token');\n\n        await axios.delete(`/api/notifications/${notificationId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        this.notifications = this.notifications.filter(notification => notification._id !== notificationId);\n        alert('Notifica eliminata, aggiorna pagina per vedere effetto');\n      } catch (error) {\n        console.error('errore durante eliminazione notifica:', error);\n        alert('errore durante leliminazione della notifica.');\n      }\n    },\n\n  }\n\n};\n</script>\n\n<style scoped>\n.home-principale {\n  display: flex;\n  flex-direction: column; /* Aggiunto per allineare il contenuto in verticale */\n  justify-content: flex-start; /* Allinea il contenuto in alto */\n  background: linear-gradient(to bottom, #f4a460, #eee8aa);\n  padding: 20px; /* Aggiungi padding per il contenuto */\n}\n\n\n/* Rimuovi il margine inferiore dalla classe .container */\n.container {\n  padding-bottom: 0; /* Elimina il padding per far sì che il contenuto non scivoli sotto il footer */\n}\n\n.title {\n  font-size: 2.5rem; /* Dimensione del titolo */\n  margin-bottom: 20px; /* Spazio sotto il titolo */\n  position: relative; /* Mantiene il titolo nella stessa posizione */\n  z-index: 1; /* Assicura che il titolo sia sopra le immagini */\n}\n\n.img-left {\n  max-width: 150%; /* Imposta una larghezza massima per l'immagine a sinistra e a destra */\n  height: auto; /* Mantiene il rapporto di aspetto dell'immagine */\n  max-height: 60%; /* Imposta un'altezza massima per renderla più grande */\n  margin-top: 0px; /* Sposta l'immagine più in basso */\n  margin-left: -250px;\n}\n\n.img-right {\n  max-width: 150%;\n  height: auto;\n  max-height: 60%;\n  margin-right: -250px;\n  margin-top: 200px;\n\n}\n\n\n.img-fluid {\n  max-width: 100%; /* Imposta una larghezza massima dell'immagine centrale */\n  height: auto; /* Mantiene il rapporto di aspetto dell'immagine */\n  max-height: 80%; /* Imposta un'altezza massima per renderla più grande */\n  margin-top: 10px; /* Spazio sopra l'immagine centrale */\n  margin-right: 50px; /* Sposta l'immagine centrale più a sinistra */\n}\n\n.img-description-container {\n  display: flex; /* Utilizza flexbox */\n  justify-content: center; /* Centra il contenuto orizzontalmente */\n  align-items: center; /* Centra il contenuto verticalmente */\n  text-align: center; /* Centra il testo */\n  padding: 0 20px; /* Aggiungi padding per un po' di spazio ai lati */\n  width: 700px;\n}\n\n.img-description-container-2 {\n  display: flex; /* Utilizza flexbox */\n  justify-content: center; /* Centra il contenuto orizzontalmente */\n  align-items: center; /* Centra il contenuto verticalmente */\n  text-align: center; /* Centra il testo */\n  padding: 0 20px; /* Aggiungi padding per un po' di spazio ai lati */\n  width: 500px;\n  height: 2%;\n  margin-left: 200px;\n  margin-top: -40px;\n}\n\n.img-description-2 {\n  font-family: 'Lora', serif; /* Usa il font scelto */\n  font-size: 1.2rem; /* Dimensione del font */\n  color: #333; /* Colore del testo */\n  text-align: center; /* Allinea il testo al centro */\n  padding: 10px; /* Padding per migliorare l'aspetto */\n  line-height: 1.5; /* Aumenta l'interlinea per una lettura migliore */\n  margin-right: 0px;\n  margin-top: 100px;\n}\n\n.img-description {\n  font-family: 'Lora', serif; /* Usa il font scelto */\n  font-size: 1.2rem; /* Dimensione del font */\n  color: #333; /* Colore del testo */\n  text-align: center; /* Allinea il testo al centro */\n  padding: 10px; /* Padding per migliorare l'aspetto */\n  line-height: 1.5; /* Aumenta l'interlinea per una lettura migliore */\n  margin-right: 300px;\n  margin-top: 30px; \n}\n\n.reminder-title {\n  font-size: 1.8rem;\n  font-weight: bold;\n  color: #4a4a4a;\n  margin-bottom: 15px;\n  text-align: center;\n}\n\n\n.form-group {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.custom-select {\n  width: 100%;\n  padding: 8px;\n  border-radius: 8px;\n  border: 1px solid #eee8aa;\n  font-size: 1rem;\n  color: #4a4a4a;\n}\n\n.event-content {\n  padding: 10px;\n}\n\n.event-heading {\n  font-size: 1.4rem;\n  color: #555;\n  text-align: center;\n  margin-bottom: 15px;\n}\n\n.event-list {\n  list-style: none;\n  padding: 0;\n}\n\n.event-item {\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.event-item strong {\n  color: #333;\n}\n\n.no-events {\n  font-style: italic;\n  color: #999;\n  text-align: center;\n}\n\n.events-section {\n  background: linear-gradient(to bottom, #f4a460, #eee8aa);\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.section-title {\n  color: #333; /* Sostituisci con il colore del tema */\n}\n\n.event-select {\n  background-color: #EEE8AA;\n  color: #333; /* Colore del testo, regolabile per un buon contrasto */\n  border: none;\n  border-radius: 4px;\n  padding: 5px;\n}\n\n.event-select:focus {\n  outline: none;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); /* Effetto focus, opzionale */\n}\n\n.event-select option {\n  color: black; /* Colore per le opzioni */\n}\n\n.section-container {\n  background: linear-gradient(to bottom, #f4a460, #eee8aa);\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n}\n\n.events-section,\n.event-section {\n  background: inherit; /* Usa lo stesso colore del genitore */\n}\n\n\n.row > .col-5:not(:last-child) {\n  margin-right: 150px; /* Solo a destra del primo contenitore */\n}\n\n\n\n.fixed-button {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 10px 20px;\n  background-color: #007bff; /* Colore di sfondo del pulsante */\n  color: white; /* Colore del testo */\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  z-index: 1000; /* Assicurati che sia sopra altri contenuti */\n}\n\n.fixed-button:hover {\n  background-color: #0056b3; /* Colore di sfondo al passaggio del mouse */\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5); /* Sfondo scuro traslucido */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1001; /* Assicurati che sia sopra il pulsante */\n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n\n\n\n\n\n/*body {\n /* background: linear-gradient(to bottom, #0000ff, #ffffff);\n  margin: 0;\n}\n\n.home-principale {\n  text-align: center;\n /* background-image: url('https://images.hdqwalls.com/wallpapers/abstract-shapes-4k-q2.jpg');\n  background-size: cover;\n  background-position: center;\n  min-height: 100vh;\n  /* Imposta l'altezza minima per riempire la viewport \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: rgb(0, 0, 0);\n  /* colore testo \n}\n\n.carousel-item {\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  background-color: #000;\n  border-radius: 50%;\n}\n\n.notification-form {\n  max-width: 300px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.form-group select,\n.form-group textarea {\n  width: 100%;\n  padding: 8px;\n  font-size: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\ntextarea {\n  height: 100px;\n  resize: vertical;\n}\n\nbutton.btn {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton.btn:hover {\n  background-color: #0056b3;\n}\n\nbutton.btn-danger {\n  background-color: rgb(194, 27, 27);\n}\n\n.note-text {\n  margin-top: 20px;\n  text-align: left;\n  font-size: 16px;\n  line-height: 1.5;\n}\n\n\n.custom-select {\n  width: 100%;\n  padding: 10px;\n  border-radius: 8px;\n  border: 2px solid #ced4da;\n  background-color: #f8f9fa;\n  color: #495057;\n  font-size: 16px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.custom-select:focus {\n  border-color: #80bdff;\n  outline: none;\n  box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);\n}\n\n.custom-select:hover {\n  border-color: #5a6268;\n}\n\n.form-group label {\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n*/\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}