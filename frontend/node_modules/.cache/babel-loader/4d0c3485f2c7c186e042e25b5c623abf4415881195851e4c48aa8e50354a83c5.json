{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Aggiungi una Nota\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.addNote && $options.addNote(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"heading\"\n  }, \"Titolo:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newNote.heading = $event),\n    id: \"heading\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newNote.heading]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"completed\"\n  }, \"Completata:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newNote.completed = $event),\n    id: \"completed\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.newNote.completed]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Aggiungi Nota\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _cache[7] || (_cache[7] = _createElementVNode(\"h1\", null, \"Notes\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notes, note => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: note._id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(note.heading), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Author: \" + _toDisplayString(note.author), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString(note.completed ? 'Completed' : 'Not Completed'), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editNote(note._id)\n    }, \"Modifica\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteNote(note._id)\n    }, \"Elimina\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","addNote","for","type","$event","$data","newNote","heading","id","required","completed","_Fragment","_renderList","notes","note","key","_id","_toDisplayString","author","onClick","editNote","_hoisted_1","deleteNote","_hoisted_2"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/ToDoApp.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Aggiungi una Nota</h1>\n    <form @submit.prevent=\"addNote\">\n      <div>\n        <label for=\"heading\">Titolo:</label>\n        <input type=\"text\" v-model=\"newNote.heading\" id=\"heading\" required />\n      </div>\n      <div>\n        <label for=\"completed\">Completata:</label>\n        <input type=\"checkbox\" v-model=\"newNote.completed\" id=\"completed\" />\n      </div>\n      <button type=\"submit\">Aggiungi Nota</button>\n    </form>\n\n    <h1>Notes</h1>\n    <ul>\n      <li v-for=\"note in notes\" :key=\"note._id\">\n        <h2>{{ note.heading }}</h2>\n        <p>Author: {{ note.author }}</p>\n        <p>Status: {{ note.completed ? 'Completed' : 'Not Completed' }}</p>\n        <button @click=\"editNote(note._id)\">Modifica</button>\n        <button @click=\"deleteNote(note._id)\">Elimina</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  \nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      newNote: {\n        heading: '',\n        completed: false\n      },\n      notes: []\n    };\n  },\n  async created() {\n    this.fetchNotes();\n  },\n  methods: {\n    async fetchNotes() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username'); \n        if (!username) {\n          console.error('Username non trovato');\n          return;\n        }\n        const response = await axios.get('/api/notesGET', {\n          params: { username: username } ,\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching notes:', error);\n      }\n    },\n    async addNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato, impossibile creare la nota');\n          return;\n        }\n\n        this.newNote.author = username;\n\n        const response = await axios.post('/api/notes', this.newNote, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Nota aggiunta:', response.data);\n\n        this.newNote = {\n          heading: '',\n          author: username,\n          completed: false\n        };\n\n        this.fetchNotes();\n      } catch (error) {\n        console.error('Errore nell\\'aggiunta della nota:', error);\n      }\n    },\n    editNote(id) {\n      this.$router.push(`/edit-note/${id}`);\n    },\n    async deleteNote(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/notesRIM/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Nota eliminata');\n        this.fetchNotes();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della nota:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n\ndiv {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background: linear-gradient(135deg, #f3f4f6, #e2e6ea);\n  border-radius: 10px; \n  padding: 20px;\n}\n\nform {\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  width: 100%;\n  max-width: 600px;\n  margin-bottom: 20px;\n}\n\nform div {\n  margin-bottom: 15px;\n}\n\nform label {\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\nform input[type=\"text\"],\nform input[type=\"checkbox\"] {\n  width: 100%;\n  padding: 10px;\n  border-radius: 6px;\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n}\n\nform input[type=\"checkbox\"] {\n  width: auto;\n}\n\nbutton[type=\"submit\"] {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #45a049;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  max-width: 600px;\n}\n\nli {\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nh2 {\n  margin: 0;\n  font-size: 18px;\n}\n\np {\n  margin: 5px 0;\n  font-size: 14px;\n  color: #666;\n}\n\nbutton {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  margin-left: 10px;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n\nbutton:nth-of-type(2) {\n  background-color: #dc3545;\n}\n\nbutton:nth-of-type(2):hover {\n  background-color: #c82333;\n}\n\n\n</style>\n"],"mappings":";mBAAA;mBAAA;;uBACEA,mBAAA,CAwBM,c,0BAvBJC,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAUO;IAVAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;MAC5BJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAoC;IAA7BO,GAAG,EAAC;EAAS,GAAC,SAAO,sB,gBAC5BP,mBAAA,CAAqE;IAA9DQ,IAAI,EAAC,MAAM;IAN1B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMoCC,KAAA,CAAAC,OAAO,CAACC,OAAO,GAAAH,MAAA;IAAEI,EAAE,EAAC,SAAS;IAACC,QAAQ,EAAR;iDAA9BJ,KAAA,CAAAC,OAAO,CAACC,OAAO,E,KAE7CZ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA0C;IAAnCO,GAAG,EAAC;EAAW,GAAC,aAAW,sB,gBAClCP,mBAAA,CAAoE;IAA7DQ,IAAI,EAAC,UAAU;IAV9B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAUwCC,KAAA,CAAAC,OAAO,CAACI,SAAS,GAAAN,MAAA;IAAEI,EAAE,EAAC;qDAAtBH,KAAA,CAAAC,OAAO,CAACI,SAAS,E,+BAEnDf,mBAAA,CAA4C;IAApCQ,IAAI,EAAC;EAAQ,GAAC,eAAa,qB,sDAGrCR,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAQK,c,kBAPHD,mBAAA,CAMKiB,SAAA,QAvBXC,WAAA,CAiByBP,KAAA,CAAAQ,KAAK,EAAbC,IAAI;yBAAfpB,mBAAA,CAMK;MANsBqB,GAAG,EAAED,IAAI,CAACE;QACnCrB,mBAAA,CAA2B,YAAAsB,gBAAA,CAApBH,IAAI,CAACP,OAAO,kBACnBZ,mBAAA,CAAgC,WAA7B,UAAQ,GAAAsB,gBAAA,CAAGH,IAAI,CAACI,MAAM,kBACzBvB,mBAAA,CAAmE,WAAhE,UAAQ,GAAAsB,gBAAA,CAAGH,IAAI,CAACJ,SAAS,kDAC5Bf,mBAAA,CAAqD;MAA5CwB,OAAK,EAAAf,MAAA,IAAEJ,QAAA,CAAAoB,QAAQ,CAACN,IAAI,CAACE,GAAG;OAAG,UAAQ,iBArBpDK,UAAA,GAsBQ1B,mBAAA,CAAsD;MAA7CwB,OAAK,EAAAf,MAAA,IAAEJ,QAAA,CAAAsB,UAAU,CAACR,IAAI,CAACE,GAAG;OAAG,SAAO,iBAtBrDO,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}