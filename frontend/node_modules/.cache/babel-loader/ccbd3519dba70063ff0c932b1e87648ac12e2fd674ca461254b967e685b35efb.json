{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  data() {\n    return {\n      alerts: [],\n      seenAlerts: new Set()\n    };\n  },\n  created() {\n    this.startPolling();\n  },\n  methods: {\n    startPolling() {\n      setInterval(() => {\n        fetch('/api/get-latest-alert').then(response => {\n          if (!response.ok) {\n            throw new Error('Errore nella risposta');\n          }\n          return response.json();\n        }).then(data => {\n          if (data.alerts && data.alerts.length > 0) {\n            const username = localStorage.getItem('username');\n            const filteredAlerts = data.alerts.filter(alert => alert.userNome.toLowerCase() === username.toLowerCase());\n            console.log('Alert filtrati:', filteredAlerts);\n            if (filteredAlerts.length > 0) {\n              this.alerts = filteredAlerts;\n              filteredAlerts.forEach(alertItem => {\n                alert(`Evento: ${alertItem.title}\\nData: ${new Date(alertItem.date).toLocaleDateString()}\\nOrario: ${alertItem.startTime}`);\n              });\n            }\n          } else {\n            console.log('Nessun alert trovato.');\n          }\n        }).catch(err => {\n          console.error('Errore nel polling:', err);\n        });\n      }, 5000);\n    }\n  }\n};","map":{"version":3,"names":["data","alerts","seenAlerts","Set","created","startPolling","methods","setInterval","fetch","then","response","ok","Error","json","length","username","localStorage","getItem","filteredAlerts","filter","alert","userNome","toLowerCase","console","log","forEach","alertItem","title","Date","date","toLocaleDateString","startTime","catch","err","error"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n  <div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      alerts: [],  \n      seenAlerts: new Set(),  \n    };\n  },\n  created() {\n    this.startPolling();  \n  },\n  methods: {\n    startPolling() {\n      setInterval(() => {\n        fetch('/api/get-latest-alert')\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Errore nella risposta');\n            }\n            return response.json();  \n          })\n          .then(data => {\n            if (data.alerts && data.alerts.length > 0) {\n              const username = localStorage.getItem('username');  \n              \n              const filteredAlerts = data.alerts.filter(alert => alert.userNome.toLowerCase() === username.toLowerCase());\n              console.log('Alert filtrati:', filteredAlerts); \n\n              if (filteredAlerts.length > 0) {\n                this.alerts = filteredAlerts;  \n                filteredAlerts.forEach(alertItem => {\n                 alert(`Evento: ${alertItem.title}\\nData: ${new Date(alertItem.date).toLocaleDateString()}\\nOrario: ${alertItem.startTime}`);\n        });\n\n              }\n            } else {\n              console.log('Nessun alert trovato.');\n            }\n          })\n          .catch(err => {\n            console.error('Errore nel polling:', err);\n          });\n      }, 5000); \n    }\n  }\n};\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";;;;;;;AAMA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,IAAIC,GAAG,CAAC;IACtB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACPD,YAAYA,CAAA,EAAG;MACbE,WAAW,CAAC,MAAM;QAChBC,KAAK,CAAC,uBAAuB,EAC1BC,IAAI,CAACC,QAAO,IAAK;UAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;UAC1C;UACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACxB,CAAC,EACAJ,IAAI,CAACT,IAAG,IAAK;UACZ,IAAIA,IAAI,CAACC,MAAK,IAAKD,IAAI,CAACC,MAAM,CAACa,MAAK,GAAI,CAAC,EAAE;YACzC,MAAMC,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;YAEjD,MAAMC,cAAa,GAAIlB,IAAI,CAACC,MAAM,CAACkB,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,QAAQ,CAACC,WAAW,CAAC,MAAMP,QAAQ,CAACO,WAAW,CAAC,CAAC,CAAC;YAC3GC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,cAAc,CAAC;YAE9C,IAAIA,cAAc,CAACJ,MAAK,GAAI,CAAC,EAAE;cAC7B,IAAI,CAACb,MAAK,GAAIiB,cAAc;cAC5BA,cAAc,CAACO,OAAO,CAACC,SAAQ,IAAK;gBACnCN,KAAK,CAAC,WAAWM,SAAS,CAACC,KAAK,WAAW,IAAIC,IAAI,CAACF,SAAS,CAACG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,aAAaJ,SAAS,CAACK,SAAS,EAAE,CAAC;cACpI,CAAC,CAAC;YAEI;UACF,OAAO;YACLR,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;UACtC;QACF,CAAC,EACAQ,KAAK,CAACC,GAAE,IAAK;UACZV,OAAO,CAACW,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;QAC3C,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC;IACV;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}