{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,\n      tempoPausa: 5,\n      ripetizioni: 5,\n      giorno: ''\n    });\n    const statusMessage = ref('');\n    let studyCycles = ref(parseInt(route.query.studyCycles) || newPom.value.ripetizioni);\n    let timerInterval = null;\n    let isStudyPhase = ref(route.query.isStudyPhase === 'true');\n    let remainingTime = ref(parseInt(route.query.remainingTime) || 0);\n    let isPaused = ref(false);\n    const progressWidth = ref(0);\n    onMounted(() => {\n      if (route.query.date) {\n        newPom.value.giorno = new Date(route.query.date).toISOString().split('T')[0];\n      } else {\n        newPom.value.giorno = new Date().toISOString().split('T')[0];\n      }\n      remainingTime.value = parseInt(route.query.remainingTime) || 0;\n      studyCycles.value = parseInt(route.query.studyCycles) || newPom.value.ripetizioni;\n      isStudyPhase.value = route.query.isStudyPhase === 'true';\n      newPom.value.tempoStudio = parseInt(route.query.tempoStudio) || newPom.value.tempoStudio;\n      newPom.value.tempoPausa = parseInt(route.query.tempoPausa) || newPom.value.tempoPausa;\n      newPom.value.ripetizioni = parseInt(route.query.ripetizioni) || newPom.value.ripetizioni;\n      console.log(\"Parametri inizializzati:\", {\n        giorno: newPom.value.giorno,\n        remainingTime: remainingTime.value,\n        studyCycles: studyCycles.value,\n        isStudyPhase: isStudyPhase.value,\n        tempoStudio: newPom.value.tempoStudio,\n        tempoPausa: newPom.value.tempoPausa,\n        ripetizioni: newPom.value.ripetizioni\n      });\n      if (remainingTime.value > 0) {\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n        if (isStudyPhase.value) {\n          startTimerWithRemainingTime();\n        } else {\n          startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n        }\n      }\n    });\n    onUnmounted(() => {\n      clearInterval(timerInterval);\n    });\n    const updateProgressBar = totalTime => {\n      const percentage = (totalTime - remainingTime.value) / totalTime * 100;\n      progressWidth.value = Math.min(percentage, 100);\n    };\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione pomodoro aggiunta:', response.data);\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n    const startTimerWithRemainingTime = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n      timerInterval = setInterval(() => {\n        updateTimer(totalTime);\n      }, 1000);\n    };\n    const startStudyTimer = (studyTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      isStudyPhase.value = true;\n      isPaused.value = false;\n      progressWidth.value = 0;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(studyTime * 60);\n      }, 1000);\n    };\n    const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n      progressWidth.value = 0;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(pauseTime * 60);\n      }, 1000);\n    };\n    const updateTimer = totalTime => {\n      if (remainingTime.value > 0) {\n        remainingTime.value -= 1;\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n        updateProgressBar(totalTime);\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        if (isStudyPhase.value) {\n          startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n        } else {\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      }\n    };\n    const formatTime = timeInSeconds => {\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = timeInSeconds % 60;\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    };\n    const skipPhase = () => {\n      clearInterval(timerInterval);\n      progressWidth.value = 0;\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n      if (studyCycles.value <= 0) {\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      progressWidth.value = 0;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n    const endCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      progressWidth.value = 0;\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n      saveIncompleteSession();\n    };\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      isPaused.value = true;\n      saveIncompleteSession();\n    };\n    const resumeTimer = () => {\n      isPaused.value = false;\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(totalTime);\n      }, 1000);\n    };\n    const saveIncompleteSession = async () => {\n      const token = sessionStorage.getItem('token');\n      const username = newPom.value.username.trim();\n      try {\n        await axios.post('/api/poms/save-incomplete', {\n          username,\n          giorno: new Date(newPom.value.giorno).toISOString(),\n          remainingTime: remainingTime.value,\n          isStudyPhase: isStudyPhase.value,\n          studyCycles: studyCycles.value\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Incomplete session saved.');\n      } catch (error) {\n        console.error('Error saving incomplete session:', error);\n      }\n    };\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused,\n      progressWidth\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","useRoute","axios","setup","route","newPom","username","localStorage","getItem","tempoStudio","tempoPausa","ripetizioni","giorno","statusMessage","studyCycles","parseInt","query","value","timerInterval","isStudyPhase","remainingTime","isPaused","progressWidth","date","Date","toISOString","split","console","log","document","getElementById","textContent","formatTime","startTimerWithRemainingTime","startBreakTimer","clearInterval","updateProgressBar","totalTime","percentage","Math","min","aggiungiPomodoro","token","sessionStorage","currentDate","selectedDate","response","post","headers","Authorization","data","getTime","startStudyTimer","error","setInterval","updateTimer","studyTime","cycles","alert","pauseTime","timeInSeconds","minutes","floor","seconds","String","padStart","skipPhase","restartCycle","endCycle","saveIncompleteSession","pauseTimer","resumeTimer","trim"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/pomodoroTempo.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h1>Sessione Pomodoro</h1>\n    <form @submit.prevent=\"aggiungiPomodoro\">\n      <div>\n        <label for=\"tempoStudio\">Tempo di studio (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoStudio\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"tempoPausa\">Tempo di pausa (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoPausa\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"ripetizioni\">Numero di ripetizioni:</label>\n        <input type=\"number\" v-model=\"newPom.ripetizioni\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"giorno\">Giorno della sessione:</label>\n        <input type=\"date\" v-model=\"newPom.giorno\" required>\n      </div>\n\n      <button type=\"submit\" class=\"rounded-btn\">Aggiungi Sessione</button>\n    </form>\n\n    <p id=\"studio-pausa\">{{ statusMessage }}</p>\n\n    <div class=\"timer\" id=\"timerDisplay\">00:00</div>\n\n    <div class=\"controls\">\n  <div class=\"button-row\">\n    <button @click=\"skipPhase\">Salta alla fase successiva</button>\n    <button @click=\"restartCycle\">Ricomincia ciclo</button>\n  </div>\n  <div class=\"button-row\">\n    <button @click=\"endCycle\">Termina ciclo</button>\n    <button @click=\"pauseTimer\">Stoppa timer</button>\n    <button v-if=\"isPaused\" @click=\"resumeTimer\">Riprendi timer</button> \n  </div>\n</div>\n\n  </div>\n\n  <button class=\"fixed-button\" @click=\"openModal\" style=\"background:#f4a460;\">\n  <i class=\"fas fa-paper-plane\"></i>\n</button>\n\n\n<div v-if=\"isModalOpen\" class=\"modal\" @click.self=\"closeModal\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\" style=\"background: linear-gradient(to bottom, #f4a460, #eee8aa);\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title\">Nuovo messaggio</h1>\n          </div>\n          <div class=\"modal-body\">\n            <form>\n              <div class=\"form-group\">\n                <label for=\"recipient-name\">Destinatario:</label>\n                \n              </div>\n              <div class=\"form-group\">\n                <label for=\"message-text\">Messaggio:</label>\n                <textarea class=\"form-control\" id=\"message-text\" v-model=\"notificationMessage\"></textarea>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-secondary\" @click=\"closeModal\" style=\"background:#f4a460;\">Chiudi</button>\n            <button class=\"btn btn-primary\" @click=\"sendNotifications\" style=\"background:#f4a460;\">\n              <i class=\"fas fa-paper-plane\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n</template>\n\n<script>\nimport { ref, onMounted,  onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,  \n      tempoPausa: 5,    \n      ripetizioni: 5,  \n      giorno: ''\n    });\n    \n   const statusMessage = ref('');\n    let studyCycles = ref(parseInt(route.query.studyCycles) || newPom.value.ripetizioni);\n    let timerInterval = null;\n    let isStudyPhase = ref(route.query.isStudyPhase === 'true');\n    let remainingTime = ref(parseInt(route.query.remainingTime) || 0);\n    let isPaused = ref(false);\n    const progressWidth = ref(0);\n\n    onMounted(() => {\n       if (route.query.date) {\n        newPom.value.giorno = new Date(route.query.date).toISOString().split('T')[0];\n      } else {\n        newPom.value.giorno = new Date().toISOString().split('T')[0];\n      }\n\n      remainingTime.value = parseInt(route.query.remainingTime) || 0;\n      studyCycles.value = parseInt(route.query.studyCycles) || newPom.value.ripetizioni;\n      isStudyPhase.value = route.query.isStudyPhase === 'true';\n      newPom.value.tempoStudio = parseInt(route.query.tempoStudio) || newPom.value.tempoStudio;\n      newPom.value.tempoPausa = parseInt(route.query.tempoPausa) || newPom.value.tempoPausa;\n      newPom.value.ripetizioni = parseInt(route.query.ripetizioni) || newPom.value.ripetizioni;\n\n      console.log(\"Parametri inizializzati:\", {\n        giorno: newPom.value.giorno,\n        remainingTime: remainingTime.value,\n        studyCycles: studyCycles.value,\n        isStudyPhase: isStudyPhase.value,\n        tempoStudio: newPom.value.tempoStudio,\n        tempoPausa: newPom.value.tempoPausa,\n        ripetizioni: newPom.value.ripetizioni,\n      });\n\n      if (remainingTime.value > 0) {\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n      if (isStudyPhase.value) {\n        startTimerWithRemainingTime();\n      } else {\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      }\n    }\n});\n\n    onUnmounted(() => {\n      clearInterval(timerInterval); \n    });\n\n\n    const updateProgressBar = (totalTime) => {\n      const percentage = ((totalTime - remainingTime.value) / totalTime) * 100;\n      progressWidth.value = Math.min(percentage, 100);\n    };\n\n\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        console.log('Sessione pomodoro aggiunta:', response.data);\n\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n\n      \n   const startTimerWithRemainingTime = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n      timerInterval = setInterval(() => {\n        updateTimer(totalTime);\n      }, 1000);\n    };\n\n    const startStudyTimer = (studyTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      isStudyPhase.value = true;\n      isPaused.value = false;\n      progressWidth.value = 0;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(studyTime * 60);\n      }, 1000);\n    };\n\n     const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n      progressWidth.value = 0;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(pauseTime * 60);\n      }, 1000);\n    };\n    \n    const updateTimer = (totalTime) => {\n      if (remainingTime.value > 0) {\n        remainingTime.value -= 1;\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n        updateProgressBar(totalTime);\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        if (isStudyPhase.value) {\n          startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n        } else {\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      }\n    };\n\n    const formatTime = (timeInSeconds) => {\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = timeInSeconds % 60;\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    };\n\n\n    const skipPhase = () => {\n      clearInterval(timerInterval);\n      progressWidth.value = 0;\n\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n\n      if (studyCycles.value <= 0) {\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      progressWidth.value = 0;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n\n    const endCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      progressWidth.value = 0;\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n      saveIncompleteSession();\n    };\n\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      isPaused.value = true;\n      saveIncompleteSession();\n    };\n\n    const resumeTimer = () => {\n      isPaused.value = false;\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n      updateTimer(totalTime);\n      }, 1000); \n  };\n\n    const saveIncompleteSession = async () => {\n      const token = sessionStorage.getItem('token');\n      const username = newPom.value.username.trim();\n\n      try {\n        await axios.post('/api/poms/save-incomplete', {\n          username,\n          giorno: new Date(newPom.value.giorno).toISOString(), \n          remainingTime: remainingTime.value,\n          isStudyPhase: isStudyPhase.value,\n          studyCycles: studyCycles.value,\n        }, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        console.log('Incomplete session saved.');\n      } catch (error) {\n        console.error('Error saving incomplete session:', error);\n      }\n    };\n\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused, \n      progressWidth\n    };\n  }\n};\n</script>\n\n\n<style scoped>\n#clock {\n  margin-top: 20px;\n}\n\n.progress-bar-container {\n  width: 100%;\n  height: 20px;\n  background-color: #e0e0e0; \n  overflow: hidden;\n  margin-bottom: 20px;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: green;\n  width: 0%;\n  transition: width 1s linear;\n}\n\n.timer {\n  font-size: 2em;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\nform {\n  max-width: 400px;\n  margin: auto;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton.rounded-btn {\n  border-radius: 20px; \n}\n\n\n.controls {\n  margin-top: 20px;\n  margin-bottom: 40px;\n  display: flex; \n  flex-wrap: wrap; \n  justify-content: center; \n}\n\n.controls button {\n  padding: 10px;\n  margin: 10px; \n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.button-row {\n  display: flex; \n  justify-content: space-between; \n  margin-bottom: 10px; \n}\n\n.controls button {\n  flex: 1; \n  margin-right: 10px; \n}\n\n.controls button:last-child {\n  margin-right: 0;\n}\n\n#clock {\n  margin-top: 40px;\n}\n\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5); \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1001; \n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n.fixed-button {\n  position: fixed;\n  bottom: 20px; \n  right: 20px;  \n}\n\n.fixed-button:nth-of-type(1) {\n  margin-bottom: 50px; \n}\n\n.notification-item {\n  padding: 10px; \n}\n\n.notification-separator {\n  border: none; \n  height: 5px; \n  background-color: blue;\n  margin: 10px 0; \n}\n\n.notification-item:last-child .notification-separator {\n  display: none; \n}\n\n\n.notification-item {\n  position: relative;\n  padding: 10px;\n  margin: 10px;\n  border: 1px solid #ccc; \n}\n\n.notification-footer {\n  position: absolute; \n  bottom: 30px; \n  right: 10px; \n}\n\n.delete-btn {\n  background: none;\n  border: none; \n  cursor: pointer;\n}\n\n\n@media (max-width: 600px) {\n  h1 {\n    margin-top: 30px; \n  }\n\n  .controls button {\n    margin-right: 10px; \n  }\n}\n\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}