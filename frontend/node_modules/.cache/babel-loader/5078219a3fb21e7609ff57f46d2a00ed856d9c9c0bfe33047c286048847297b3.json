{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  data() {\n    return {\n      alerts: [],\n      seenAlerts: new Set()\n    };\n  },\n  created() {\n    this.startPolling();\n  },\n  methods: {\n    startPolling() {\n      const token = sessionStorage.getItem('token');\n      setInterval(() => {\n        fetch('/api/get-latest-alert', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error('Errore nella risposta');\n          }\n          return response.json();\n        }).then(data => {\n          if (data.alerts && data.alerts.length > 0) {\n            const username = localStorage.getItem('username');\n            const filteredAlerts = data.alerts.filter(alert => alert.userNome.toLowerCase() === username.toLowerCase());\n            if (filteredAlerts.length > 0) {\n              this.alerts = filteredAlerts;\n              filteredAlerts.forEach(alertItem => {\n                alert(`Evento: ${alertItem.title}\\nData: ${new Date(alertItem.date).toLocaleDateString()}\\nOrario: ${alertItem.startTime}`);\n              });\n            }\n          }\n        }).catch(err => {\n          console.error('Errore nel polling:', err);\n        });\n      }, 5000); // Intervallo di 5 secondi\n    }\n  }\n};","map":{"version":3,"names":["data","alerts","seenAlerts","Set","created","startPolling","methods","token","sessionStorage","getItem","setInterval","fetch","method","headers","then","response","ok","Error","json","length","username","localStorage","filteredAlerts","filter","alert","userNome","toLowerCase","forEach","alertItem","title","Date","date","toLocaleDateString","startTime","catch","err","console","error"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n  <div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      alerts: [],  \n      seenAlerts: new Set(),  \n    };\n  },\n  created() {\n    this.startPolling();  \n  },\n  methods: {\n  startPolling() {\n    const token = sessionStorage.getItem('token');\n    setInterval(() => {\n      fetch('/api/get-latest-alert', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Errore nella risposta');\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data.alerts && data.alerts.length > 0) {\n          const username = localStorage.getItem('username');\n          const filteredAlerts = data.alerts.filter(alert => alert.userNome.toLowerCase() === username.toLowerCase());\n\n          if (filteredAlerts.length > 0) {\n            this.alerts = filteredAlerts;\n            filteredAlerts.forEach(alertItem => {\n              alert(`Evento: ${alertItem.title}\\nData: ${new Date(alertItem.date).toLocaleDateString()}\\nOrario: ${alertItem.startTime}`);\n            });\n          }\n        }\n      })\n      .catch(err => {\n        console.error('Errore nel polling:', err);\n      });\n    }, 5000); // Intervallo di 5 secondi\n  }\n}\n\n};\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";;;;;;;AAMA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,IAAIC,GAAG,CAAC;IACtB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACTD,YAAYA,CAAA,EAAG;MACb,MAAME,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7CC,WAAW,CAAC,MAAM;QAChBC,KAAK,CAAC,uBAAuB,EAAE;UAC7BC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUN,KAAK,EAAE;YAClC,cAAc,EAAE;UAClB;QACF,CAAC,EACAO,IAAI,CAACC,QAAO,IAAK;UAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;UAC1C;UACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACxB,CAAC,EACAJ,IAAI,CAACd,IAAG,IAAK;UACZ,IAAIA,IAAI,CAACC,MAAK,IAAKD,IAAI,CAACC,MAAM,CAACkB,MAAK,GAAI,CAAC,EAAE;YACzC,MAAMC,QAAO,GAAIC,YAAY,CAACZ,OAAO,CAAC,UAAU,CAAC;YACjD,MAAMa,cAAa,GAAItB,IAAI,CAACC,MAAM,CAACsB,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,QAAQ,CAACC,WAAW,CAAC,MAAMN,QAAQ,CAACM,WAAW,CAAC,CAAC,CAAC;YAE3G,IAAIJ,cAAc,CAACH,MAAK,GAAI,CAAC,EAAE;cAC7B,IAAI,CAAClB,MAAK,GAAIqB,cAAc;cAC5BA,cAAc,CAACK,OAAO,CAACC,SAAQ,IAAK;gBAClCJ,KAAK,CAAC,WAAWI,SAAS,CAACC,KAAK,WAAW,IAAIC,IAAI,CAACF,SAAS,CAACG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,aAAaJ,SAAS,CAACK,SAAS,EAAE,CAAC;cAC7H,CAAC,CAAC;YACJ;UACF;QACF,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;UACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;QAC3C,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ;EACF;AAEA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}