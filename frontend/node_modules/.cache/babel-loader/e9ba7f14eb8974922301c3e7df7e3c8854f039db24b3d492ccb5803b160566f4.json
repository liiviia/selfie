{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,\n      tempoPausa: 5,\n      ripetizioni: 5,\n      giorno: ''\n    });\n    const statusMessage = ref('');\n    let studyCycles = ref(parseInt(route.query.studyCycles) || newPom.value.ripetizioni);\n    let timerInterval = null;\n    let isStudyPhase = ref(route.query.isStudyPhase === 'true');\n    let remainingTime = ref(parseInt(route.query.remainingTime) || 0);\n    let isPaused = ref(false);\n    const progressWidth = ref(0);\n    let isModalOpen = ref(false);\n    let isNotificationModalOpen = ref(false);\n    const users = ref([]); // dichiara users come reattivo\n    const selectedUsers = ref([]);\n    let notificationsPom = ref([]);\n    const noNotificationsMessage = ref('');\n    let isHelpStudyOpen = ref(false);\n    onMounted(() => {\n      getUsers();\n      if (route.query.date) {\n        newPom.value.giorno = new Date(route.query.date).toISOString().split('T')[0];\n      } else {\n        newPom.value.giorno = new Date().toISOString().split('T')[0];\n      }\n      remainingTime.value = parseInt(route.query.remainingTime) || 0;\n      studyCycles.value = parseInt(route.query.studyCycles) || newPom.value.ripetizioni;\n      isStudyPhase.value = route.query.isStudyPhase === 'true';\n      newPom.value.tempoStudio = parseInt(route.query.tempoStudio) || newPom.value.tempoStudio;\n      newPom.value.tempoPausa = parseInt(route.query.tempoPausa) || newPom.value.tempoPausa;\n      newPom.value.ripetizioni = parseInt(route.query.ripetizioni) || newPom.value.ripetizioni;\n      console.log(\"Parametri inizializzati:\", {\n        giorno: newPom.value.giorno,\n        remainingTime: remainingTime.value,\n        studyCycles: studyCycles.value,\n        isStudyPhase: isStudyPhase.value,\n        tempoStudio: newPom.value.tempoStudio,\n        tempoPausa: newPom.value.tempoPausa,\n        ripetizioni: newPom.value.ripetizioni\n      });\n      if (remainingTime.value > 0) {\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n        if (isStudyPhase.value) {\n          startTimerWithRemainingTime();\n        } else {\n          startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n        }\n      }\n    });\n    onUnmounted(() => {\n      clearInterval(timerInterval);\n    });\n    const updateProgressBar = totalTime => {\n      const percentage = (totalTime - remainingTime.value) / totalTime * 100;\n      progressWidth.value = Math.min(percentage, 100);\n    };\n    const getUsers = async () => {\n      try {\n        const username = localStorage.getItem('username');\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        users.value = response.data;\n        console.log(\"users:\", users.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione pomodoro aggiunta:', response.data);\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n    const aggiungiPomDaNotifica = async (notificationId, tempoStudio, tempoPausa, ripetizioni, giorno) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const newPomDaNot = ref({\n          username: localStorage.getItem('username'),\n          tempoStudio: tempoStudio,\n          tempoPausa: tempoPausa,\n          ripetizioni: ripetizioni,\n          giorno: giorno\n        });\n        const response = await axios.post('/api/pomsPOST', newPomDaNot.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"perfetto, sessione aggiunta al tuo calendario!\\n ora la notifica verrÃ  eliminata\");\n        console.log(response);\n        const giornoDate = new Date(giorno);\n        if (giornoDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'sessione pomodoro aggiunta per una data futura';\n        } else {\n          studyCycles.value = ripetizioni;\n          startStudyTimer(tempoStudio, studyCycles.value, tempoPausa);\n        }\n        rifiutaNotifica(notificationId);\n      } catch (error) {\n        console.error(\"errore salvataggio pomodoro da notifica:\", error);\n      }\n    };\n    const fetchInvitiPom = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/getNotifichePom', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        //console.log(response.data);\n        if (response.data) {\n          notificationsPom.value = response.data;\n          console.log(\"no:\", notificationsPom);\n        } else {\n          this.noNotificationsMessage = 'Nessuna notifica trovata.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche :', error);\n        this.noNotificationsMessage = 'Errore caricamento delle notifiche.';\n      }\n    };\n    const accettaNotifica = async (notificationId, username, tempoStudio, tempoPausa, ripetizioni, giorno) => {\n      aggiungiPomDaNotifica(notificationId, username, tempoStudio, tempoPausa, ripetizioni, giorno);\n    };\n    const rifiutaNotifica = async notificationId => {\n      console.log(\"not id:\", notificationId);\n      const token = sessionStorage.getItem('token');\n      try {\n        await axios.delete(`/api/rifiutaNotifica/${notificationId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        notificationsPom.value = notificationsPom.value.filter(notifica => notifica._id !== notificationId);\n        console.log(\"notifica pom eliminata\");\n        alert(\"Notifica eliminata\");\n      } catch (error) {\n        console.log(\"errore rifiuta notifica pom\", error);\n      }\n    };\n    const startTimerWithRemainingTime = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n      timerInterval = setInterval(() => {\n        updateTimer(totalTime);\n      }, 1000);\n    };\n    const startStudyTimer = (studyTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      isStudyPhase.value = true;\n      isPaused.value = false;\n      progressWidth.value = 0;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(studyTime * 60);\n      }, 1000);\n    };\n    const openModal = () => {\n      isModalOpen.value = true;\n    };\n    const closeModal = () => {\n      isModalOpen.value = false;\n    };\n    const openNotificationModal = () => {\n      console.log(\"aperto notifiche modal\");\n      isNotificationModalOpen.value = true;\n      fetchInvitiPom();\n    };\n    const closeNotificationModal = () => {\n      isNotificationModalOpen.value = false;\n    };\n    const openHelpStudy = () => {\n      console.log(\"aperto\");\n      isHelpStudyOpen.value = true;\n    };\n    const closeHelpStudy = () => {\n      isHelpStudyOpen = false;\n    };\n    const sendNotificationPom = async () => {\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n      console.log(\"selected user:\", selectedUsers.value);\n      try {\n        await axios.post('/api/sendNoticationPom', {\n          username,\n          tempoStudio: newPom.value.tempoStudio,\n          tempoPausa: newPom.value.tempoPausa,\n          ripetizioni: newPom.value.ripetizioni,\n          destinatario: selectedUsers.value,\n          giorno: newPom.value.giorno\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert(\"notifica mandata con successo\");\n      } catch (error) {\n        console.error(\"Errore invio notifica pomodoro\", error);\n      }\n    };\n    const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n      progressWidth.value = 0;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(pauseTime * 60);\n      }, 1000);\n    };\n    const updateTimer = totalTime => {\n      if (remainingTime.value > 0) {\n        remainingTime.value -= 1;\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n        updateProgressBar(totalTime);\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        if (isStudyPhase.value) {\n          startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n        } else {\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      }\n    };\n    const formatTime = timeInSeconds => {\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = timeInSeconds % 60;\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    };\n    const skipPhase = () => {\n      clearInterval(timerInterval);\n      progressWidth.value = 0;\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n      if (studyCycles.value <= 0) {\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      progressWidth.value = 0;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n    const endCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      progressWidth.value = 0;\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n      saveIncompleteSession();\n    };\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      isPaused.value = true;\n      saveIncompleteSession();\n    };\n    const resumeTimer = () => {\n      isPaused.value = false;\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(totalTime);\n      }, 1000);\n    };\n    const saveIncompleteSession = async () => {\n      const token = sessionStorage.getItem('token');\n      const username = newPom.value.username.trim();\n      try {\n        await axios.post('/api/poms/save-incomplete', {\n          username,\n          giorno: new Date(newPom.value.giorno).toISOString(),\n          remainingTime: remainingTime.value,\n          isStudyPhase: isStudyPhase.value,\n          studyCycles: studyCycles.value\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Incomplete session saved.');\n      } catch (error) {\n        console.error('Error saving incomplete session:', error);\n      }\n    };\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused,\n      progressWidth,\n      openModal,\n      closeModal,\n      isModalOpen,\n      sendNotificationPom,\n      getUsers,\n      users,\n      selectedUsers,\n      openNotificationModal,\n      closeNotificationModal,\n      isNotificationModalOpen,\n      fetchInvitiPom,\n      notificationsPom,\n      noNotificationsMessage,\n      accettaNotifica,\n      rifiutaNotifica,\n      aggiungiPomDaNotifica,\n      openHelpStudy,\n      isHelpStudyOpen,\n      closeHelpStudy\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","useRoute","axios","setup","route","newPom","username","localStorage","getItem","tempoStudio","tempoPausa","ripetizioni","giorno","statusMessage","studyCycles","parseInt","query","value","timerInterval","isStudyPhase","remainingTime","isPaused","progressWidth","isModalOpen","isNotificationModalOpen","users","selectedUsers","notificationsPom","noNotificationsMessage","isHelpStudyOpen","getUsers","date","Date","toISOString","split","console","log","document","getElementById","textContent","formatTime","startTimerWithRemainingTime","startBreakTimer","clearInterval","updateProgressBar","totalTime","percentage","Math","min","token","sessionStorage","response","get","headers","Authorization","params","data","error","aggiungiPomodoro","currentDate","selectedDate","post","getTime","startStudyTimer","aggiungiPomDaNotifica","notificationId","newPomDaNot","alert","giornoDate","rifiutaNotifica","fetchInvitiPom","accettaNotifica","delete","filter","notifica","_id","setInterval","updateTimer","studyTime","cycles","openModal","closeModal","openNotificationModal","closeNotificationModal","openHelpStudy","closeHelpStudy","sendNotificationPom","destinatario","pauseTime","timeInSeconds","minutes","floor","seconds","String","padStart","skipPhase","restartCycle","endCycle","saveIncompleteSession","pauseTimer","resumeTimer","trim"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/pomodoroTempo.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h1>Sessione Pomodoro</h1>\n    <form @submit.prevent=\"aggiungiPomodoro\">\n      <div>\n        <label for=\"tempoStudio\">Tempo di studio (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoStudio\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"tempoPausa\">Tempo di pausa (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoPausa\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"ripetizioni\">Numero di ripetizioni:</label>\n        <input type=\"number\" v-model=\"newPom.ripetizioni\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"giorno\">Giorno della sessione:</label>\n        <input type=\"date\" v-model=\"newPom.giorno\" required>\n      </div>\n\n      <button type=\"submit\" class=\"rounded-btn\">Aggiungi Sessione</button>\n    </form>\n\n    <p id=\"studio-pausa\">{{ statusMessage }}</p>\n\n    <div class=\"timer\" id=\"timerDisplay\">00:00</div>\n\n    <div class=\"controls\">\n  <div class=\"button-row\">\n    <button @click=\"skipPhase\">Salta alla fase successiva</button>\n    <button @click=\"restartCycle\">Ricomincia ciclo</button>\n  </div>\n  <div class=\"button-row\">\n    <button @click=\"endCycle\">Termina ciclo</button>\n    <button @click=\"pauseTimer\">Stoppa timer</button>\n    <button v-if=\"isPaused\" @click=\"resumeTimer\">Riprendi timer</button> \n  </div>\n</div>\n\n  </div>\n\n\n                   <!--MODAL VEDI NOTIFIHCE-->\n\n                   <button class=\"fixed-button\" @click=\"openNotificationModal\" style=\"background:#f4a460; margin-bottom: 50px;\">\n                  Vedi Notifiche\n                    </button>\n\n\n                    <div v-if=\"isNotificationModalOpen\" class=\"modal\" @click.self=\"closeNotificationModal\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\" style=\"background: linear-gradient(to bottom, #f4a460, #eee8aa);\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title fs-5\">Notifiche</h1>\n          </div>\n          <div class=\"modal-body\">\n            <p>Qui puoi visualizzare tutte le notifiche ricevute.</p>\n            <ul>\n              <li v-for=\"(notifica, index) in notificationsPom\" :key=\"index\">\n      <p><strong>INVITATO DA:</strong> {{ notifica.username }}</p>\n      <p><strong>TEMPO STUDIO:</strong> {{ notifica.tempoStudio }} minuti</p>\n      <p><strong>TEMPO PAUSA:</strong> {{ notifica.tempoPausa }} minuti</p>\n      <p><strong>RIPETIZIONI:</strong> {{ notifica.ripetizioni }}</p>\n      <p><strong>GIORNO:</strong> {{ new Date(notifica.giorno).toLocaleDateString() }}</p>\n                  <button @click=\"rifiutaNotifica(notifica._id)\" class=\"delete-btn\">ðï¸</button>\n                  <button @click=\"accettaNotifica(\n                    notifica._id,\n                  Number(notifica.tempoStudio), \n                  Number(notifica.tempoPausa), \n                   Number(notifica.ripetizioni),  \n                     notifica.giorno)\">accetta</button>\n      <hr> âââââ\n    </li>\n           </ul>\n\n\n\n\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeNotificationModal\" style=\"background:#f4a460;\">Chiudi</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n    <!--MODAL AIUTO A STUDIARE--> \n    <button class=\"fixed-button\" @click=\"openHelpStudy\" style=\"background:#f4a460; margin-bottom: 50px;\">\n                  Non sai come studiare?\n                    </button>\n\n\n                    <div v-if=\"isHelpStudyOpen\" class=\"modal\" @click.self=\"closeHelpStudy\" style=\"background: #f4a460;\">\n                      <div class=\"modal-dialog\">\n        <div class=\"modal-content\" style=\"background: linear-gradient(to bottom, #f4a460, #eee8aa);\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title\">iinsersici qui quante ore hai a disposizione:</h1>\n          </div>\n          <form>\n            <div class=\"form-group\">\n              <label for=\"recipient-name\">ore a disposizione:</label>\n               <input type=\"number\">\n             </div>\n                  </form>\n\n                  <h4>hai a disposizione:</h4>\n\n          \n          <div class=\"modal-footer\">\n            <button class=\"btn btn-secondary\" @click=\"closeModal\" style=\"background:#f4a460;\">Chiudi</button>\n           \n          </div>\n        </div>\n      </div>\n\n                    </div>\n\n\n       \n\n\n\n\n\n                 <!--MODAL INVIA NOTIFICA -->\n  <button class=\"fixed-button\" @click=\"openModal\" style=\"background:#f4a460;\">\n  <i class=\"fas fa-paper-plane\"></i>\n</button>\n\n\n<div v-if=\"isModalOpen\" class=\"modal\" @click.self=\"closeModal\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\" style=\"background: linear-gradient(to bottom, #f4a460, #eee8aa);\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title\">invita un amico a studiare con le tue impostazioni:</h1>\n          </div>\n          <form>\n  <div class=\"form-group\">\n    <label for=\"recipient-name\">Destinatario:</label>\n    <select id=\"userSelect\" v-model=\"selectedUsers\" multiple class=\"form-control\">\n      <option v-for=\"user in users\" :key=\"user._id\" :value=\"user._id\">\n        {{ user.username }}\n      </option>\n    </select>\n  </div>\n</form>\n\n          <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <label for=\"recipient-name\">invita:</label>\n                <button class=\"btn btn-primary\" @click=\"sendNotificationPom\" style=\"background:#f4a460;\">\n              <i class=\"fas fa-paper-plane\"></i>\n            </button>\n                \n              </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-secondary\" @click=\"closeModal\" style=\"background:#f4a460;\">Chiudi</button>\n           \n          </div>\n        </div>\n      </div>\n    </div>\n\n\n</template>\n\n<script>\nimport { ref, onMounted,  onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,  \n      tempoPausa: 5,    \n      ripetizioni: 5,  \n      giorno: ''\n    });\n    \n   const statusMessage = ref('');\n    let studyCycles = ref(parseInt(route.query.studyCycles) || newPom.value.ripetizioni);\n    let timerInterval = null;\n    let isStudyPhase = ref(route.query.isStudyPhase === 'true');\n    let remainingTime = ref(parseInt(route.query.remainingTime) || 0);\n    let isPaused = ref(false);\n    const progressWidth = ref(0);\n    let isModalOpen = ref(false);\n    let isNotificationModalOpen = ref(false);\n    const users = ref([]); // dichiara users come reattivo\n    const selectedUsers = ref([]);\n    let notificationsPom = ref([]);\n    const noNotificationsMessage = ref('');\n    let isHelpStudyOpen = ref(false);\n\n\n    onMounted(() => {\n\n      getUsers();\n\n\n\n       if (route.query.date) {\n        newPom.value.giorno = new Date(route.query.date).toISOString().split('T')[0];\n      } else {\n        newPom.value.giorno = new Date().toISOString().split('T')[0];\n      }\n\n      remainingTime.value = parseInt(route.query.remainingTime) || 0;\n      studyCycles.value = parseInt(route.query.studyCycles) || newPom.value.ripetizioni;\n      isStudyPhase.value = route.query.isStudyPhase === 'true';\n      newPom.value.tempoStudio = parseInt(route.query.tempoStudio) || newPom.value.tempoStudio;\n      newPom.value.tempoPausa = parseInt(route.query.tempoPausa) || newPom.value.tempoPausa;\n      newPom.value.ripetizioni = parseInt(route.query.ripetizioni) || newPom.value.ripetizioni;\n\n      console.log(\"Parametri inizializzati:\", {\n        giorno: newPom.value.giorno,\n        remainingTime: remainingTime.value,\n        studyCycles: studyCycles.value,\n        isStudyPhase: isStudyPhase.value,\n        tempoStudio: newPom.value.tempoStudio,\n        tempoPausa: newPom.value.tempoPausa,\n        ripetizioni: newPom.value.ripetizioni,\n      });\n\n      if (remainingTime.value > 0) {\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n      if (isStudyPhase.value) {\n        startTimerWithRemainingTime();\n      } else {\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      }\n    }\n});\n\n\n\n\n\n    onUnmounted(() => {\n      clearInterval(timerInterval); \n    });\n\n\n    const updateProgressBar = (totalTime) => {\n      const percentage = ((totalTime - remainingTime.value) / totalTime) * 100;\n      progressWidth.value = Math.min(percentage, 100);\n    };\n\n\n\n    const getUsers = async () => {\n      try {\n        const username = localStorage.getItem('username');\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n        users.value = response.data; \n        console.log(\"users:\", users.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        console.log('Sessione pomodoro aggiunta:', response.data);\n\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n\n\n    const aggiungiPomDaNotifica = async (notificationId , tempoStudio , tempoPausa , ripetizioni , giorno) => {\n      \n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n\n\n        const newPomDaNot = ref({\n          username: localStorage.getItem('username'),\n          tempoStudio: tempoStudio , \n          tempoPausa: tempoPausa,\n          ripetizioni: ripetizioni ,\n          giorno: giorno\n        });\n\n        const response = await axios.post('/api/pomsPOST', newPomDaNot.value, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        alert(\"perfetto, sessione aggiunta al tuo calendario!\\n ora la notifica verrÃ  eliminata\"); \n        console.log(response);\n\n        const giornoDate = new Date(giorno);\n\n        if(giornoDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'sessione pomodoro aggiunta per una data futura';\n        }  else {\n          studyCycles.value = ripetizioni;\n          startStudyTimer(tempoStudio, studyCycles.value , tempoPausa);\n        }\n\n        rifiutaNotifica(notificationId);\n\n\n      } catch (error) {\n        console.error(\"errore salvataggio pomodoro da notifica:\", error);\n      }\n\n    };\n\n\n     \n    const fetchInvitiPom = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/getNotifichePom', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n        //console.log(response.data);\n        if (response.data) {\n          notificationsPom.value = response.data;\n          console.log(\"no:\",notificationsPom);\n        } else {\n          this.noNotificationsMessage = 'Nessuna notifica trovata.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche :', error);\n        this.noNotificationsMessage = 'Errore caricamento delle notifiche.';\n      }\n    };\n\n\n\n        const accettaNotifica = async ( notificationId ,username , tempoStudio , tempoPausa , ripetizioni , giorno) => {\n        \n          aggiungiPomDaNotifica( notificationId , username , tempoStudio , tempoPausa , ripetizioni , giorno);\n          \n           \n\n        };\n\n\n        const rifiutaNotifica = async (notificationId) => {\n  console.log(\"not id:\", notificationId);\n  const token = sessionStorage.getItem('token');\n\n  try {\n    await axios.delete(`/api/rifiutaNotifica/${notificationId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    notificationsPom.value = notificationsPom.value.filter(\n          notifica => notifica._id !== notificationId\n  );\n    console.log(\"notifica pom eliminata\");\n    alert(\"Notifica eliminata\");\n\n  } catch (error) {\n    console.log(\"errore rifiuta notifica pom\", error);\n  }\n};\n\n         \n\n\n      \n   const startTimerWithRemainingTime = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n      timerInterval = setInterval(() => {\n        updateTimer(totalTime);\n      }, 1000);\n    };\n\n    const startStudyTimer = (studyTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      isStudyPhase.value = true;\n      isPaused.value = false;\n      progressWidth.value = 0;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(studyTime * 60);\n      }, 1000);\n    };\n\n\n    const openModal  =  () =>  {\n      isModalOpen.value = true;\n    };\n    const closeModal  =  () =>  {\n      isModalOpen.value = false;\n    };\n\n    const openNotificationModal = () => {\n      console.log(\"aperto notifiche modal\");\n       isNotificationModalOpen.value = true;\n       fetchInvitiPom();\n    };\n\n    const closeNotificationModal = () => {\n      isNotificationModalOpen.value = false;\n    }\n\n    const openHelpStudy = () => {\n      console.log(\"aperto\");\n       isHelpStudyOpen.value = true;\n    };\n\n    const closeHelpStudy = () => {\n      isHelpStudyOpen = false;\n    };\n\n\n    const sendNotificationPom = async () => {\n  const token = sessionStorage.getItem('token');\n  const username = localStorage.getItem('username');\n  console.log(\"selected user:\",selectedUsers.value);\n\n\n  try {\n    await axios.post(\n      '/api/sendNoticationPom',\n      {\n        username,\n        tempoStudio: newPom.value.tempoStudio,\n        tempoPausa: newPom.value.tempoPausa,\n        ripetizioni: newPom.value.ripetizioni,\n        destinatario: selectedUsers.value,\n        giorno: newPom.value.giorno\n      },\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    alert(\"notifica mandata con successo\");\n  } catch (error) {\n    console.error(\"Errore invio notifica pomodoro\", error);\n  }\n};\n\n\n\n\n     const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n      progressWidth.value = 0;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(pauseTime * 60);\n      }, 1000);\n    };\n    \n    const updateTimer = (totalTime) => {\n      if (remainingTime.value > 0) {\n        remainingTime.value -= 1;\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n        updateProgressBar(totalTime);\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        if (isStudyPhase.value) {\n          startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n        } else {\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      }\n    };\n\n    const formatTime = (timeInSeconds) => {\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = timeInSeconds % 60;\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    };\n\n\n    const skipPhase = () => {\n      clearInterval(timerInterval);\n      progressWidth.value = 0;\n\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n\n      if (studyCycles.value <= 0) {\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      progressWidth.value = 0;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n\n    const endCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      progressWidth.value = 0;\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n      saveIncompleteSession();\n    };\n\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      isPaused.value = true;\n      saveIncompleteSession();\n    };\n\n    const resumeTimer = () => {\n      isPaused.value = false;\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n      updateTimer(totalTime);\n      }, 1000); \n  };\n\n    const saveIncompleteSession = async () => {\n      const token = sessionStorage.getItem('token');\n      const username = newPom.value.username.trim();\n\n      try {\n        await axios.post('/api/poms/save-incomplete', {\n          username,\n          giorno: new Date(newPom.value.giorno).toISOString(), \n          remainingTime: remainingTime.value,\n          isStudyPhase: isStudyPhase.value,\n          studyCycles: studyCycles.value,\n        }, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        console.log('Incomplete session saved.');\n      } catch (error) {\n        console.error('Error saving incomplete session:', error);\n      }\n    };\n\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused, \n      progressWidth,\n      openModal,\n      closeModal,\n      isModalOpen,\n      sendNotificationPom,\n      getUsers,\n      users,\n      selectedUsers,\n      openNotificationModal,\n      closeNotificationModal,\n      isNotificationModalOpen,\n      fetchInvitiPom,\n      notificationsPom,\n      noNotificationsMessage,\n      accettaNotifica,\n      rifiutaNotifica,\n      aggiungiPomDaNotifica,\n      openHelpStudy,\n      isHelpStudyOpen,\n      closeHelpStudy\n    };\n  }\n};\n</script>\n\n\n<style scoped>\n#clock {\n  margin-top: 20px;\n}\n\n.progress-bar-container {\n  width: 100%;\n  height: 20px;\n  background-color: #e0e0e0; \n  overflow: hidden;\n  margin-bottom: 20px;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: green;\n  width: 0%;\n  transition: width 1s linear;\n}\n\n.timer {\n  font-size: 2em;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\nform {\n  max-width: 400px;\n  margin: auto;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton.rounded-btn {\n  border-radius: 20px; \n}\n\n\n.controls {\n  margin-top: 20px;\n  margin-bottom: 40px;\n  display: flex; \n  flex-wrap: wrap; \n  justify-content: center; \n}\n\n.controls button {\n  padding: 10px;\n  margin: 10px; \n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.button-row {\n  display: flex; \n  justify-content: space-between; \n  margin-bottom: 10px; \n}\n\n.controls button {\n  flex: 1; \n  margin-right: 10px; \n}\n\n.controls button:last-child {\n  margin-right: 0;\n}\n\n#clock {\n  margin-top: 40px;\n}\n\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5); \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1001; \n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n.fixed-button {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n}\n\n.fixed-button:nth-of-type(1) {\n  bottom: 90px; /* Posiziona il primo pulsante piÃ¹ in alto */\n}\n\n.fixed-button:nth-of-type(2) {\n  bottom: 50px; /* Posiziona il secondo pulsante subito sotto */\n}\n\n.fixed-button:nth-of-type(3) {\n  bottom: 20px; /* Mantiene il terzo pulsante in basso */\n}\n\n\n.notification-item {\n  padding: 10px; \n}\n\n.notification-separator {\n  border: none; \n  height: 5px; \n  background-color: blue;\n  margin: 10px 0; \n}\n\n.notification-item:last-child .notification-separator {\n  display: none; \n}\n\n\n.notification-item {\n  position: relative;\n  padding: 10px;\n  margin: 10px;\n  border: 1px solid #ccc; \n}\n\n.notification-footer {\n  position: absolute; \n  bottom: 30px; \n  right: 10px; \n}\n\n.delete-btn {\n  background: none;\n  border: none; \n  cursor: pointer;\n}\n\n\n@media (max-width: 600px) {\n  h1 {\n    margin-top: 30px; \n  }\n\n  .controls button {\n    margin-right: 10px; \n  }\n}\n\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}