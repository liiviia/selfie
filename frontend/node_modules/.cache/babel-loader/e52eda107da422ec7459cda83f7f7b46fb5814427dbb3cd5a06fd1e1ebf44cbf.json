{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Non è più necessario visualizzare le notifiche in una lista -->\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n    };\n  },\n  created() {\n    const fetchAlerts = async () => {\n      try {\n        const loggedInUser = localStorage.getItem('username');\n        const response = await fetch(`/alerts?userNome=${loggedInUser}`);\n\n        const text = await response.text();\n        console.log('Risposta dal server:', text);\n\n        if (response.ok) {\n          const newAlerts = JSON.parse(text);\n\n          if (Array.isArray(newAlerts) && newAlerts.length > 0) {\n            // Quando ci sono notifiche, visualizzale subito come alert() invece di aggiungerle alla lista\n            newAlerts.forEach(alert => {\n              // Mostra il messaggio di notifica con alert()\n              alert(`TITOLO: ${alert.title}\\nData: ${alert.date}\\nOra di inizio: ${alert.startTime}`);\n            });\n          } else {\n            console.log('Nessuna notifica per l\\'utente');\n          }\n        } else {\n          console.error('Errore nella richiesta:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Errore nella richiesta:', error);\n      }\n    };\n\n    fetchAlerts();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAEM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}