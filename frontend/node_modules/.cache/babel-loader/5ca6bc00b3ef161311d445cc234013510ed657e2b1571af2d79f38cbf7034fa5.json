{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      note: {\n        heading: '',\n        completed: false\n      }\n    };\n  },\n  async created() {\n    await this.fetchNote();\n  },\n  methods: {\n    async fetchNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const noteId = this.$route.params.id;\n        const response = await axios.get(`/api/nota/${noteId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.note = response.data;\n        console.log('Nota recuperata:', this.note);\n      } catch (error) {\n        console.error('Errore nel recupero della nota:', error);\n      }\n    },\n    async updateNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const noteId = this.$route.params.id;\n        const response = await axios.put(`/api/notes/${noteId}`, this.note, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Nota aggiornata:', response.data);\n        this.$router.push('/todo');\n      } catch (error) {\n        console.error('Errore nell\\'aggiornamento della nota:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","note","heading","completed","created","fetchNote","methods","token","sessionStorage","getItem","noteId","$route","params","id","response","get","headers","Authorization","console","log","error","updateNote","put","$router","push"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/editNote.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Modifica Nota</h1>\n      <form @submit.prevent=\"updateNote\">\n        <div>\n          <label for=\"heading\">Titolo:</label>\n          <input type=\"text\" v-model=\"note.heading\" id=\"heading\" required />\n        </div>\n        <div>\n          <label for=\"completed\">Completata:</label>\n          <input type=\"checkbox\" v-model=\"note.completed\" id=\"completed\" />\n        </div>\n        <button type=\"submit\">Aggiorna Nota</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        note: {\n          heading: '',\n          completed: false\n        }\n      };\n    },\n    async created() {\n      await this.fetchNote();\n    },\n    methods: {\n      async fetchNote() {\n        try {\n          const token = sessionStorage.getItem('token');\n          const noteId = this.$route.params.id;\n          const response = await axios.get(`/api/nota/${noteId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.note = response.data;\n          console.log('Nota recuperata:', this.note); \n        } catch (error) {\n          console.error('Errore nel recupero della nota:', error);\n        }\n      },\n      async updateNote() {\n        try {\n          const token = sessionStorage.getItem('token');\n          const noteId = this.$route.params.id;\n          const response = await axios.put(`/api/notes/${noteId}`, this.note, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Nota aggiornata:', response.data);\n          this.$router.push('/todo');\n        } catch (error) {\n          console.error('Errore nell\\'aggiornamento della nota:', error);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\ndiv {\n  background: linear-gradient(135deg, #f8f9fa, #e9ecef);\n  border-radius: 10px;\n  padding: 20px;\n  max-width: 500px;\n  margin: 40px auto;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  text-align: center;\n  color: #333;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n\ninput[type=\"text\"],\ninput[type=\"checkbox\"] {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px 0;\n  font-size: 16px;\n}\n\nbutton {\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  align-self: center;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";AAkBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;QACpC,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,aAAaL,MAAM,EAAE,EAAE;UACtDM,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUV,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACN,IAAG,GAAIa,QAAQ,CAACd,IAAI;QACzBkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAClB,IAAI,CAAC;MAC5C,EAAE,OAAOmB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMd,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;QACpC,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACuB,GAAG,CAAC,cAAcZ,MAAM,EAAE,EAAE,IAAI,CAACT,IAAI,EAAE;UAClEe,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUV,KAAK;UAChC;QACF,CAAC,CAAC;QACFW,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,QAAQ,CAACd,IAAI,CAAC;QAC9C,IAAI,CAACuB,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,EAAE,OAAOJ,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}