{"ast":null,"code":"export default {\n  data() {\n    return {};\n  },\n  created() {\n    const fetchAlerts = async () => {\n      try {\n        const loggedInUser = localStorage.getItem('username');\n        const response = await fetch(`/alerts?userNome=${loggedInUser}`);\n        const text = await response.text();\n        console.log('Risposta dal server:', text);\n        if (response.ok) {\n          const newAlerts = JSON.parse(text);\n          if (Array.isArray(newAlerts) && newAlerts.length > 0) {\n            // Quando ci sono notifiche, visualizzale subito come alert() invece di aggiungerle alla lista\n            newAlerts.forEach(alert => {\n              // Mostra il messaggio di notifica con alert()\n              alert(`TITOLO: ${alert.title}\\nData: ${alert.date}\\nOra di inizio: ${alert.startTime}`);\n            });\n          } else {\n            console.log('Nessuna notifica per l\\'utente');\n          }\n        } else {\n          console.error('Errore nella richiesta:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Errore nella richiesta:', error);\n      }\n    };\n    fetchAlerts();\n  }\n};","map":{"version":3,"names":["data","created","fetchAlerts","loggedInUser","localStorage","getItem","response","fetch","text","console","log","ok","newAlerts","JSON","parse","Array","isArray","length","forEach","alert","title","date","startTime","error","statusText"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Non è più necessario visualizzare le notifiche in una lista -->\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n    };\n  },\n  created() {\n    const fetchAlerts = async () => {\n      try {\n        const loggedInUser = localStorage.getItem('username');\n        const response = await fetch(`/alerts?userNome=${loggedInUser}`);\n\n        const text = await response.text();\n        console.log('Risposta dal server:', text);\n\n        if (response.ok) {\n          const newAlerts = JSON.parse(text);\n\n          if (Array.isArray(newAlerts) && newAlerts.length > 0) {\n            // Quando ci sono notifiche, visualizzale subito come alert() invece di aggiungerle alla lista\n            newAlerts.forEach(alert => {\n              // Mostra il messaggio di notifica con alert()\n              alert(`TITOLO: ${alert.title}\\nData: ${alert.date}\\nOra di inizio: ${alert.startTime}`);\n            });\n          } else {\n            console.log('Nessuna notifica per l\\'utente');\n          }\n        } else {\n          console.error('Errore nella richiesta:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Errore nella richiesta:', error);\n      }\n    };\n\n    fetchAlerts();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"AAOA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO,CACP,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,YAAW,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACrD,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,oBAAoBJ,YAAY,EAAE,CAAC;QAEhE,MAAMK,IAAG,GAAI,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,IAAI,CAAC;QAEzC,IAAIF,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,SAAQ,GAAIC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC;UAElC,IAAIO,KAAK,CAACC,OAAO,CAACJ,SAAS,KAAKA,SAAS,CAACK,MAAK,GAAI,CAAC,EAAE;YACpD;YACAL,SAAS,CAACM,OAAO,CAACC,KAAI,IAAK;cACzB;cACAA,KAAK,CAAC,WAAWA,KAAK,CAACC,KAAK,WAAWD,KAAK,CAACE,IAAI,oBAAoBF,KAAK,CAACG,SAAS,EAAE,CAAC;YACzF,CAAC,CAAC;UACJ,OAAO;YACLb,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;UAC/C;QACF,OAAO;UACLD,OAAO,CAACc,KAAK,CAAC,yBAAyB,EAAEjB,QAAQ,CAACkB,UAAU,CAAC;QAC/D;MACF,EAAE,OAAOD,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDrB,WAAW,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}