{"ast":null,"code":"import { ref, onMounted, onBeforeUnmount } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nexport default {\n  setup() {\n    const route = useRoute();\n    const cercaPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const currentDate = new Date().toISOString().split('T')[0];\n        const response = await axios.get('/api/pomsGiornoCorrente', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username,\n            giorno: currentDate\n          }\n        });\n        if (response.data.incompleteSessions) {\n          const pomodoro = response.data; // PoichÃ© ora ricevi un oggetto singolo\n          let alertMessage = \"Ci sono sessioni Pomodoro programmate per oggi:\\n\";\n          console.log(response.data);\n\n          // Aggiungi i dettagli della sessione Pomodoro nell'alert\n          alertMessage += `- cicli: ${pomodoro.ripetizioni}, tempo studio: ${pomodoro.tempoStudio} minuti,  tempo pausa: ${pomodoro.tempoPausa} minuti   \\n`;\n          alert(alertMessage);\n        }\n      } catch (error) {\n        console.error(\"Errore:\", error);\n      }\n    };\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,\n      tempoPausa: 5,\n      ripetizioni: 5,\n      sessionID: uuidv4(),\n      giorno: ''\n    });\n    const statusMessage = ref('');\n    let studyCycles = ref(0);\n    let timerInterval = null;\n    let isStudyPhase = ref(true);\n    let remainingTime = ref(0);\n    let isPaused = ref(false);\n    let isPomodoroSaved = false;\n    onMounted(() => {\n      if (route.query.date) {\n        newPom.value.giorno = route.query.date;\n      }\n      window.addEventListener('beforeunload', () => {\n        if (!isPomodoroSaved) {\n          savePomDataIntermedi();\n        }\n      });\n      cercaPomodoro();\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('beforeunload', savePomDataIntermedi); //quando l'utente chiude la pag o chiude il browser\n    });\n    const savePomDataIntermedi = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n\n        // Definisci le variabili per il tempo rimanente\n        let savedTempoStudio;\n        let savedTempoPausa;\n\n        // Se siamo in fase di studio\n        if (isStudyPhase.value) {\n          savedTempoStudio = Math.floor(remainingTime.value / 60); // Calcola il tempo di studio completato\n          savedTempoPausa = newPom.value.tempoPausa; // Usa il tempo di pausa predefinito\n        } else {\n          // Se siamo in pausa\n          savedTempoStudio = newPom.value.tempoStudio; // Usa il tempo di studio predefinito\n          savedTempoPausa = Math.floor(remainingTime.value / 60); // Calcola il tempo di pausa completato\n        }\n\n        // Crea il payload da inviare\n        const pomData = {\n          username: newPom.value.username,\n          tempoStudio: savedTempoStudio,\n          tempoPausa: savedTempoPausa,\n          ripetizioni: studyCycles.value,\n          sessionID: newPom.value.sessionID,\n          giorno: newPom.value.giorno\n        };\n        console.log('Salvataggio pomData:', pomData); // Aggiungi questo log per il debug\n\n        await axios.post('/api/savePomDataIntermedi', pomData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } catch (error) {\n        console.error('Errore nel salvataggio dei dati:', error);\n      }\n    };\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione pomodoro aggiunta:', response.data);\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n    const startStudyTimer = async (studyTime, cycles, pause) => {\n      if (cycles <= 0) {\n        try {\n          const token = sessionStorage.getItem('token');\n          await axios.patch('/api/pomsUpdate', {\n            sessionID: newPom.value.sessionID,\n            terminato: true\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Ciclo marcato come terminato nel backend.');\n        } catch (error) {\n          console.error('Errore nell\\'aggiornamento del ciclo:', error);\n        }\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      console.log(remainingTime.value);\n      isStudyPhase.value = true;\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, studyTime, pause, cycles, startBreakTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n    const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, pauseTime, pauseTime, cycles, startStudyTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n    const updateTimer = (remaining, phaseTime, pauseTime, cycles, nextPhase) => {\n      if (remaining > 0) {\n        const minutes = Math.floor(remaining / 60);\n        const seconds = remaining % 60;\n        document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        nextPhase(phaseTime, studyCycles.value);\n      }\n    };\n    const skipPhase = async () => {\n      clearInterval(timerInterval);\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n      if (studyCycles.value <= 0) {\n        try {\n          const token = sessionStorage.getItem('token');\n          await axios.patch('/api/pomsUpdateFinito', {\n            sessionID: newPom.value.sessionID,\n            terminato: true\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Ciclo marcato come terminato nel backend.');\n        } catch (error) {\n          console.error('Errore nell\\'aggiornamento del ciclo:', error);\n        }\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n    const endCycle = async () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.patch('/api/pomsUpdate', {\n          sessionID: newPom.value.sessionID,\n          terminato: true\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Ciclo marcato come terminato nel backend.');\n      } catch (error) {\n        console.error('Errore nell\\'aggiornamento del ciclo:', error);\n      }\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n    };\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      savePomDataIntermedi();\n      isPomodoroSaved = true;\n      isPaused.value = true;\n    };\n    const resumeTimer = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, newPom.value.tempoStudio, newPom.value.tempoPausa, studyCycles.value, isStudyPhase.value ? startBreakTimer : startStudyTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","useRoute","axios","v4","uuidv4","setup","route","cercaPomodoro","token","sessionStorage","getItem","username","localStorage","currentDate","Date","toISOString","split","response","get","headers","Authorization","params","giorno","data","incompleteSessions","pomodoro","alertMessage","console","log","ripetizioni","tempoStudio","tempoPausa","alert","error","newPom","sessionID","statusMessage","studyCycles","timerInterval","isStudyPhase","remainingTime","isPaused","isPomodoroSaved","query","date","value","window","addEventListener","savePomDataIntermedi","removeEventListener","savedTempoStudio","savedTempoPausa","Math","floor","pomData","post","aggiungiPomodoro","selectedDate","getTime","startStudyTimer","studyTime","cycles","pause","patch","terminato","clearInterval","setInterval","updateTimer","startBreakTimer","pauseTime","remaining","phaseTime","nextPhase","minutes","seconds","document","getElementById","textContent","String","padStart","skipPhase","restartCycle","endCycle","pauseTimer","resumeTimer"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/pomodoroTempo.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h1>Sessione Pomodoro</h1>\n    <form @submit.prevent=\"aggiungiPomodoro\">\n      <div>\n        <label for=\"tempoStudio\">Tempo di studio (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoStudio\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"tempoPausa\">Tempo di pausa (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoPausa\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"ripetizioni\">Numero di ripetizioni:</label>\n        <input type=\"number\" v-model=\"newPom.ripetizioni\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"giorno\">Giorno della sessione:</label>\n        <input type=\"date\" v-model=\"newPom.giorno\" required>\n      </div>\n\n      <button type=\"submit\" class=\"rounded-btn\">Aggiungi Sessione</button>\n    </form>\n\n    <p id=\"studio-pausa\">{{ statusMessage }}</p>\n\n    <div id=\"clock\" class=\"blob\">\n      <div class=\"timer\" id=\"timerDisplay\">00:00</div>\n      <div class=\"progress-bar\"></div>\n    </div>\n\n    <div class=\"controls\">\n  <div class=\"button-row\">\n    <button @click=\"skipPhase\">Salta alla fase successiva</button>\n    <button @click=\"restartCycle\">Ricomincia ciclo</button>\n  </div>\n  <div class=\"button-row\">\n    <button @click=\"endCycle\">Termina ciclo</button>\n    <button @click=\"pauseTimer\">Stoppa timer</button>\n    <button v-if=\"isPaused\" @click=\"resumeTimer\">Riprendi timer</button> \n  </div>\n</div>\n\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted , onBeforeUnmount} from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid'; \n\n\nexport default {\n  setup() {\n    const route = useRoute();\n\n\n    const cercaPomodoro = async () => {\n  try {\n    const token = sessionStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const currentDate = new Date().toISOString().split('T')[0];\n\n    const response = await axios.get('/api/pomsGiornoCorrente', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      params: {\n        username,\n        giorno: currentDate\n      }\n    });\n\n    if (response.data.incompleteSessions) {\n      const pomodoro = response.data; // PoichÃ© ora ricevi un oggetto singolo\n      let alertMessage = \"Ci sono sessioni Pomodoro programmate per oggi:\\n\";\n\n      console.log(response.data);\n\n      // Aggiungi i dettagli della sessione Pomodoro nell'alert\n      alertMessage += `- cicli: ${pomodoro.ripetizioni}, tempo studio: ${pomodoro.tempoStudio} minuti,  tempo pausa: ${pomodoro.tempoPausa} minuti   \\n`;\n\n      alert(alertMessage);\n    }\n  } catch (error) {\n    console.error(\"Errore:\", error);\n  }\n};\n\n\n\n\n\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,  \n      tempoPausa: 5,    \n      ripetizioni: 5,  \n      sessionID: uuidv4(),\n      giorno: ''\n    });\n    const statusMessage = ref('');\n    let studyCycles = ref(0); \n    let timerInterval = null;\n    let isStudyPhase = ref(true); \n    let remainingTime = ref(0); \n    let isPaused = ref(false); \n    let isPomodoroSaved = false;\n\n\n    onMounted(() => {\n      if (route.query.date) {\n        newPom.value.giorno = route.query.date;\n      }\n\n      window.addEventListener('beforeunload', () => {\n    if (!isPomodoroSaved) {\n      savePomDataIntermedi();\n    }\n  });\n  \n  \n  cercaPomodoro();\n \n\n\n});\n\n    onBeforeUnmount(() => {\n      window.removeEventListener('beforeunload', savePomDataIntermedi); //quando l'utente chiude la pag o chiude il browser\n    });\n\n    \n  \n\n\n    const savePomDataIntermedi = async () => {\n  try {\n    const token = sessionStorage.getItem('token');\n    \n    // Definisci le variabili per il tempo rimanente\n    let savedTempoStudio;\n    let savedTempoPausa;\n\n    // Se siamo in fase di studio\n    if (isStudyPhase.value) {\n      savedTempoStudio =Math.floor(remainingTime.value / 60); // Calcola il tempo di studio completato\n      savedTempoPausa = newPom.value.tempoPausa; // Usa il tempo di pausa predefinito\n    } else { // Se siamo in pausa\n      savedTempoStudio = newPom.value.tempoStudio; // Usa il tempo di studio predefinito\n      savedTempoPausa = Math.floor(remainingTime.value / 60); // Calcola il tempo di pausa completato\n    }\n\n    // Crea il payload da inviare\n    const pomData = {\n      username: newPom.value.username,\n      tempoStudio: savedTempoStudio,\n      tempoPausa: savedTempoPausa,\n      ripetizioni: studyCycles.value, \n      sessionID: newPom.value.sessionID,\n      giorno: newPom.value.giorno\n    };\n\n    console.log('Salvataggio pomData:', pomData); // Aggiungi questo log per il debug\n\n    await axios.post('/api/savePomDataIntermedi', pomData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error('Errore nel salvataggio dei dati:', error);\n  }\n};\n\n\n\n\n     \n\n\n\n\n\n\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        console.log('Sessione pomodoro aggiunta:', response.data);\n\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n\n    const startStudyTimer = async (studyTime, cycles, pause) => {\n\n      if (cycles <= 0) {\n        try {\n    const token = sessionStorage.getItem('token');\n    await axios.patch('/api/pomsUpdate', {\n      sessionID: newPom.value.sessionID,\n      terminato: true\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log('Ciclo marcato come terminato nel backend.');\n  } catch (error) {\n    console.error('Errore nell\\'aggiornamento del ciclo:', error);\n  }\n        alert('Ciclo completato!');\n        return;\n      }\n\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      console.log(remainingTime.value);\n\n      isStudyPhase.value = true;\n      isPaused.value = false;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, studyTime, pause, cycles, startBreakTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n\n    const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, pauseTime, pauseTime, cycles, startStudyTimer);\n        remainingTime.value--;\n      }, 1000);\n    };\n\n    const updateTimer = (remaining, phaseTime, pauseTime, cycles, nextPhase) => {\n      if (remaining > 0) {\n        const minutes = Math.floor(remaining / 60);\n        const seconds = remaining % 60;\n        document.getElementById('timerDisplay').textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        nextPhase(phaseTime, studyCycles.value);\n      }\n    };\n\n    const skipPhase = async () => {\n      clearInterval(timerInterval);\n\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n\n      if (studyCycles.value <= 0) {\n        \n        try {\n    const token = sessionStorage.getItem('token');\n    await axios.patch('/api/pomsUpdateFinito', {\n      sessionID: newPom.value.sessionID,\n      terminato: true\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log('Ciclo marcato come terminato nel backend.');\n  } catch (error) {\n    console.error('Errore nell\\'aggiornamento del ciclo:', error);\n  }\n        \n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n\n    const endCycle = async () => {\n  clearInterval(timerInterval);\n  studyCycles.value = 0;\n  try {\n    const token = sessionStorage.getItem('token');\n    await axios.patch('/api/pomsUpdate', {\n      sessionID: newPom.value.sessionID,\n      terminato: true\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log('Ciclo marcato come terminato nel backend.');\n  } catch (error) {\n    console.error('Errore nell\\'aggiornamento del ciclo:', error);\n  }\n  statusMessage.value = 'Ciclo terminato manualmente.';\n  document.getElementById('timerDisplay').textContent = \"00:00\";\n\n \n};\n\n\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      savePomDataIntermedi();\n      isPomodoroSaved = true; \n      isPaused.value = true;\n    };\n\n    const resumeTimer = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(remainingTime.value, newPom.value.tempoStudio, newPom.value.tempoPausa, studyCycles.value, isStudyPhase.value ? startBreakTimer : startStudyTimer);\n        remainingTime.value--;\n      }, 1000); \n    };\n\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused\n    };\n  }\n};\n</script>\n\n<style scoped>\n#clock {\n  margin-top: 20px;\n}\n\n.progress-bar {\n  width: 0;\n  height: 20px;\n  background-color: green;\n  transition: width 1s linear;\n}\n\n.timer {\n  font-size: 2em;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\nform {\n  max-width: 400px;\n  margin: auto;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton.rounded-btn {\n  border-radius: 20px; \n}\n\n\n.controls {\n  margin-top: 20px;\n  margin-bottom: 40px;\n  display: flex; \n  flex-wrap: wrap; \n  justify-content: center; \n}\n\n.controls button {\n  padding: 10px;\n  margin: 10px; \n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.button-row {\n  display: flex; \n  justify-content: space-between; \n  margin-bottom: 10px; \n}\n\n.controls button {\n  flex: 1; \n  margin-right: 10px; \n}\n\n.controls button:last-child {\n  margin-right: 0;\n}\n\n#clock {\n  margin-top: 40px;\n}\n\n@media (max-width: 600px) {\n  h1 {\n    margin-top: 30px; \n  }\n\n  .controls button {\n    margin-right: 10px; \n  }\n}\n\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}