{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const newActivity = ref({\n      title: '',\n      description: '',\n      deadline: '',\n      author: localStorage.getItem('username') || 'Guest',\n      email: localStorage.getItem('email') || '',\n      completed: false,\n      type: 'singola',\n      participants: []\n    });\n    const users = ref([]); // Usa ref per rendere users reattivo\n    const message = ref('');\n    const filteredUsers = computed(() => {\n      return users.value.filter(user => user.username !== loggedInUsername);\n    });\n\n    // Definisci la funzione fetchUsers\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        users.value = response.data; // Usa users.value per assegnare i dati\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n    // Esegui fetchUsers al montaggio del componente\n    onMounted(async () => {\n      await fetchUsers();\n      if (route.query.date) {\n        newActivity.value.deadline = route.query.date;\n      }\n    });\n    const submitActivity = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.post('/api/activities', newActivity.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Reset dell'attività\n        newActivity.value = {\n          title: '',\n          description: '',\n          deadline: '',\n          author: localStorage.getItem('username') || 'Guest',\n          email: localStorage.getItem('email') || '',\n          completed: false,\n          type: 'singola',\n          participants: []\n        };\n        message.value = 'Attività aggiunta con successo!';\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale');\n        }, 2000);\n      } catch (error) {\n        message.value = 'Errore: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n    return {\n      newActivity,\n      users,\n      message,\n      submitActivity\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","axios","setup","route","router","newActivity","title","description","deadline","author","localStorage","getItem","email","completed","type","participants","users","message","filteredUsers","computed","value","filter","user","username","loggedInUsername","fetchUsers","token","sessionStorage","response","get","headers","Authorization","data","error","console","query","date","submitActivity","post","setTimeout","push"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/addActivities.vue"],"sourcesContent":["<template>\n  <div class=\"activity-form\">\n    <h1>Aggiungi una nuova attività</h1>\n\n    <form @submit.prevent=\"submitActivity\" class=\"form-container\">\n      <div class=\"form-group\">\n        <label for=\"title\">Titolo:</label>\n        <input v-model=\"newActivity.title\" id=\"title\" required class=\"form-input\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Descrizione:</label>\n        <textarea v-model=\"newActivity.description\" id=\"description\" class=\"form-textarea\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"deadline\">Scadenza:</label>\n        <input v-model=\"newActivity.deadline\" type=\"date\" id=\"deadline\" required class=\"form-input\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"type\">Tipo di Attività:</label>\n        <select v-model=\"newActivity.type\" id=\"type\" class=\"form-input\">\n          <option value=\"singola\">Singola</option>\n          <option value=\"gruppo\">Gruppo</option>\n        </select>\n      </div>\n\n      <div v-if=\"newActivity.type === 'gruppo'\" class=\"form-group\">\n        <label>Partecipanti:</label>\n        <div v-for=\"user in users\" :key=\"user.username\" class=\"form-check\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\" \n            :value=\"user.username\" \n            :id=\"user.username\" \n            v-model=\"newActivity.participants\" \n          />\n          <label class=\"form-check-label\" :for=\"user.username\">\n            {{ user.username }} \n          </label>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"submit-button\">Aggiungi Attività</button>\n    </form>\n\n    <p v-if=\"message\" class=\"status-message\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n\n    const newActivity = ref({\n      title: '',\n      description: '',\n      deadline: '',\n      author: localStorage.getItem('username') || 'Guest',\n      email: localStorage.getItem('email') || '',\n      completed: false,\n      type: 'singola',\n      participants: []\n    });\n\n    const users = ref([]); // Usa ref per rendere users reattivo\n    const message = ref('');\n\n\n    const filteredUsers = computed(() => {\n  return users.value.filter(user => user.username !== loggedInUsername);\n});\n\n\n    // Definisci la funzione fetchUsers\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        users.value = response.data; // Usa users.value per assegnare i dati\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n    // Esegui fetchUsers al montaggio del componente\n    onMounted(async () => {\n      await fetchUsers();\n\n      if (route.query.date) {\n        newActivity.value.deadline = route.query.date;\n      }\n    });\n\n    const submitActivity = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.post('/api/activities', newActivity.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Reset dell'attività\n        newActivity.value = {\n          title: '',\n          description: '',\n          deadline: '',\n          author: localStorage.getItem('username') || 'Guest',\n          email: localStorage.getItem('email') || '',\n          completed: false,\n          type: 'singola',\n          participants: []\n        };\n\n        message.value = 'Attività aggiunta con successo!';\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale');\n        }, 2000);\n      } catch (error) {\n        message.value = 'Errore: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n\n    return {\n      newActivity,\n      users,\n      message,\n      submitActivity\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Stili come nel tuo codice originale */\n.activity-form {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #15172b;\n  border-radius: 12px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n  box-sizing: border-box;\n}\n\n.activity-form:hover {\n  transform: translateY(-5px);\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  font-size: 28px;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  display: block;\n}\n\n.form-input, .form-textarea {\n  padding: 12px;\n  border: 2px solid #ced4da;\n  border-radius: 8px;\n  font-size: 16px;\n  width: 100%;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.form-input:focus, .form-textarea:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);\n  outline: none;\n}\n\n.form-textarea {\n  height: 120px;\n  resize: none;\n}\n\n.submit-button {\n  padding: 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  font-family: 'Poppins', sans-serif;\n  transition: background-color 0.3s ease, transform 0.2s;\n}\n\n.submit-button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\n.status-message {\n  text-align: center;\n  margin-top: 20px;\n  color: #28a745;\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n}\n\n.form-input, .form-textarea, .submit-button {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.form-group {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}