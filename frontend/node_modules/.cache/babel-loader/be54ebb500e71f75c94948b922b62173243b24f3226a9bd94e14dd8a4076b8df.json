{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      newNote: {\n        heading: '',\n        completed: false\n      },\n      notes: []\n    };\n  },\n  async created() {\n    this.fetchNotes();\n  },\n  methods: {\n    async fetchNotes() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato');\n          return;\n        }\n        const response = await axios.get('/api/notesGET', {\n          params: {\n            username: username\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching notes:', error);\n      }\n    },\n    async addNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato, impossibile creare la nota');\n          return;\n        }\n        this.newNote.author = username;\n        const response = await axios.post('/api/notes', this.newNote, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Nota aggiunta:', response.data);\n        this.newNote = {\n          heading: '',\n          author: username,\n          completed: false\n        };\n        this.fetchNotes();\n      } catch (error) {\n        console.error('Errore nell\\'aggiunta della nota:', error);\n      }\n    },\n    editNote(id) {\n      this.$router.push(`/edit-note/${id}`);\n    },\n    async deleteNote(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/notesRIM/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Nota eliminata');\n        this.fetchNotes();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della nota:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","newNote","heading","completed","notes","created","fetchNotes","methods","token","sessionStorage","getItem","username","localStorage","console","error","response","get","params","headers","Authorization","addNote","author","post","log","editNote","id","$router","push","deleteNote","delete"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/ToDoApp.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Aggiungi una Nota</h1>\n    <form @submit.prevent=\"addNote\">\n      <div>\n        <label for=\"heading\">Titolo:</label>\n        <input type=\"text\" v-model=\"newNote.heading\" id=\"heading\" required />\n      </div>\n      <div>\n        <label for=\"completed\">Completata:</label>\n        <input type=\"checkbox\" v-model=\"newNote.completed\" id=\"completed\" />\n      </div>\n      <button type=\"submit\">Aggiungi Nota</button>\n    </form>\n\n    <h1>Notes</h1>\n    <ul>\n      <li v-for=\"note in notes\" :key=\"note._id\">\n        <h2>{{ note.heading }}</h2>\n        <p>Author: {{ note.author }}</p>\n        <p>Status: {{ note.completed ? 'Completed' : 'Not Completed' }}</p>\n        <button @click=\"editNote(note._id)\">Modifica</button>\n        <button @click=\"deleteNote(note._id)\">Elimina</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  \nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      newNote: {\n        heading: '',\n        completed: false\n      },\n      notes: []\n    };\n  },\n  async created() {\n    this.fetchNotes();\n  },\n  methods: {\n    async fetchNotes() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username'); \n        if (!username) {\n          console.error('Username non trovato');\n          return;\n        }\n        const response = await axios.get('/api/notesGET', {\n          params: { username: username } ,\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching notes:', error);\n      }\n    },\n    async addNote() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (!username) {\n          console.error('Username non trovato, impossibile creare la nota');\n          return;\n        }\n\n        this.newNote.author = username;\n\n        const response = await axios.post('/api/notes', this.newNote, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Nota aggiunta:', response.data);\n\n        this.newNote = {\n          heading: '',\n          author: username,\n          completed: false\n        };\n\n        this.fetchNotes();\n      } catch (error) {\n        console.error('Errore nell\\'aggiunta della nota:', error);\n      }\n    },\n    editNote(id) {\n      this.$router.push(`/edit-note/${id}`);\n    },\n    async deleteNote(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/notesRIM/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Nota eliminata');\n        this.fetchNotes();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della nota:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n\ndiv {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background: linear-gradient(135deg, #f3f4f6, #e2e6ea);\n  border-radius: 10px; \n  padding: 20px;\n}\n\nform {\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  width: 100%;\n  max-width: 600px;\n  margin-bottom: 20px;\n}\n\nform div {\n  margin-bottom: 15px;\n}\n\nform label {\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\nform input[type=\"text\"],\nform input[type=\"checkbox\"] {\n  width: 100%;\n  padding: 10px;\n  border-radius: 6px;\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n}\n\nform input[type=\"checkbox\"] {\n  width: auto;\n}\n\nbutton[type=\"submit\"] {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #45a049;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  max-width: 600px;\n}\n\nli {\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nh2 {\n  margin: 0;\n  font-size: 18px;\n}\n\np {\n  margin: 5px 0;\n  font-size: 14px;\n  color: #666;\n}\n\nbutton {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  margin-left: 10px;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n\nbutton:nth-of-type(2) {\n  background-color: #dc3545;\n}\n\nbutton:nth-of-type(2):hover {\n  background-color: #c82333;\n}\n\n\n</style>\n"],"mappings":";AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACb,CAAC;MACDC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,IAAI,CAACC,QAAQ,EAAE;UACbE,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;UACrC;QACF;QACA,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,eAAe,EAAE;UAChDC,MAAM,EAAE;YAAEN,QAAQ,EAAEA;UAAS;UAC7BO,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACJ,KAAI,GAAIW,QAAQ,CAACf,IAAI;MAC5B,EAAE,OAAOc,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMM,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMZ,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,IAAI,CAACC,QAAQ,EAAE;UACbE,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;UACjE;QACF;QAEA,IAAI,CAACb,OAAO,CAACoB,MAAK,GAAIV,QAAQ;QAE9B,MAAMI,QAAO,GAAI,MAAMhB,KAAK,CAACuB,IAAI,CAAC,YAAY,EAAE,IAAI,CAACrB,OAAO,EAAE;UAC5DiB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC;QACFK,OAAO,CAACU,GAAG,CAAC,gBAAgB,EAAER,QAAQ,CAACf,IAAI,CAAC;QAE5C,IAAI,CAACC,OAAM,GAAI;UACbC,OAAO,EAAE,EAAE;UACXmB,MAAM,EAAEV,QAAQ;UAChBR,SAAS,EAAE;QACb,CAAC;QAED,IAAI,CAACG,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IACDU,QAAQA,CAACC,EAAE,EAAE;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAcF,EAAE,EAAE,CAAC;IACvC,CAAC;IACD,MAAMG,UAAUA,CAACH,EAAE,EAAE;MACnB,IAAI;QACF,MAAMjB,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMX,KAAK,CAAC8B,MAAM,CAAC,iBAAiBJ,EAAE,EAAE,EAAE;UACxCP,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC;QACFK,OAAO,CAACU,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,CAACjB,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}