{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport io from 'socket.io-client';\nexport default {\n  data() {\n    return {\n      alerts: [],\n      // Lista per memorizzare gli alert ricevuti\n      socket: null\n    };\n  },\n  created() {\n    // Connessione al server WebSocket\n    this.socket = io('http://localhost:3000', {\n      transports: ['websocket'] // Usa solo WebSocket\n    });\n    this.socket.on('connect_error', error => {\n      console.log('Errore di connessione:', error);\n    });\n\n    // Ascolta l'evento 'alert' inviato dal backend\n    this.socket.on('alert', data => {\n      console.log('Alert ricevuto:', data);\n\n      // Recupera l'username dell'utente loggato\n      const loggedInUser = localStorage.getItem('username'); // Assicurati che l'username sia salvato nel localStorage\n\n      // Se l'alert è destinato all'utente loggato, aggiungilo alla lista degli alert\n      if (data.userNome === loggedInUser) {\n        alert(`TITOLO: ${data.title}\\nOra di inizio: ${data.startTime}\\nDi utente: ${data.userNome}`);\n        this.alerts.push(data); // Aggiungi l'alert alla lista\n      }\n    });\n    this.socket.on('connect', () => {\n      console.log('Connesso al server WebSocket');\n    });\n  },\n  unmounted() {\n    // Assicurati di chiudere la connessione WebSocket quando il componente viene distrutto\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["io","data","alerts","socket","created","transports","on","error","console","log","loggedInUser","localStorage","getItem","userNome","alert","title","startTime","push","unmounted","disconnect"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Notifiche</h2>\n      <!-- Lista di alert ricevuti -->\n      <ul>\n        <li v-for=\"alert in alerts\" :key=\"alert.title\">\n          <strong>{{ alert.title }}</strong> - {{ alert.date }} at {{ alert.startTime }}\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  import io from 'socket.io-client';\n  \n  export default {\n    data() {\n      return {\n        alerts: [], // Lista per memorizzare gli alert ricevuti\n        socket: null,\n      };\n    },\n    created() {\n      // Connessione al server WebSocket\n      this.socket = io('http://localhost:3000', {\n        transports: ['websocket'], // Usa solo WebSocket\n      });\n  \n      this.socket.on('connect_error', (error) => {\n        console.log('Errore di connessione:', error);\n      });\n  \n      // Ascolta l'evento 'alert' inviato dal backend\n      this.socket.on('alert', (data) => {\n        console.log('Alert ricevuto:', data);\n  \n        // Recupera l'username dell'utente loggato\n        const loggedInUser = localStorage.getItem('username'); // Assicurati che l'username sia salvato nel localStorage\n  \n        // Se l'alert è destinato all'utente loggato, aggiungilo alla lista degli alert\n        if (data.userNome === loggedInUser) {\n          alert(`TITOLO: ${data.title}\\nOra di inizio: ${data.startTime}\\nDi utente: ${data.userNome}`);\n          this.alerts.push(data); // Aggiungi l'alert alla lista\n        }\n      });\n  \n      this.socket.on('connect', () => {\n        console.log('Connesso al server WebSocket');\n      });\n    },\n    unmounted() {\n      // Assicurati di chiudere la connessione WebSocket quando il componente viene distrutto\n      if (this.socket) {\n        this.socket.disconnect();\n      }\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Puoi aggiungere degli stili per gli alert */\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    margin-bottom: 10px;\n  }\n  strong {\n    color: #333;\n  }\n  </style>\n  "],"mappings":";AAaE,OAAOA,EAAC,MAAO,kBAAkB;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MAAE;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACD,MAAK,GAAIH,EAAE,CAAC,uBAAuB,EAAE;MACxCK,UAAU,EAAE,CAAC,WAAW,CAAC,CAAE;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACF,MAAM,CAACG,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;MACzCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACA,IAAI,CAACJ,MAAM,CAACG,EAAE,CAAC,OAAO,EAAGL,IAAI,IAAK;MAChCO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,IAAI,CAAC;;MAEpC;MACA,MAAMS,YAAW,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;;MAEvD;MACA,IAAIX,IAAI,CAACY,QAAO,KAAMH,YAAY,EAAE;QAClCI,KAAK,CAAC,WAAWb,IAAI,CAACc,KAAK,oBAAoBd,IAAI,CAACe,SAAS,gBAAgBf,IAAI,CAACY,QAAQ,EAAE,CAAC;QAC7F,IAAI,CAACX,MAAM,CAACe,IAAI,CAAChB,IAAI,CAAC,EAAE;MAC1B;IACF,CAAC,CAAC;IAEF,IAAI,CAACE,MAAM,CAACG,EAAE,CAAC,SAAS,EAAE,MAAM;MAC9BE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC;EACDS,SAASA,CAAA,EAAG;IACV;IACA,IAAI,IAAI,CAACf,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACgB,UAAU,CAAC,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}