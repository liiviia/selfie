{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      activities: []\n    };\n  },\n  methods: {\n    confirmDelete(id) {\n      if (confirm(\"Sicuro di voler eliminare questa Attivit√†?\")) {\n        this.deleteActivities(id);\n      }\n    },\n    async deleteActivities(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        console.log('Attivit√† eliminata');\n        this.fetchActivities();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attivit√†:', error);\n      }\n    },\n    async fetchActivities() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        const currentDate = new Date();\n        this.activities = response.data.filter(activity => new Date(activity.deadline) >= currentDate);\n        console.log(response.data);\n      } catch (error) {\n        console.error('Errore durante il recupero delle attivit√†:', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n    formatGroup(group) {\n      return group.join(', ');\n    }\n  },\n  mounted() {\n    this.fetchActivities();\n  }\n};","map":{"version":3,"names":["axios","data","activities","methods","confirmDelete","id","confirm","deleteActivities","token","sessionStorage","getItem","username","localStorage","delete","headers","Authorization","params","console","log","fetchActivities","error","response","get","currentDate","Date","filter","activity","deadline","formatDate","date","toLocaleDateString","formatGroup","group","join","mounted"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/ActivitiesPage.vue"],"sourcesContent":["<template>\n  <div class=\"activity-list\">\n    <h1>Lista delle Attivit√†:</h1>\n    <h2>Numero Attivit√†: {{ activities.length }}</h2>\n    \n    <ul v-if=\"activities.length > 0\" class=\"activity-items\">\n      <li v-for=\"(activity, index) in activities\" :key=\"index\" class=\"activity-item\">\n        <h3>{{ activity.title }}</h3>\n        <p>{{ activity.description }}</p>\n        <p><strong>Scadenza:</strong> {{ formatDate(activity.deadline) }}</p>\n        <p><strong>Autore:</strong> {{ activity.author }}</p>\n        <p><strong>Completata:</strong> {{ activity.completed ? 'S√¨' : 'No' }}</p>\n\n        <p v-if=\"activity.participants && activity.participants.length > 0\">\n  <strong>Attivit√† di Gruppo Creata da:</strong> {{ activity.author }} \n  <br>\n  <strong>Gruppo Composto da:</strong> {{ formatGroup(activity.participants) }}\n</p>\n\n\n        <button @click=\"confirmDelete(activity._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n      </li>\n    </ul>\n    \n    <p v-else class=\"no-activities\">Non ci sono attivit√† da visualizzare.</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      activities: []\n    };\n  },\n  methods: {\n    confirmDelete(id) {\n      if (confirm(\"Sicuro di voler eliminare questa Attivit√†?\")) {\n        this.deleteActivities(id); \n      }\n    },\n    \n    async deleteActivities(id) {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username') ;\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params:{username: username} \n        });\n        console.log('Attivit√† eliminata');\n        this.fetchActivities(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attivit√†:', error);\n      }\n    },\n    \n    async fetchActivities() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username'); \n        const response = await axios.get('/api/activitiesGET', {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username }\n        });\n        const currentDate = new Date();\n        this.activities = response.data.filter(activity => \n          new Date(activity.deadline) >= currentDate\n        );\n        console.log(response.data);\n      } catch (error) {\n        console.error('Errore durante il recupero delle attivit√†:', error);\n      }\n    },\n\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n\n    formatGroup(group) {\n      return group.join(', '); \n    }\n  },\n  mounted() {\n    this.fetchActivities();\n  }\n};\n</script>\n\n<style scoped>\n.activity-list {\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #343a40;\n}\n\n.activity-items {\n  list-style-type: none;\n  padding: 0;\n}\n\n.activity-item {\n  padding: 15px;\n  margin-bottom: 10px;\n  background-color: #ffffff;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  transition: box-shadow 0.3s;\n  position: relative;\n}\n\n.activity-item:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n.delete-btn {\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n}\n\n.delete-btn:hover {\n  color: red;\n}\n\n.no-activities {\n  text-align: center;\n  color: #6c757d;\n}\n</style>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,EAAE,EAAE;MAChB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzD,IAAI,CAACC,gBAAgB,CAACF,EAAE,CAAC;MAC3B;IACF,CAAC;IAED,MAAME,gBAAgBA,CAACF,EAAE,EAAE;MACzB,IAAI;QACF,MAAMG,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU;QAChD,MAAMV,KAAK,CAACa,MAAM,CAAC,yBAAyBR,EAAE,EAAE,EAAE;UAChDS,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC,CAAC;UACDQ,MAAM,EAAC;YAACL,QAAQ,EAAEA;UAAQ;QAC5B,CAAC,CAAC;QACFM,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjC,IAAI,CAACC,eAAe,CAAC,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAED,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMX,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMW,QAAO,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAC,oBAAoB,EAAE;UACrDR,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC,CAAC;UACDQ,MAAM,EAAE;YAAEL,QAAQ,EAAEA;UAAS;QAC/B,CAAC,CAAC;QACF,MAAMY,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAACtB,UAAS,GAAImB,QAAQ,CAACpB,IAAI,CAACwB,MAAM,CAACC,QAAO,IAC5C,IAAIF,IAAI,CAACE,QAAQ,CAACC,QAAQ,KAAKJ,WACjC,CAAC;QACDN,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACpB,IAAI,CAAC;MAC5B,EAAE,OAAOmB,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IAEDQ,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,IAAIL,IAAI,CAACK,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAC5C,CAAC;IAEDC,WAAWA,CAACC,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}