{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  data() {\n    return {\n      alerts: [],\n      // Stato per memorizzare gli alert ricevuti\n      seenAlerts: new Set() // Set per memorizzare gli alert già visualizzati\n    };\n  },\n  created() {\n    this.startPolling(); // Avvia il polling quando il componente è creato\n  },\n  methods: {\n    startPolling() {\n      setInterval(() => {\n        fetch('/api/get-latest-alert').then(response => {\n          if (!response.ok) {\n            throw new Error('Errore nella risposta');\n          }\n          return response.json(); // Converti la risposta in JSON\n        }).then(data => {\n          //console.log('Alert ricevuti:', data);\n          if (data.alerts && data.alerts.length > 0) {\n            const username = localStorage.getItem('username'); // Ottieni lo username dal localStorage\n            // Filtra gli alert per userNome (username nel localStorage)\n            const filteredAlerts = data.alerts.filter(alert => alert.userNome === username);\n            console.log('Alert ricevuti:', filteredAlerts);\n          }\n        }).catch(err => {\n          console.error('Errore nel polling:', err);\n        });\n      }, 5000); // Esegui il polling ogni 5 secondi\n    }\n  }\n};","map":{"version":3,"names":["data","alerts","seenAlerts","Set","created","startPolling","methods","setInterval","fetch","then","response","ok","Error","json","length","username","localStorage","getItem","filteredAlerts","filter","alert","userNome","console","log","catch","err","error"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n  <div>\n   \n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      alerts: [],  // Stato per memorizzare gli alert ricevuti\n      seenAlerts: new Set(),  // Set per memorizzare gli alert già visualizzati\n    };\n  },\n  created() {\n    this.startPolling();  // Avvia il polling quando il componente è creato\n  },\n  methods: {\n    startPolling() {\n      setInterval(() => {\n        fetch('/api/get-latest-alert')\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Errore nella risposta');\n            }\n            return response.json();  // Converti la risposta in JSON\n          })\n          .then(data => {\n            //console.log('Alert ricevuti:', data);\n            if (data.alerts && data.alerts.length > 0) {\n              const username = localStorage.getItem('username');  // Ottieni lo username dal localStorage\n              // Filtra gli alert per userNome (username nel localStorage)\n              const filteredAlerts = data.alerts.filter(alert => alert.userNome === username);\n              console.log('Alert ricevuti:', filteredAlerts);\n              \n            }\n          })\n          .catch(err => {\n            console.error('Errore nel polling:', err);\n          });\n      }, 5000); // Esegui il polling ogni 5 secondi\n    }\n  }\n};\n</script>\n\n<style scoped>\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  margin-bottom: 10px;\n}\nstrong {\n  color: #333;\n}\n</style>\n"],"mappings":";;;;;;;AAOA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MAAG;MACbC,UAAU,EAAE,IAAIC,GAAG,CAAC,CAAC,CAAG;IAC1B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAG;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,YAAYA,CAAA,EAAG;MACbE,WAAW,CAAC,MAAM;QAChBC,KAAK,CAAC,uBAAuB,EAC1BC,IAAI,CAACC,QAAO,IAAK;UAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;UAC1C;UACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAG;QAC3B,CAAC,EACAJ,IAAI,CAACT,IAAG,IAAK;UACZ;UACA,IAAIA,IAAI,CAACC,MAAK,IAAKD,IAAI,CAACC,MAAM,CAACa,MAAK,GAAI,CAAC,EAAE;YACzC,MAAMC,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAG;YACpD;YACA,MAAMC,cAAa,GAAIlB,IAAI,CAACC,MAAM,CAACkB,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,QAAO,KAAMN,QAAQ,CAAC;YAC/EO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,cAAc,CAAC;UAEhD;QACF,CAAC,EACAM,KAAK,CAACC,GAAE,IAAK;UACZH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;QAC3C,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}