{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport NotificationManager from '../components/NotificationManager.vue';\nexport default {\n  components: {\n    NotificationManager\n  },\n  setup() {\n    const route = useRoute();\n    const message = ref('');\n    const router = useRouter();\n    const email = localStorage.getItem('email');\n    const loggedInUsername = localStorage.getItem('username') || 'Guest';\n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      email: email,\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: loggedInUsername,\n      participants: [loggedInUsername],\n      type: 'singola',\n      altri: false\n    });\n    onMounted(() => {\n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n      fetchUsers();\n    });\n    const selectedParticipants = ref([]);\n    const users = ref([]);\n    const createEvent = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const author = newEvent.value.author;\n        const participants = newEvent.value.participants.filter(participant => participant !== author);\n        console.log(\"selected partecipans\", participants);\n        console.log(\"dati evento:\", newEvent.value);\n        // const eventDate = newEvent.value.date;\n        // const unavailableStartHM=0;\n        for (const participant of participants) {\n          const unavailableTimes = await fetchUnavailableTimes(participant);\n          for (const time of unavailableTimes) {\n            // Estrai solo la data dal campo `giorno` (senza orari)\n            const unavailableDate = new Date(time.giorno);\n            const formattedDate = unavailableDate.toISOString().split('T')[0];\n            console.log(\"Data di indisponibilità:\", formattedDate, \"per l'utente:\", participant);\n            const unavailableStart = new Date(unavailableDate);\n            unavailableStart.setHours(time.startHour, time.startMinute, 0, 0);\n\n            // Crea un oggetto Date per rappresentare la fine dell'indisponibilità con data e orario separati\n            const unavailableEnd = new Date(unavailableDate);\n            unavailableEnd.setHours(time.endHour, time.endMinute, 0, 0);\n            const startHour = unavailableStart.getHours();\n            const startMinute = unavailableStart.getMinutes();\n            const endHour = unavailableEnd.getHours();\n            const endMinute = unavailableEnd.getMinutes();\n            console.log(`Orario di inizio indisponibilità: ${startHour}:${startMinute.toString().padStart(2, '0')} per l'utente: ${participant}`);\n            console.log(`Orario di fine indisponibilità: ${endHour}:${endMinute.toString().padStart(2, '0')} per l'utente: ${participant}`);\n            console.log(\"data evento:\", newEvent.value.date);\n            console.log(\"ora evento:\", newEvent.value.startTime);\n            console.log(\"repeat daily\", time.repeatDaily, \"per utente\", participant);\n            if (time.repeatDaily) {}\n\n            /*  if (eventStart < unavailableEnd && eventStart > unavailableStart) {\n                      message.value = `Il partecipante ${partecipant} non è disponibile per l'orario selezionato.`;\n                      return; // Interrompe la funzione, non si crea l'evento\n                  }\n            */\n          }\n        }\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n          email: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest',\n          participants: [],\n          type: 'singola',\n          altri: false\n        };\n        console.log('Evento creato con successo:', response.data);\n        message.value = 'Evento creato con successo!';\n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale');\n        }, 3000);\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n    const fetchUnavailableTimes = async username => {\n      const token = sessionStorage.getItem('token');\n      try {\n        const response = await axios.get('/api/nonDisponibileGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.log(\"Errore recupero non disponibile user\", error);\n        return [];\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        users.value = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n    return {\n      newEvent,\n      selectedParticipants,\n      users,\n      message,\n      createEvent,\n      loggedInUsername\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","axios","NotificationManager","components","setup","route","message","router","email","localStorage","getItem","loggedInUsername","newEvent","title","description","date","startTime","duration","location","isRecurring","frequency","numberOfOccurrences","notificationMechanism","notificationTime","repeatNotification","author","participants","type","altri","query","value","fetchUsers","selectedParticipants","users","createEvent","token","sessionStorage","filter","participant","console","log","unavailableTimes","fetchUnavailableTimes","time","unavailableDate","Date","giorno","formattedDate","toISOString","split","unavailableStart","setHours","startHour","startMinute","unavailableEnd","endHour","endMinute","getHours","getMinutes","toString","padStart","repeatDaily","response","post","headers","Authorization","data","setTimeout","push","error","username","get","params"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/addEvent.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h2>Crea un Nuovo Evento</h2>\n    <form @submit.prevent=\"createEvent\">\n      <div>\n        <label for=\"title\">Titolo:</label>\n        <input type=\"text\" v-model=\"newEvent.title\" required />\n      </div>\n      <div>\n        <label for=\"description\">Descrizione:</label>\n        <textarea v-model=\"newEvent.description\"></textarea>\n      </div>\n      <div>\n        <label for=\"date\">Data:</label>\n        <input type=\"date\" v-model=\"newEvent.date\" required />\n      </div>\n      <div>\n        <label for=\"startTime\">Ora di Inizio:</label>\n        <input type=\"time\" v-model=\"newEvent.startTime\" required />\n      </div>\n      <div>\n        <label for=\"duration\">Durata (minuti):</label>\n        <input type=\"number\" v-model=\"newEvent.duration\" required />\n      </div>\n      <div>\n        <label for=\"location\">Luogo:</label>\n        <input type=\"text\" v-model=\"newEvent.location\" />\n      </div>\n      <div>\n        <label>È Ripetibile?</label>\n        <input type=\"checkbox\" v-model=\"newEvent.isRecurring\" />\n      </div>\n      <div v-if=\"newEvent.isRecurring\">\n        <label for=\"frequency\">Frequenza:</label>\n        <select v-model=\"newEvent.frequency\">\n          <option value=\"one-time\">Una tantum</option>\n          <option value=\"daily\">Giornaliero</option>\n          <option value=\"weekly\">Settimanale</option>\n          <option value=\"monthly\">Mensile</option>\n        </select>\n        <div> \n          <label for=\"numberOfOccurrences\">Numero di Ripetizioni:</label>\n          <input type=\"number\" v-model=\"newEvent.numberOfOccurrences\" placeholder=\"Lascia vuoto per ripetere indefinitamente\" />\n        </div>\n      </div>\n      <div>\n        <label>Meccanismo di Notifica:</label>\n        <div>\n          <input type=\"checkbox\" value=\"email\" v-model=\"newEvent.notificationMechanism\" /> Email\n          <input type=\"checkbox\" value=\"alert\" v-model=\"newEvent.notificationMechanism\" /> Alert\n        </div>\n        <div>\n          <label for=\"notificationTime\">Tempo di Notifica (minuti prima):</label>\n          <input type=\"number\" v-model=\"newEvent.notificationTime\" />\n        </div>\n        <div>\n          <label for=\"repeatNotification\">Ripeti Notifica (minuti):</label>\n          <input type=\"number\" v-model=\"newEvent.repeatNotification\" />\n        </div>\n      </div>\n      <div>\n        <label for=\"author\">Autore:</label>\n        <input type=\"text\" v-model=\"newEvent.author\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"type\">Tipo di Evento:</label>\n        <select v-model=\"newEvent.type\" id=\"type\" class=\"form-input\">\n          <option value=\"singola\">Singola</option>\n          <option value=\"gruppo\">Gruppo</option>\n        </select>\n      </div>\n      \n      <div v-if=\"newEvent.type === 'gruppo'\">\n        <label>Partecipanti:</label>\n        <div v-for=\"user in users\" :key=\"user.username\" class=\"form-check\">\n          <input \n            class=\"form-check-input\" \n            type=\"checkbox\" \n            :value=\"user.username\" \n            :id=\"user.username\" \n            v-model=\"newEvent.participants\" \n            v-if=\"user.username !== loggedInUsername\"  \n          />\n          <label class=\"form-check-label\" :for=\"user.username\">\n            {{ user.username }} \n          </label>\n        </div>\n      </div>\n\n      <button type=\"submit\">Crea Evento</button>\n    </form>\n    <NotificationManager ref=\"notificationManager\" />\n    <p v-if=\"message\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport NotificationManager from '../components/NotificationManager.vue';\n\nexport default {\n  components:{\n    NotificationManager\n  },\n  \n  setup() {\n    const route = useRoute();\n    const message = ref(''); \n    const router = useRouter();\n    const email = localStorage.getItem('email');\n    const loggedInUsername = localStorage.getItem('username') || 'Guest'; \n    const newEvent = ref({\n      title: '',\n      description: '',\n      date: '',\n      startTime: '',\n      duration: '',\n      location: '',\n      isRecurring: false,\n      frequency: 'one-time',\n      email: email,\n      numberOfOccurrences: null,\n      notificationMechanism: [],\n      notificationTime: 0,\n      repeatNotification: 0,\n      author: loggedInUsername,\n      participants: [loggedInUsername] , \n      type: 'singola',\n      altri: false,\n    });\n\n    onMounted(() => {\n      if (route.query.date) {\n        newEvent.value.date = route.query.date;\n      }\n      fetchUsers(); \n    });\n\n    const selectedParticipants = ref([]);\n    const users = ref([]);\n    \n    const createEvent = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const author = newEvent.value.author;\n        const participants = newEvent.value.participants.filter(participant => participant !== author);\n        \n        console.log(\"selected partecipans\", participants);\n        console.log(\"dati evento:\", newEvent.value);\n       // const eventDate = newEvent.value.date;\n       // const unavailableStartHM=0;\n        for (const participant of participants) {\n    const unavailableTimes = await fetchUnavailableTimes(participant);\n\n    for (const time of unavailableTimes) {\n        // Estrai solo la data dal campo `giorno` (senza orari)\n        const unavailableDate = new Date(time.giorno);\n        const formattedDate = unavailableDate.toISOString().split('T')[0];\n        console.log(\"Data di indisponibilità:\", formattedDate, \"per l'utente:\", participant);\n\n\n\n\n\n        const unavailableStart = new Date(unavailableDate);\n        unavailableStart.setHours(time.startHour, time.startMinute, 0, 0);\n\n        // Crea un oggetto Date per rappresentare la fine dell'indisponibilità con data e orario separati\n        const unavailableEnd = new Date(unavailableDate);\n        unavailableEnd.setHours(time.endHour, time.endMinute, 0, 0);\n\n\n        const startHour = unavailableStart.getHours();\n        const startMinute = unavailableStart.getMinutes();\n        const endHour = unavailableEnd.getHours();\n        const endMinute = unavailableEnd.getMinutes();\n\n        console.log(`Orario di inizio indisponibilità: ${startHour}:${startMinute.toString().padStart(2, '0')} per l'utente: ${participant}`);\n        console.log(`Orario di fine indisponibilità: ${endHour}:${endMinute.toString().padStart(2, '0')} per l'utente: ${participant}`);\n\n\n        console.log(\"data evento:\", newEvent.value.date);\n        console.log(\"ora evento:\", newEvent.value.startTime);\n\n        console.log(\"repeat daily\" ,time.repeatDaily, \"per utente\", participant);\n\n        if (time.repeatDaily)  {\n\n\n\n        }\n\n\n          /*  if (eventStart < unavailableEnd && eventStart > unavailableStart) {\n                    message.value = `Il partecipante ${partecipant} non è disponibile per l'orario selezionato.`;\n                    return; // Interrompe la funzione, non si crea l'evento\n                }\n\n*/\n\n\n          }\n        }\n\n        \n\n     \n    \n  \n\n        const response = await axios.post('/api/events', newEvent.value, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        \n        \n        newEvent.value = {\n          title: '',\n          description: '',\n          date: '',\n          startTime: '',\n          duration: '',\n          location: '',\n          isRecurring: false,\n          frequency: 'one-time',\n          email: '',\n          numberOfOccurrences: null,\n          notificationMechanism: [],\n          notificationTime: 0,\n          repeatNotification: 0,\n          author: localStorage.getItem('username') || 'Guest',\n          participants: [], \n          type:'singola',\n          altri: false,\n        };\n\n        console.log('Evento creato con successo:', response.data);\n        message.value = 'Evento creato con successo!';\n        \n        setTimeout(() => {\n          message.value = '';\n          router.push('/homePrincipale');\n        }, 3000);\n      } catch (error) {\n        message.value = 'Errore durante la creazione dell\\'evento: ' + error.message;\n        console.error('Errore:', error);\n      }\n    };\n\n   const fetchUnavailableTimes = async (username) => {\n\n    const token = sessionStorage.getItem('token');\n    try {\n        const response = await axios.get('/api/nonDisponibileGET', {\n            headers: {\n                Authorization: `Bearer ${token}` \n            },\n            params: { username: username },\n        });\n        return response.data;\n    } catch (error) {\n        console.log(\"Errore recupero non disponibile user\", error);\n        return[];\n    }\n};\n\n    \n\n\n\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        users.value = response.data; \n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n    return {\n      newEvent,\n      selectedParticipants,\n      users,\n      message,\n      createEvent,\n      loggedInUsername\n    };\n  },\n\n};\n</script>\n\n<style scoped>\n.event-form {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #15172b;\n  border-radius: 12px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1); \n  transition: transform 0.3s ease; \n  box-sizing: border-box;\n}\n\n.event-form:hover {\n  transform: translateY(-5px); \n}\n\n.event-form h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  font-size: 28px;\n}\n\n.event-form div {\n  margin-bottom: 20px;\n}\n\n.event-form label {\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #acb0b4;\n  font-family: 'Poppins', sans-serif;\n  display: block;\n}\n\n.event-form input[type=\"text\"],\n.event-form input[type=\"date\"],\n.event-form input[type=\"time\"],\n.event-form input[type=\"number\"],\n.event-form textarea,\n.event-form select {\n  padding: 12px;\n  border: 2px solid #ced4da;\n  border-radius: 8px;\n  font-size: 16px;\n  width: 100%;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.event-form input:focus,\n.event-form textarea:focus,\n.event-form select:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 8px rgba(0, 123, 255, 0.25); \n  outline: none;\n}\n\n.event-form textarea {\n  height: 120px;\n  resize: none;\n}\n\n.event-form button {\n  padding: 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  font-family: 'Poppins', sans-serif;\n  transition: background-color 0.3s ease, transform 0.2s;\n}\n\n.event-form button:hover {\n  background-color: #0056b3;\n  transform: translateY(-2px);\n}\n\n.event-form p {\n  text-align: center;\n  margin-top: 20px;\n  color: #28a745;\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n}\n\n.event-form input,\n.event-form textarea,\n.event-form button {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \n}\n\n.event-form div {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.back-home-link {\n  color: #0016db;\n  font-family: 'Poppins', sans-serif;\n  text-decoration: none;\n  margin-bottom: 20px;\n  transition: color 0.3s ease;\n  text-align: left;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}