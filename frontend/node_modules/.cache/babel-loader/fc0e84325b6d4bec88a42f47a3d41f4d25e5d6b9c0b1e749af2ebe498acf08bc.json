{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Modifica Nota\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.updateNote && $options.updateNote(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"heading\"\n  }, \"Titolo:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.note.heading = $event),\n    id: \"heading\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.note.heading]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"completed\"\n  }, \"Completata:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.note.completed = $event),\n    id: \"completed\"\n  }, null, 512), [[_vModelCheckbox, $data.note.completed]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Aggiorna Nota\", -1))], 32)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","updateNote","for","type","$event","$data","note","heading","id","required","completed"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/editNote.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Modifica Nota</h1>\n      <form @submit.prevent=\"updateNote\">\n        <div>\n          <label for=\"heading\">Titolo:</label>\n          <input type=\"text\" v-model=\"note.heading\" id=\"heading\" required />\n        </div>\n        <div>\n          <label for=\"completed\">Completata:</label>\n          <input type=\"checkbox\" v-model=\"note.completed\" id=\"completed\" />\n        </div>\n        <button type=\"submit\">Aggiorna Nota</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        note: {\n          heading: '',\n          completed: false\n        }\n      };\n    },\n    async created() {\n      await this.fetchNote();\n    },\n    methods: {\n      async fetchNote() {\n        try {\n          const token = sessionStorage.getItem('token');\n          const noteId = this.$route.params.id;\n          const response = await axios.get(`/api/nota/${noteId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.note = response.data;\n          console.log('Nota recuperata:', this.note); \n        } catch (error) {\n          console.error('Errore nel recupero della nota:', error);\n        }\n      },\n      async updateNote() {\n        try {\n          const token = sessionStorage.getItem('token');\n          const noteId = this.$route.params.id;\n          const response = await axios.put(`/api/notes/${noteId}`, this.note, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Nota aggiornata:', response.data);\n          this.$router.push('/todo');\n        } catch (error) {\n          console.error('Errore nell\\'aggiornamento della nota:', error);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\ndiv {\n  background: linear-gradient(135deg, #f8f9fa, #e9ecef);\n  border-radius: 10px;\n  padding: 20px;\n  max-width: 500px;\n  margin: 40px auto;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n  text-align: center;\n  color: #333;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n\ninput[type=\"text\"],\ninput[type=\"checkbox\"] {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px 0;\n  font-size: 16px;\n}\n\nbutton {\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  align-self: center;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";;uBACIA,mBAAA,CAaM,c,0BAZJC,mBAAA,CAAsB,YAAlB,eAAa,QACjBA,mBAAA,CAUO;IAVAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAoC;IAA7BO,GAAG,EAAC;EAAS,GAAC,SAAO,Q,gBAC5BP,mBAAA,CAAkE;IAA3DQ,IAAI,EAAC,MAAM;IAN5B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMsCC,KAAA,CAAAC,IAAI,CAACC,OAAO,GAAAH,MAAA;IAAEI,EAAE,EAAC,SAAS;IAACC,QAAQ,EAAR;gCAA3BJ,KAAA,CAAAC,IAAI,CAACC,OAAO,E,KAE1CZ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA0C;IAAnCO,GAAG,EAAC;EAAW,GAAC,aAAW,Q,gBAClCP,mBAAA,CAAiE;IAA1DQ,IAAI,EAAC,UAAU;IAVhC,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAU0CC,KAAA,CAAAC,IAAI,CAACI,SAAS,GAAAN,MAAA;IAAEI,EAAE,EAAC;oCAAnBH,KAAA,CAAAC,IAAI,CAACI,SAAS,E,+BAEhDf,mBAAA,CAA4C;IAApCQ,IAAI,EAAC;EAAQ,GAAC,eAAa,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}