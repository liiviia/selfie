{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      events: []\n    };\n  },\n  methods: {\n    async fetchEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/eventsGET', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author: username\n          }\n        });\n        this.events = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      return d.toLocaleDateString();\n    },\n    formatRepeat(event) {\n      if (event.repeatFrequency) {\n        let frequencyDetails = `${event.repeatFrequency}`;\n        if (event.daysOfWeek && event.daysOfWeek.length) {\n          frequencyDetails += ` ogni ${event.daysOfWeek.join(', ')}`;\n        }\n        if (event.dayOfMonth) {\n          frequencyDetails += ` ogni ${event.dayOfMonth}° giorno del mese`;\n        }\n        if (event.repeatUntil) {\n          frequencyDetails += ` fino al ${this.formatDate(event.repeatUntil)}`;\n        }\n        return frequencyDetails;\n      }\n      return 'Nessuna ripetizione';\n    }\n  },\n  mounted() {\n    this.fetchEvents();\n  }\n};","map":{"version":3,"names":["axios","data","events","methods","fetchEvents","token","sessionStorage","getItem","username","localStorage","response","get","headers","Authorization","params","author","error","console","formatDate","date","d","Date","toLocaleDateString","formatRepeat","event","repeatFrequency","frequencyDetails","daysOfWeek","length","join","dayOfMonth","repeatUntil","mounted"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventsE.vue"],"sourcesContent":["<template>\n  <div class=\"event-list\">\n    <h1>Lista Eventi</h1>\n    <ul>\n      <li v-for=\"event in events\" :key=\"event._id\" class=\"event-item\">\n        <h2>{{ event.title }}</h2>\n        <p>{{ event.description }}</p>\n        <p><strong>Data:</strong> {{ formatDate(event.date) }}</p>\n        <p><strong>Orario:</strong> {{ event.time }}</p>\n        <p><strong>Durata:</strong> {{ event.duration }} minuti</p>\n        <p><strong>Luogo:</strong> {{ event.location }}</p>\n        <p><strong>Ripetizione:</strong> {{ formatRepeat(event) }}</p>\n        <p><strong>Autore:</strong> {{ event.author }}</p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      events: []\n    };\n  },\n  methods: {\n    async fetchEvents() {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username'); \n        const response = await axios.get('/api/eventsGET', {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { author: username }\n        });\n        this.events = response.data;\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      return d.toLocaleDateString();\n    },\n    formatRepeat(event) {\n      if (event.repeatFrequency) {\n        let frequencyDetails = `${event.repeatFrequency}`;\n        if (event.daysOfWeek && event.daysOfWeek.length) {\n          frequencyDetails += ` ogni ${event.daysOfWeek.join(', ')}`;\n        }\n        if (event.dayOfMonth) {\n          frequencyDetails += ` ogni ${event.dayOfMonth}° giorno del mese`;\n        }\n        if (event.repeatUntil) {\n          frequencyDetails += ` fino al ${this.formatDate(event.repeatUntil)}`;\n        }\n        return frequencyDetails;\n      }\n      return 'Nessuna ripetizione';\n    }\n  },\n  mounted() {\n    this.fetchEvents();\n  }\n};\n</script>\n\n<style scoped>\n.event-list {\n  max-width: 800px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #343a40;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.event-item {\n  margin-bottom: 20px;\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 10px;\n}\n\n.event-item h2 {\n  color: #007bff;\n  margin: 0;\n}\n\n.event-item p {\n  margin: 5px 0;\n}\n</style>\n"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;QAC7C,MAAMC,QAAO,GAAIC,YAAY,CAACF,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMG,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,gBAAgB,EAAE;UACjDC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK;UAChC,CAAC;UACDS,MAAM,EAAE;YAAEC,MAAM,EAAEP;UAAS;QAC7B,CAAC,CAAC;QACF,IAAI,CAACN,MAAK,GAAIQ,QAAQ,CAACT,IAAI;MAC7B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IACDE,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,CAAA,GAAI,IAAIC,IAAI,CAACF,IAAI,CAAC;MACxB,OAAOC,CAAC,CAACE,kBAAkB,CAAC,CAAC;IAC/B,CAAC;IACDC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAIA,KAAK,CAACC,eAAe,EAAE;QACzB,IAAIC,gBAAe,GAAI,GAAGF,KAAK,CAACC,eAAe,EAAE;QACjD,IAAID,KAAK,CAACG,UAAS,IAAKH,KAAK,CAACG,UAAU,CAACC,MAAM,EAAE;UAC/CF,gBAAe,IAAK,SAASF,KAAK,CAACG,UAAU,CAACE,IAAI,CAAC,IAAI,CAAC,EAAE;QAC5D;QACA,IAAIL,KAAK,CAACM,UAAU,EAAE;UACpBJ,gBAAe,IAAK,SAASF,KAAK,CAACM,UAAU,mBAAmB;QAClE;QACA,IAAIN,KAAK,CAACO,WAAW,EAAE;UACrBL,gBAAe,IAAK,YAAY,IAAI,CAACR,UAAU,CAACM,KAAK,CAACO,WAAW,CAAC,EAAE;QACtE;QACA,OAAOL,gBAAgB;MACzB;MACA,OAAO,qBAAqB;IAC9B;EACF,CAAC;EACDM,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC5B,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}