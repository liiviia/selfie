{"ast":null,"code":"export default {\n  data() {\n    return {\n      alerts: [] // Stato per memorizzare gli alert ricevuti\n    };\n  },\n  created() {\n    this.startPolling(); // Avvia il polling quando il componente è creato\n  },\n  methods: {\n    startPolling() {\n      setInterval(() => {\n        fetch('/api/alerts/get-latest-alert').then(response => {\n          if (!response.ok) {\n            throw new Error('Errore nella risposta');\n          }\n          return response.json(); // Converti la risposta in JSON\n        }).then(data => {\n          console.log('Alert ricevuti:', data);\n          if (data.alerts && data.alerts.length > 0) {\n            this.alerts = data.alerts; // Aggiorna gli alert nel data\n          }\n        }).catch(err => {\n          console.error('Errore nel polling:', err);\n        });\n      }, 5000); // Esegui il polling ogni 5 secondi\n    }\n  }\n};","map":{"version":3,"names":["data","alerts","created","startPolling","methods","setInterval","fetch","then","response","ok","Error","json","console","log","length","catch","err","error"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/components/NotificationComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Notifiche</h2>\n    <ul>\n      <li v-for=\"alert in alerts\" :key=\"alert.title\">\n        <strong>{{ alert.title }}</strong> - {{ alert.date }} at {{ alert.startTime }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      alerts: [],  // Stato per memorizzare gli alert ricevuti\n    };\n  },\n  created() {\n    this.startPolling();  // Avvia il polling quando il componente è creato\n  },\n  methods: {\n    startPolling() {\n      setInterval(() => {\n        fetch('/api/alerts/get-latest-alert')\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Errore nella risposta');\n            }\n            return response.json();  // Converti la risposta in JSON\n          })\n          .then(data => {\n            console.log('Alert ricevuti:', data);\n            if (data.alerts && data.alerts.length > 0) {\n              this.alerts = data.alerts;  // Aggiorna gli alert nel data\n            }\n          })\n          .catch(err => {\n            console.error('Errore nel polling:', err);\n          });\n      }, 5000); // Esegui il polling ogni 5 secondi\n    }\n  }\n};\n</script>\n\n<style scoped>\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  margin-bottom: 10px;\n}\nstrong {\n  color: #333;\n}\n</style>\n"],"mappings":"AAYA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE,CAAG;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAG;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,YAAYA,CAAA,EAAG;MACbE,WAAW,CAAC,MAAM;QAChBC,KAAK,CAAC,8BAA8B,EACjCC,IAAI,CAACC,QAAO,IAAK;UAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;UAC1C;UACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAG;QAC3B,CAAC,EACAJ,IAAI,CAACP,IAAG,IAAK;UACZY,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEb,IAAI,CAAC;UACpC,IAAIA,IAAI,CAACC,MAAK,IAAKD,IAAI,CAACC,MAAM,CAACa,MAAK,GAAI,CAAC,EAAE;YACzC,IAAI,CAACb,MAAK,GAAID,IAAI,CAACC,MAAM,EAAG;UAC9B;QACF,CAAC,EACAc,KAAK,CAACC,GAAE,IAAK;UACZJ,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;QAC3C,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}