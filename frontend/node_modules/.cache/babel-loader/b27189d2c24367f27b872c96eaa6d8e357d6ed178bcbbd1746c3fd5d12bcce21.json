{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]);\n    const queryDate = computed(() => route.query.date);\n    const navigateToAddEvent = () => {\n      router.push({\n        path: '/addEvent',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddActivity = () => {\n      router.push({\n        path: '/addActivities',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const navigateToAddPomodoro = () => {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: queryDate.value\n        }\n      });\n    };\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n        const response = await axios.get('/api/events/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username,\n            date\n          }\n        });\n        console.log('Pomodori recuperati:', pomodoroResponse.data);\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attività e dei pomodori:', error);\n      }\n    };\n    const formatDate = dateString => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date) ? date.toLocaleDateString('it-IT', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }) : 'Data non valida';\n    };\n    onMounted(fetchEvents);\n    return {\n      events,\n      activities,\n      pomodoros,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRoute","useRouter","axios","setup","route","router","events","activities","pomodoros","queryDate","query","date","navigateToAddEvent","push","path","value","navigateToAddActivity","navigateToAddPomodoro","fetchEvents","author","username","token","sessionStorage","getItem","console","log","response","get","headers","Authorization","params","Array","isArray","data","activityResponse","pomodoroResponse","error","formatDate","dateString","Date","isNaN","toLocaleDateString","year","month","day"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Eventi, Attività e Pomodori per {{ formatDate(queryDate) }}</h2>\n    <div class=\"button-container\">\n      <button @click=\"navigateToAddEvent\">Aggiungi Evento</button>\n      <button @click=\"navigateToAddActivity\">Aggiungi Attività</button>\n      <button @click=\"navigateToAddPomodoro\">Aggiungi Pomodoro</button>\n    </div>\n    \n    <div class=\"content-container\">\n      <!-- Sezione Attività -->\n      <div class=\"section activities-section\">\n        <h3>LE TUE ATTIVITÀ:</h3>\n        <div v-if=\"activities.length > 0\">\n          <div v-for=\"activity in activities\" :key=\"activity._id\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ activity.title }}</h4>\n            <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <p v-if=\"activity.type === 'gruppo'\" style=\"color: #FF6347;\">\n              Attività di gruppo creata da: {{ activity.author }}<br>\n              Gruppo composto da: {{ activity.participants.join(', ') }}\n            </p>\n          </div>\n        </div>\n        <p v-else>Nessuna attività per questa data.</p>\n      </div>\n      \n      <!-- Sezione Eventi -->\n      <div class=\"section events-section\">\n        <h3>I TUOI EVENTI:</h3>\n        <div v-if=\"events.length > 0\">\n          <div v-for=\"event in events\" :key=\"event._id\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ event.title }}</h4>\n            <p>Data: {{ formatDate(event.date) }}</p>\n            <p>Descrizione: {{ event.description }}</p>\n          </div>\n        </div>\n        <p v-else>Nessun evento per questa data.</p>\n      </div>\n      \n      <!-- Sezione Pomodori -->\n      <div class=\"section pomodoros-section\">\n        <h3>I TUOI POMODORI:</h3>\n        <div v-if=\"pomodoros.length > 0\">\n          <div v-for=\"pomodoro in pomodoros\" :key=\"pomodoro._id\">\n            <h4>Pomodoro Sessione</h4>\n            <p>Data: {{ formatDate(pomodoro.giorno) }}</p>\n            <p>Tempo di studio: {{ pomodoro.tempoStudio }} minuti</p>\n            <p>Tempo di pausa: {{ pomodoro.tempoPausa }} minuti</p>\n            <p>Ripetizioni: {{ pomodoro.ripetizioni }}</p>\n          </div>\n        </div>\n        <p v-else>Nessun pomodoro per questa data.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]); \n    const queryDate = computed(() => route.query.date);\n\n    const navigateToAddEvent = () => {\n      router.push({ path: '/addEvent', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddActivity = () => {\n      router.push({ path: '/addActivities', query: { date: queryDate.value } });\n    };\n\n    const navigateToAddPomodoro = () => {\n      router.push({ path: '/pomodoroTempo', query: { date: queryDate.value } });\n    };\n\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username, date }\n        });\n\n        console.log('Pomodori recuperati:', pomodoroResponse.data);\n\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attività e dei pomodori:', error);\n      }\n    };\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n    onMounted(fetchEvents);\n\n    return {\n      events,\n      activities,\n      pomodoros, \n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro\n    };\n  }\n};\n</script>\n\n<style scoped>\n.button-container {\n  margin-bottom: 20px;\n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n  padding: 20px;\n}\n\n.activities-section {\n  flex: 1.2; /* Rendi la sezione sinistra più grande */\n  background-color: #f9f9f9;\n  height: 20%;\n  width: 20%;\n}\n\n.events-section {\n  flex: 1.5; /* Rendi la sezione centrale più grande */\n  background-color: #e6f7ff;\n}\n\n.pomodoros-section {\n  flex: 1.2; /* Rendi la sezione destra più grande */\n  margin-left: 10px; /* Spingi leggermente a destra */\n  background-color: #ffe6e6;\n}\n\n.section {\n  margin-right: 100px;\n  min-width: 500px;\n  flex: 1.5; \n  padding: 25px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}