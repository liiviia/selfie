{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect } from \"vue\";\nconst _hoisted_1 = {\n  class: \"event-form\"\n};\nconst _hoisted_2 = {\n  id: \"studio-pausa\"\n};\nconst _hoisted_3 = {\n  class: \"controls\"\n};\nconst _hoisted_4 = {\n  class: \"button-row\"\n};\nconst _hoisted_5 = {\n  class: \"button-row\"\n};\nconst _hoisted_6 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_7 = {\n  class: \"modal-content\",\n  style: {\n    \"background\": \"linear-gradient(to bottom, #f4a460, #eee8aa)\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"modal-body\"\n};\nconst _hoisted_9 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_10 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_11 = {\n  class: \"modal-content\",\n  style: {\n    \"background\": \"linear-gradient(to bottom, #f4a460, #eee8aa)\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = [\"value\"];\nconst _hoisted_14 = {\n  class: \"modal-body\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  class: \"modal-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_cache[23] || (_cache[23] = _createElementVNode(\"h1\", null, \"Sessione Pomodoro\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $setup.aggiungiPomodoro && $setup.aggiungiPomodoro(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    for: \"tempoStudio\"\n  }, \"Tempo di studio (minuti):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newPom.tempoStudio = $event),\n    min: \"1\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPom.tempoStudio]])]), _createElementVNode(\"div\", null, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    for: \"tempoPausa\"\n  }, \"Tempo di pausa (minuti):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newPom.tempoPausa = $event),\n    min: \"1\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPom.tempoPausa]])]), _createElementVNode(\"div\", null, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    for: \"ripetizioni\"\n  }, \"Numero di ripetizioni:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newPom.ripetizioni = $event),\n    min: \"1\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPom.ripetizioni]])]), _createElementVNode(\"div\", null, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n    for: \"giorno\"\n  }, \"Giorno della sessione:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.newPom.giorno = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPom.giorno]])]), _cache[22] || (_cache[22] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"rounded-btn\"\n  }, \"Aggiungi Sessione\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", _hoisted_2, _toDisplayString($setup.statusMessage), 1 /* TEXT */), _cache[24] || (_cache[24] = _createElementVNode(\"div\", {\n    class: \"timer\",\n    id: \"timerDisplay\"\n  }, \"00:00\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.skipPhase && $setup.skipPhase(...args))\n  }, \"Salta alla fase successiva\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.restartCycle && $setup.restartCycle(...args))\n  }, \"Ricomincia ciclo\")]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $setup.endCycle && $setup.endCycle(...args))\n  }, \"Termina ciclo\"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $setup.pauseTimer && $setup.pauseTimer(...args))\n  }, \"Stoppa timer\"), $setup.isPaused ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[9] || (_cache[9] = (...args) => $setup.resumeTimer && $setup.resumeTimer(...args))\n  }, \"Riprendi timer\")) : _createCommentVNode(\"v-if\", true)])])]), _createCommentVNode(\"MODAL VEDI NOTIFIHCE\"), _createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $setup.openNotificationModal && $setup.openNotificationModal(...args)),\n    style: {\n      \"background\": \"#f4a460\",\n      \"margin-bottom\": \"50px\"\n    }\n  }, \" Vedi Notifiche \"), $setup.isNotificationModalOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal\",\n    onClick: _cache[12] || (_cache[12] = _withModifiers((...args) => $setup.closeNotificationModal && $setup.closeNotificationModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[32] || (_cache[32] = _createElementVNode(\"div\", {\n    class: \"modal-header\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"modal-title fs-5\"\n  }, \"Notifiche\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_cache[31] || (_cache[31] = _createElementVNode(\"p\", null, \"Qui puoi visualizzare tutte le notifiche ricevute.\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.notificationsPom, (notifica, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"p\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"strong\", null, \"INVITATO DA:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(notifica.username), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[26] || (_cache[26] = _createElementVNode(\"strong\", null, \"TEMPO STUDIO:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(notifica.tempoStudio) + \" minuti\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"strong\", null, \"TEMPO PAUSA:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(notifica.tempoPausa) + \" minuti\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"strong\", null, \"RIPETIZIONI:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(notifica.ripetizioni), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[29] || (_cache[29] = _createElementVNode(\"strong\", null, \"GIORNO:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(new Date(notifica.giorno).toLocaleDateString()), 1 /* TEXT */)]), _cache[30] || (_cache[30] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _createCommentVNode(\" Linea di separazione tra le notifiche \")]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    onClick: _cache[11] || (_cache[11] = (...args) => $setup.closeNotificationModal && $setup.closeNotificationModal(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \"Chiudi\")])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"MODAL INVIA NOTIFICA \"), _createElementVNode(\"button\", {\n    class: \"fixed-button\",\n    onClick: _cache[13] || (_cache[13] = (...args) => $setup.openModal && $setup.openModal(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, _cache[33] || (_cache[33] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paper-plane\"\n  }, null, -1 /* HOISTED */)])), $setup.isModalOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"modal\",\n    onClick: _cache[17] || (_cache[17] = _withModifiers((...args) => $setup.closeModal && $setup.closeModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[37] || (_cache[37] = _createElementVNode(\"div\", {\n    class: \"modal-header\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"modal-title\"\n  }, \"invita un amico a studiare con le tue impostazioni:\")], -1 /* HOISTED */)), _createElementVNode(\"form\", null, [_createElementVNode(\"div\", _hoisted_12, [_cache[34] || (_cache[34] = _createElementVNode(\"label\", {\n    for: \"recipient-name\"\n  }, \"Destinatario:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"userSelect\",\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.selectedUsers = $event),\n    multiple: \"\",\n    class: \"form-control\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.users, user => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: user._id,\n      value: user._id\n    }, _toDisplayString(user.username), 9 /* TEXT, PROPS */, _hoisted_13);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selectedUsers]])])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[36] || (_cache[36] = _createElementVNode(\"label\", {\n    for: \"recipient-name\"\n  }, \"invita:\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[15] || (_cache[15] = (...args) => $setup.sendNotificationPom && $setup.sendNotificationPom(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, _cache[35] || (_cache[35] = [_createElementVNode(\"i\", {\n    class: \"fas fa-paper-plane\"\n  }, null, -1 /* HOISTED */)]))])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    class: \"btn btn-secondary\",\n    onClick: _cache[16] || (_cache[16] = (...args) => $setup.closeModal && $setup.closeModal(...args)),\n    style: {\n      \"background\": \"#f4a460\"\n    }\n  }, \"Chiudi\")])])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","id","style","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","onSubmit","_cache","_withModifiers","args","$setup","aggiungiPomodoro","for","type","$event","newPom","tempoStudio","min","required","tempoPausa","ripetizioni","giorno","_hoisted_2","_toDisplayString","statusMessage","_hoisted_3","_hoisted_4","onClick","skipPhase","restartCycle","_hoisted_5","endCycle","pauseTimer","isPaused","key","resumeTimer","_createCommentVNode","openNotificationModal","isNotificationModalOpen","closeNotificationModal","_hoisted_6","_hoisted_7","_hoisted_8","_renderList","notificationsPom","notifica","index","_createTextVNode","username","Date","toLocaleDateString","_hoisted_9","openModal","isModalOpen","closeModal","_hoisted_10","_hoisted_11","_hoisted_12","selectedUsers","multiple","users","user","_id","value","_hoisted_13","_hoisted_14","_hoisted_15","sendNotificationPom","_hoisted_16"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/pomodoroTempo.vue"],"sourcesContent":["<template>\n  <div class=\"event-form\">\n    <h1>Sessione Pomodoro</h1>\n    <form @submit.prevent=\"aggiungiPomodoro\">\n      <div>\n        <label for=\"tempoStudio\">Tempo di studio (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoStudio\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"tempoPausa\">Tempo di pausa (minuti):</label>\n        <input type=\"number\" v-model=\"newPom.tempoPausa\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"ripetizioni\">Numero di ripetizioni:</label>\n        <input type=\"number\" v-model=\"newPom.ripetizioni\" min=\"1\" required>\n      </div>\n\n      <div>\n        <label for=\"giorno\">Giorno della sessione:</label>\n        <input type=\"date\" v-model=\"newPom.giorno\" required>\n      </div>\n\n      <button type=\"submit\" class=\"rounded-btn\">Aggiungi Sessione</button>\n    </form>\n\n    <p id=\"studio-pausa\">{{ statusMessage }}</p>\n\n    <div class=\"timer\" id=\"timerDisplay\">00:00</div>\n\n    <div class=\"controls\">\n  <div class=\"button-row\">\n    <button @click=\"skipPhase\">Salta alla fase successiva</button>\n    <button @click=\"restartCycle\">Ricomincia ciclo</button>\n  </div>\n  <div class=\"button-row\">\n    <button @click=\"endCycle\">Termina ciclo</button>\n    <button @click=\"pauseTimer\">Stoppa timer</button>\n    <button v-if=\"isPaused\" @click=\"resumeTimer\">Riprendi timer</button> \n  </div>\n</div>\n\n  </div>\n\n\n                   <!--MODAL VEDI NOTIFIHCE-->\n\n                   <button class=\"fixed-button\" @click=\"openNotificationModal\" style=\"background:#f4a460; margin-bottom: 50px;\">\n                  Vedi Notifiche\n                    </button>\n\n\n                    <div v-if=\"isNotificationModalOpen\" class=\"modal\" @click.self=\"closeNotificationModal\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\" style=\"background: linear-gradient(to bottom, #f4a460, #eee8aa);\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title fs-5\">Notifiche</h1>\n          </div>\n          <div class=\"modal-body\">\n            <p>Qui puoi visualizzare tutte le notifiche ricevute.</p>\n            <ul>\n              <li v-for=\"(notifica, index) in notificationsPom\" :key=\"index\">\n      <p><strong>INVITATO DA:</strong> {{ notifica.username }}</p>\n      <p><strong>TEMPO STUDIO:</strong> {{ notifica.tempoStudio }} minuti</p>\n      <p><strong>TEMPO PAUSA:</strong> {{ notifica.tempoPausa }} minuti</p>\n      <p><strong>RIPETIZIONI:</strong> {{ notifica.ripetizioni }}</p>\n      <p><strong>GIORNO:</strong> {{ new Date(notifica.giorno).toLocaleDateString() }}</p>\n      <hr> <!-- Linea di separazione tra le notifiche -->\n    </li>\n           </ul>\n\n\n\n\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeNotificationModal\" style=\"background:#f4a460;\">Chiudi</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n\n\n\n\n\n                 <!--MODAL INVIA NOTIFICA -->\n  <button class=\"fixed-button\" @click=\"openModal\" style=\"background:#f4a460;\">\n  <i class=\"fas fa-paper-plane\"></i>\n</button>\n\n\n<div v-if=\"isModalOpen\" class=\"modal\" @click.self=\"closeModal\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\" style=\"background: linear-gradient(to bottom, #f4a460, #eee8aa);\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title\">invita un amico a studiare con le tue impostazioni:</h1>\n          </div>\n          <form>\n  <div class=\"form-group\">\n    <label for=\"recipient-name\">Destinatario:</label>\n    <select id=\"userSelect\" v-model=\"selectedUsers\" multiple class=\"form-control\">\n      <option v-for=\"user in users\" :key=\"user._id\" :value=\"user._id\">\n        {{ user.username }}\n      </option>\n    </select>\n  </div>\n</form>\n\n          <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <label for=\"recipient-name\">invita:</label>\n                <button class=\"btn btn-primary\" @click=\"sendNotificationPom\" style=\"background:#f4a460;\">\n              <i class=\"fas fa-paper-plane\"></i>\n            </button>\n                \n              </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-secondary\" @click=\"closeModal\" style=\"background:#f4a460;\">Chiudi</button>\n           \n          </div>\n        </div>\n      </div>\n    </div>\n\n\n</template>\n\n<script>\nimport { ref, onMounted,  onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n\n    const newPom = ref({\n      username: localStorage.getItem('username') || 'Guest',\n      tempoStudio: 30,  \n      tempoPausa: 5,    \n      ripetizioni: 5,  \n      giorno: ''\n    });\n    \n   const statusMessage = ref('');\n    let studyCycles = ref(parseInt(route.query.studyCycles) || newPom.value.ripetizioni);\n    let timerInterval = null;\n    let isStudyPhase = ref(route.query.isStudyPhase === 'true');\n    let remainingTime = ref(parseInt(route.query.remainingTime) || 0);\n    let isPaused = ref(false);\n    const progressWidth = ref(0);\n    let isModalOpen = ref(false);\n    let isNotificationModalOpen = ref(false);\n    const users = ref([]); // dichiara users come reattivo\n    const selectedUsers = ref([]);\n    let notificationsPom = ref([]);\n    const noNotificationsMessage = ref('');\n\n\n    onMounted(() => {\n\n      getUsers();\n\n\n\n       if (route.query.date) {\n        newPom.value.giorno = new Date(route.query.date).toISOString().split('T')[0];\n      } else {\n        newPom.value.giorno = new Date().toISOString().split('T')[0];\n      }\n\n      remainingTime.value = parseInt(route.query.remainingTime) || 0;\n      studyCycles.value = parseInt(route.query.studyCycles) || newPom.value.ripetizioni;\n      isStudyPhase.value = route.query.isStudyPhase === 'true';\n      newPom.value.tempoStudio = parseInt(route.query.tempoStudio) || newPom.value.tempoStudio;\n      newPom.value.tempoPausa = parseInt(route.query.tempoPausa) || newPom.value.tempoPausa;\n      newPom.value.ripetizioni = parseInt(route.query.ripetizioni) || newPom.value.ripetizioni;\n\n      console.log(\"Parametri inizializzati:\", {\n        giorno: newPom.value.giorno,\n        remainingTime: remainingTime.value,\n        studyCycles: studyCycles.value,\n        isStudyPhase: isStudyPhase.value,\n        tempoStudio: newPom.value.tempoStudio,\n        tempoPausa: newPom.value.tempoPausa,\n        ripetizioni: newPom.value.ripetizioni,\n      });\n\n      if (remainingTime.value > 0) {\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n      if (isStudyPhase.value) {\n        startTimerWithRemainingTime();\n      } else {\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      }\n    }\n});\n\n\n\n\n\n    onUnmounted(() => {\n      clearInterval(timerInterval); \n    });\n\n\n    const updateProgressBar = (totalTime) => {\n      const percentage = ((totalTime - remainingTime.value) / totalTime) * 100;\n      progressWidth.value = Math.min(percentage, 100);\n    };\n\n\n\n    const getUsers = async () => {\n      try {\n        const username = localStorage.getItem('username');\n        const token = sessionStorage.getItem('token');\n        const response = await axios.get('/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n        users.value = response.data; \n        console.log(\"users:\", users.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli utenti:', error);\n      }\n    };\n\n\n    const aggiungiPomodoro = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const currentDate = new Date();\n        const selectedDate = new Date(newPom.value.giorno);\n\n        const response = await axios.post('/api/pomsPOST', newPom.value, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        console.log('Sessione pomodoro aggiunta:', response.data);\n\n        if (selectedDate.getTime() > currentDate.getTime()) {\n          statusMessage.value = 'Sessione pomodoro aggiunta per una data futura.';\n        } else {\n          studyCycles.value = newPom.value.ripetizioni;\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      } catch (error) {\n        console.error('Errore:', error);\n      }\n    };\n\n\n     \n    const fetchInvitiPom = async () => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        const response = await axios.get('/api/getNotifichePom', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: { username: username }\n        });\n        //console.log(response.data);\n        if (response.data) {\n          notificationsPom.value = response.data;\n          console.log(\"no:\",notificationsPom);\n        } else {\n          this.noNotificationsMessage = 'Nessuna notifica trovata.';\n        }\n      } catch (error) {\n        console.error('Errore nel recupero delle notifiche :', error);\n        this.noNotificationsMessage = 'Errore caricamento delle notifiche.';\n      }\n    };\n\n\n      \n   const startTimerWithRemainingTime = () => {\n      isPaused.value = false;\n      clearInterval(timerInterval);\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n      timerInterval = setInterval(() => {\n        updateTimer(totalTime);\n      }, 1000);\n    };\n\n    const startStudyTimer = (studyTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Studio! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = studyTime * 60;\n      isStudyPhase.value = true;\n      isPaused.value = false;\n      progressWidth.value = 0;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(studyTime * 60);\n      }, 1000);\n    };\n\n\n    const openModal  =  () =>  {\n      isModalOpen.value = true;\n    };\n    const closeModal  =  () =>  {\n      isModalOpen.value = false;\n    };\n\n    const openNotificationModal = () => {\n      console.log(\"aperto notifiche modal\");\n       isNotificationModalOpen.value = true;\n       fetchInvitiPom();\n    };\n\n    const closeNotificationModal = () => {\n      isNotificationModalOpen.value = false;\n    }\n\n\n    const sendNotificationPom = async () => {\n  const token = sessionStorage.getItem('token');\n  const username = localStorage.getItem('username');\n  console.log(\"selected user:\",selectedUsers.value);\n\n\n  try {\n    await axios.post(\n      '/api/sendNoticationPom',\n      {\n        username,\n        tempoStudio: newPom.value.tempoStudio,\n        tempoPausa: newPom.value.tempoPausa,\n        ripetizioni: newPom.value.ripetizioni,\n        destinatario: selectedUsers.value,\n        giorno: newPom.value.giorno\n      },\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    alert(\"notifica mandata con successo\");\n  } catch (error) {\n    console.error(\"Errore invio notifica pomodoro\", error);\n  }\n};\n\n\n\n\n     const startBreakTimer = (pauseTime, cycles) => {\n      if (cycles <= 0) {\n        alert('Ciclo completato!');\n        return;\n      }\n      statusMessage.value = `Pausa! Numero cicli rimanenti: ${cycles}`;\n      remainingTime.value = pauseTime * 60;\n      isStudyPhase.value = false;\n      isPaused.value = false;\n      progressWidth.value = 0;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n        updateTimer(pauseTime * 60);\n      }, 1000);\n    };\n    \n    const updateTimer = (totalTime) => {\n      if (remainingTime.value > 0) {\n        remainingTime.value -= 1;\n        document.getElementById('timerDisplay').textContent = formatTime(remainingTime.value);\n        updateProgressBar(totalTime);\n      } else {\n        clearInterval(timerInterval);\n        studyCycles.value--;\n        if (isStudyPhase.value) {\n          startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n        } else {\n          startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n        }\n      }\n    };\n\n    const formatTime = (timeInSeconds) => {\n      const minutes = Math.floor(timeInSeconds / 60);\n      const seconds = timeInSeconds % 60;\n      return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    };\n\n\n    const skipPhase = () => {\n      clearInterval(timerInterval);\n      progressWidth.value = 0;\n\n      if (isStudyPhase.value) {\n        studyCycles.value--;\n        startBreakTimer(newPom.value.tempoPausa, studyCycles.value);\n      } else {\n        startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n      }\n\n      if (studyCycles.value <= 0) {\n        statusMessage.value = \"Ciclo completato!\";\n        document.getElementById('timerDisplay').textContent = \"00:00\";\n      }\n    };\n\n    const restartCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = newPom.value.ripetizioni;\n      progressWidth.value = 0;\n      startStudyTimer(newPom.value.tempoStudio, studyCycles.value, newPom.value.tempoPausa);\n    };\n\n    const endCycle = () => {\n      clearInterval(timerInterval);\n      studyCycles.value = 0;\n      progressWidth.value = 0;\n      statusMessage.value = 'Ciclo terminato manualmente.';\n      document.getElementById('timerDisplay').textContent = \"00:00\";\n      saveIncompleteSession();\n    };\n\n    const pauseTimer = () => {\n      clearInterval(timerInterval);\n      isPaused.value = true;\n      saveIncompleteSession();\n    };\n\n    const resumeTimer = () => {\n      isPaused.value = false;\n      const totalTime = isStudyPhase.value ? newPom.value.tempoStudio * 60 : newPom.value.tempoPausa * 60;\n\n      clearInterval(timerInterval);\n      timerInterval = setInterval(() => {\n      updateTimer(totalTime);\n      }, 1000); \n  };\n\n    const saveIncompleteSession = async () => {\n      const token = sessionStorage.getItem('token');\n      const username = newPom.value.username.trim();\n\n      try {\n        await axios.post('/api/poms/save-incomplete', {\n          username,\n          giorno: new Date(newPom.value.giorno).toISOString(), \n          remainingTime: remainingTime.value,\n          isStudyPhase: isStudyPhase.value,\n          studyCycles: studyCycles.value,\n        }, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        console.log('Incomplete session saved.');\n      } catch (error) {\n        console.error('Error saving incomplete session:', error);\n      }\n    };\n\n    return {\n      newPom,\n      statusMessage,\n      aggiungiPomodoro,\n      skipPhase,\n      restartCycle,\n      endCycle,\n      pauseTimer,\n      resumeTimer,\n      isPaused, \n      progressWidth,\n      openModal,\n      closeModal,\n      isModalOpen,\n      sendNotificationPom,\n      getUsers,\n      users,\n      selectedUsers,\n      openNotificationModal,\n      closeNotificationModal,\n      isNotificationModalOpen,\n      fetchInvitiPom,\n      notificationsPom,\n      noNotificationsMessage\n    };\n  }\n};\n</script>\n\n\n<style scoped>\n#clock {\n  margin-top: 20px;\n}\n\n.progress-bar-container {\n  width: 100%;\n  height: 20px;\n  background-color: #e0e0e0; \n  overflow: hidden;\n  margin-bottom: 20px;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: green;\n  width: 0%;\n  transition: width 1s linear;\n}\n\n.timer {\n  font-size: 2em;\n  text-align: center;\n  margin-bottom: 10px;\n}\n\nform {\n  max-width: 400px;\n  margin: auto;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\nbutton.rounded-btn {\n  border-radius: 20px; \n}\n\n\n.controls {\n  margin-top: 20px;\n  margin-bottom: 40px;\n  display: flex; \n  flex-wrap: wrap; \n  justify-content: center; \n}\n\n.controls button {\n  padding: 10px;\n  margin: 10px; \n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.button-row {\n  display: flex; \n  justify-content: space-between; \n  margin-bottom: 10px; \n}\n\n.controls button {\n  flex: 1; \n  margin-right: 10px; \n}\n\n.controls button:last-child {\n  margin-right: 0;\n}\n\n#clock {\n  margin-top: 40px;\n}\n\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5); \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1001; \n}\n\n.modal-content {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n.fixed-button {\n  position: fixed;\n  bottom: 20px; \n  right: 20px;  \n}\n\n.fixed-button:nth-of-type(1) {\n  margin-bottom: 50px; \n}\n\n.notification-item {\n  padding: 10px; \n}\n\n.notification-separator {\n  border: none; \n  height: 5px; \n  background-color: blue;\n  margin: 10px 0; \n}\n\n.notification-item:last-child .notification-separator {\n  display: none; \n}\n\n\n.notification-item {\n  position: relative;\n  padding: 10px;\n  margin: 10px;\n  border: 1px solid #ccc; \n}\n\n.notification-footer {\n  position: absolute; \n  bottom: 30px; \n  right: 10px; \n}\n\n.delete-btn {\n  background: none;\n  border: none; \n  cursor: pointer;\n}\n\n\n@media (max-width: 600px) {\n  h1 {\n    margin-top: 30px; \n  }\n\n  .controls button {\n    margin-right: 10px; \n  }\n}\n\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}