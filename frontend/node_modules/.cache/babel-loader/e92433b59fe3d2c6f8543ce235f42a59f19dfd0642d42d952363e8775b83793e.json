{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]);\n    const incompleteSessions = ref([]);\n    const queryDate = computed(() => route.query.date);\n    const confirmDeleteActivity = id => {\n      if (confirm(\"Sicuro di voler eliminare questa Attivit√†?\")) {\n        deleteActivities(id);\n      }\n    };\n    const deleteActivities = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username: username\n          }\n        });\n        console.log('Attivit√† eliminata');\n        fetchEvents();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attivit√†:', error);\n      }\n    };\n    const confirmDeleteEvent = id => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id);\n      }\n    };\n    const deleteEvents = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Evento eliminato');\n        fetchEvents();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n    const confirmDeletePomodoro = id => {\n      if (confirm(\"Sicuro di voler eliminare questa sessione Pomodoro?\")) {\n        deletePomodoro(id);\n      }\n    };\n    const deletePomodoro = async id => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/pomRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Sessione Pomodoro eliminata');\n        fetchPoms();\n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della sessione:', error);\n      }\n    };\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n        const response = await axios.get('/api/events/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            author,\n            date\n          }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username,\n            date\n          }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attivit√† e dei pomodori:', error);\n      }\n    };\n    const fetchIncompleteSessions = async () => {\n      console.log(\"fetchIncompleteSessions chiamata\");\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n      try {\n        const response = await axios.get('/api/poms/incomplete', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            username\n          }\n        });\n        incompleteSessions.value = (Array.isArray(response.data) ? response.data : [response.data]).filter(session => session.studyCycles > 0);\n      } catch (error) {\n        console.error('Errore nel recupero delle sessioni incomplete:', error);\n      }\n    };\n    const resumePomodoro = session => {\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date: new Date(session.giorno).toISOString(),\n          remainingTime: session.remainingTime,\n          studyCycles: session.studyCycles,\n          isStudyPhase: session.isStudyPhase,\n          tempoStudio: session.tempoStudio,\n          tempoPausa: session.tempoPausa,\n          ripetizioni: session.ripetizioni\n        }\n      });\n    };\n    const discardPomodoro = async session => {\n      const token = sessionStorage.getItem('token');\n      try {\n        await axios.delete(`/api/pomRemove/${session._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        incompleteSessions.value = incompleteSessions.value.filter(s => s._id !== session._id);\n        console.log('Sessione Pomodoro scartata.');\n      } catch (error) {\n        console.error('Errore nello scartare la sessione pomodoro:', error.response?.data || error);\n      }\n    };\n    const formatDate = dateString => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date) ? date.toLocaleDateString('it-IT', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }) : 'Data non valida';\n    };\n    onMounted(() => {\n      fetchEvents();\n      fetchIncompleteSessions();\n    });\n    return {\n      events,\n      activities,\n      pomodoros,\n      incompleteSessions,\n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro,\n      resumePomodoro,\n      discardPomodoro,\n      confirmDeleteActivity,\n      confirmDeleteEvent,\n      confirmDeletePomodoro\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRoute","useRouter","axios","setup","route","router","events","activities","pomodoros","incompleteSessions","queryDate","query","date","confirmDeleteActivity","id","confirm","deleteActivities","token","sessionStorage","getItem","username","localStorage","delete","headers","Authorization","params","console","log","fetchEvents","error","confirmDeleteEvent","deleteEvents","confirmDeletePomodoro","deletePomodoro","fetchPoms","author","response","get","value","Array","isArray","data","activityResponse","pomodoroResponse","fetchIncompleteSessions","filter","session","studyCycles","resumePomodoro","push","path","Date","giorno","toISOString","remainingTime","isStudyPhase","tempoStudio","tempoPausa","ripetizioni","discardPomodoro","_id","s","formatDate","dateString","isNaN","toLocaleDateString","year","month","day","navigateToAddEvent","navigateToAddActivity","navigateToAddPomodoro"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/eventDayCalendar.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 class=\"main-title\">Eventi, Attivit√† e Pomodori per {{ formatDate(queryDate) }}</h2>\n    <div class=\"content-container\">\n      <div class=\"section activities-section\">\n        <h3>LE TUE ATTIVIT√Ä:</h3>\n        <div v-if=\"activities.length > 0\">\n          <div v-for=\"activity in activities\" :key=\"activity._id\" class=\"item-container\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ activity.title }}</h4>\n            <p>Data: {{ formatDate(activity.deadline || activity.date) }}</p>\n            <p>Descrizione: {{ activity.description }}</p>\n            <p v-if=\"activity.type === 'gruppo'\" style=\"color: #FF6347;\">\n              Attivit√† di gruppo creata da: {{ activity.author }}<br>\n              Gruppo composto da: {{ activity.participants.join(', ') }}\n            </p>\n            <button @click=\"confirmDeleteActivity(activity._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n          </div>\n        </div>\n        <p v-else>Nessuna attivit√† per questa data.</p>\n        <div class=\"button-container\">\n           <button class=\"fixed-button\" @click=\"navigateToAddActivity\" style=\"background:#f4a460;\">\n            Aggiungi attivita\n            </button>\n        </div>\n      </div>\n      \n      <div class=\"section events-section\">\n        <h3>I TUOI EVENTI:</h3>\n        <div v-if=\"events.length > 0\">\n          <div v-for=\"event in events\" :key=\"event._id\" class=\"item-container\">\n            <h4><span style=\"font-size: 0.9em;\">Titolo:</span> {{ event.title }}</h4>\n            <p>Data: {{ formatDate(event.date) }}</p>\n            <p>Descrizione: {{ event.description }}</p>\n            <button @click=\"confirmDeleteEvent(event._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n          </div>\n        </div>\n        <p v-else>Nessun evento per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddEvent\" style=\"background:#f4a460;\">\n            Aggiungi evento\n            </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"section pomodoros-section\">\n        <h3>I TUOI POMODORI:</h3>\n        <div v-if=\"pomodoros.length > 0\">\n          <div v-for=\"pomodoro in pomodoros\" :key=\"pomodoro._id\" class=\"item-container\">\n            <h4>Pomodoro Sessione</h4>\n            <p>Data: {{ formatDate(pomodoro.giorno) }}</p>\n            <p>Tempo di studio: {{ pomodoro.tempoStudio }} minuti</p>\n            <p>Tempo di pausa: {{ pomodoro.tempoPausa }} minuti</p>\n            <p>Ripetizioni: {{ pomodoro.ripetizioni }}</p>\n            <button @click=\"confirmDeletePomodoro(pomodoro._id)\" class=\"delete-btn\">üóëÔ∏è</button>\n          </div>\n        </div>\n        <p v-else>Nessun pomodoro per questa data.</p>\n        <div class=\"button-container\">\n          <button class=\"fixed-button\" @click=\"navigateToAddPomodoro\" style=\"background:#f4a460;\">\n            Aggiungi pomodoro\n            </button>\n        </div>\n      </div>\n\n\n\n\n       <div class=\"section pomodorosScaduti-section\">\n        <h3>I TUOI POMODORI INCOMPLETI</h3>\n      <div v-if=\"incompleteSessions.length > 0\">\n      <div v-for=\"session in incompleteSessions\" :key=\"session._id\" class=\"item-container\">\n        <p>Data: {{ formatDate(session.giorno) }}</p>\n        <p>Tempo rimanente: {{ Math.floor(session.remainingTime / 60) }}:{{ session.remainingTime % 60 }}</p>\n        <p>Cicli rimanenti: {{ session.studyCycles }}</p>\n         <button @click=\"resumePomodoro(session)\" class=\"action-button\">Riprendi Sessione</button>\n         <button @click=\"discardPomodoro(session)\" class=\"action-button\">\n          <span class=\"trash-icon\">üóëÔ∏è</span>Scarta\n         </button> \n      </div>\n    </div>\n    <p v-else>nessun pomodoro da portare a termine</p>\n  </div>\n\n\n\n\n  </div>\n</template>\n\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const events = ref([]);\n    const activities = ref([]);\n    const pomodoros = ref([]); \n    const incompleteSessions = ref([]);\n    const queryDate = computed(() => route.query.date);\n\n    const confirmDeleteActivity = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa Attivit√†?\")) {\n        deleteActivities(id); \n      }\n    };\n\n    const deleteActivities = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        await axios.delete(`/api/activitiesRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          },\n          params: { username: username } \n        });\n        console.log('Attivit√† eliminata');\n        fetchEvents(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della attivit√†:', error);\n      }\n    };\n\n    const confirmDeleteEvent = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questo Evento?\")) {\n        deleteEvents(id); \n      }\n    };\n\n    const deleteEvents = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/eventsRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Evento eliminato');\n        fetchEvents(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione di evento:', error);\n      }\n    };\n\n    const confirmDeletePomodoro = (id) => {\n      if (confirm(\"Sicuro di voler eliminare questa sessione Pomodoro?\")) {\n        deletePomodoro(id); \n      }\n    };\n\n    const deletePomodoro = async (id) => {\n      try {\n        const token = sessionStorage.getItem('token');\n        await axios.delete(`/api/pomRemove/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}` \n          }\n        });\n        console.log('Sessione Pomodoro eliminata');\n        fetchPoms(); \n      } catch (error) {\n        console.error('Errore nell\\'eliminazione della sessione:', error);\n      }\n    };\n\n    const fetchEvents = async () => {\n      try {\n        const author = route.query.author;\n        const date = route.query.date;\n        const username = route.query.username || author;\n\n        const token = sessionStorage.getItem('token');\n        console.log('Fetching events for:', author, date);\n\n        const response = await axios.get('/api/events/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        events.value = Array.isArray(response.data) ? response.data : [response.data];\n        console.log('Fetched events:', events.value);\n\n        const activityResponse = await axios.get('/api/activities/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { author, date }\n        });\n        activities.value = Array.isArray(activityResponse.data) ? activityResponse.data : [activityResponse.data];\n        console.log('Fetched activities:', activities.value);\n\n        const pomodoroResponse = await axios.get('/api/poms/by-date', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username, date }\n        });\n        pomodoros.value = Array.isArray(pomodoroResponse.data) ? pomodoroResponse.data : [pomodoroResponse.data];\n        console.log('Fetched pomodoros:', pomodoros.value);\n\n      } catch (error) {\n        console.error('Errore nel recupero degli eventi, delle attivit√† e dei pomodori:', error);\n      }\n    };\n\n    const fetchIncompleteSessions = async () => {\n      console.log(\"fetchIncompleteSessions chiamata\");\n      const token = sessionStorage.getItem('token');\n      const username = localStorage.getItem('username');\n\n      try {\n        const response = await axios.get('/api/poms/incomplete', {\n          headers: { Authorization: `Bearer ${token}` },\n          params: { username }\n        });\n        \n      incompleteSessions.value = (Array.isArray(response.data) ? response.data : [response.data])\n        .filter(session => session.studyCycles > 0);\n        \n      } catch (error) {\n        console.error('Errore nel recupero delle sessioni incomplete:', error);\n      }\n    };\n\n    const resumePomodoro = (session) => {\n\n      router.push({\n        path: '/pomodoroTempo',\n        query: {\n          date:  new Date(session.giorno).toISOString(),\n          remainingTime: session.remainingTime,\n          studyCycles: session.studyCycles,\n          isStudyPhase: session.isStudyPhase,\n          tempoStudio: session.tempoStudio,\n          tempoPausa: session.tempoPausa,\n          ripetizioni: session.ripetizioni,\n        },\n      });\n    };\n\n    const discardPomodoro = async (session) => {\n      const token = sessionStorage.getItem('token');\n      try {\n        await axios.delete(`/api/pomRemove/${session._id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n        incompleteSessions.value = incompleteSessions.value.filter(s => s._id !== session._id);\n        console.log('Sessione Pomodoro scartata.');\n      } catch (error) {\n        console.error('Errore nello scartare la sessione pomodoro:', error.response?.data || error);\n      }\n    };\n\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data non disponibile';\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date)\n        ? date.toLocaleDateString('it-IT', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        : 'Data non valida';\n    };\n\n    onMounted(() => {\n      fetchEvents();\n      fetchIncompleteSessions();\n    });\n\n    return {\n      events,\n      activities,\n      pomodoros, \n      incompleteSessions, \n      formatDate,\n      queryDate,\n      navigateToAddEvent,\n      navigateToAddActivity,\n      navigateToAddPomodoro, \n      resumePomodoro, \n      discardPomodoro,\n      confirmDeleteActivity,\n      confirmDeleteEvent,\n      confirmDeletePomodoro\n    };\n  }\n};\n\n\n</script>\n\n<style scoped>\n.button-container {\n  margin-top: auto; \n  margin-bottom: 10px; \n}\n\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton {\n  margin-right: 10px;\n  margin-bottom: 10px; \n  padding: 8px 16px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.trash-icon {\n  margin-right: 5px; \n  font-size: 1.2em; \n}\n\nbutton:hover {\n  background-color: #45a049;\n}\n\n.content-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 40px;\n  padding: 20px;\n  margin-left: -250px;\n}\n\n.activities-section {\n  flex: 1.5; \n  background-color: #f9f9f9;\n}\n\n.events-section {\n  flex: 1.5; \n  background-color: #e6f7ff;\n}\n\n.pomodoros-section {\n  flex: 1.5; \n  margin-left: 10px;\n  background-color: #ffe6e6;\n}\n\n.section {\n  margin-right: 100px;\n  min-width: 500px;\n  flex: 1.5; \n  padding: 25px;\n  border: 1px solid #ddd; \n  border-radius: 10px; \n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); \n  background-color: rgba(255, 255, 255, 0.8); \n  display: flex; \n  flex-direction: column; \n  justify-content: space-between; \n}\n\n.section:hover {\n  transform: scale(1.02); \n}\n\n.activities-section {\n  background-color: rgba(249, 249, 249, 0.8); \n}\n\n.events-section {\n  background-color: rgba(230, 247, 255, 0.8); \n}\n\n.pomodoros-section {\n  background-color: rgba(255, 230, 230, 0.8);\n}\n\n.pomodorosScaduti-section {\n  background-color: rgba(255, 230, 230, 0.8);\n}\n\nhr {\n  border: 0; \n  height: 1px; \n  background-color: #ddd; \n  margin: 10px 0; \n}\n.item-container {\n  background-color: rgba(255, 255, 255, 0.9);\n  border: 1px solid #ddd; \n  border-radius: 8px; \n  padding: 15px; \n  margin-bottom: 15px; \n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: relative; \n}\n\n.delete-btn {\n  position: absolute; \n  bottom: 10px;\n  right: 10px; \n  background: none;\n  border: none; \n  cursor: pointer; \n  font-size: 1.2em;\n  color: #e74c3c; \n}\n\n.delete-btn:hover {\n  color: #c0392b; \n}\n\n\n@media (max-width: 768px) {\n  .content-container {\n    flex-direction: column; \n    margin-left: 0; \n  }\n\n  .section {\n    min-width: auto; \n    margin-right: 0; \n    margin-bottom: 20px; \n  }\n  .main-title {\n  margin-top: 20px; \n}\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}