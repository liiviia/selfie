{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_3 = {\n  class: \"year-month-display\"\n};\nconst _hoisted_4 = {\n  class: \"year\"\n};\nconst _hoisted_5 = {\n  class: \"month\"\n};\nconst _hoisted_6 = {\n  class: \"calendar-weekdays\"\n};\nconst _hoisted_7 = {\n  class: \"calendar-grid\"\n};\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevMonth && $options.prevMonth(...args))\n  }, \"←\"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($data.currentYear), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.monthNames[$data.currentMonth]), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextMonth && $options.nextMonth(...args))\n  }, \"→\")]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.weekdays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day\n    }, _toDisplayString(day), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.emptyDays, emptyDay => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: emptyDay,\n      class: \"empty-day\"\n    });\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.daysInMonth, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day,\n      class: _normalizeClass([\"calendar-day\", {\n        'current-day': $options.isToday(day),\n        'sunday': $options.isSunday(day)\n      }]),\n      onClick: $event => $options.handleDayClick(day)\n    }, _toDisplayString(day), 11 /* TEXT, CLASS, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","prevMonth","_hoisted_3","_hoisted_4","_toDisplayString","$data","currentYear","_hoisted_5","monthNames","currentMonth","nextMonth","_hoisted_6","_Fragment","_renderList","weekdays","day","key","_hoisted_7","emptyDays","emptyDay","daysInMonth","_normalizeClass","isToday","isSunday","$event","handleDayClick","_hoisted_8"],"sources":["/home/massi1/Documenti/uni/tecWEB/progettoClone/progettoTWvue/frontend/src/views/calendarEvent.vue"],"sourcesContent":["<template>\n  <div class=\"calendar\">\n    <div class=\"calendar-header\">\n      <button @click=\"prevMonth\">←</button>\n      <div class=\"year-month-display\">\n        <div class=\"year\">{{ currentYear }}</div>\n        <div class=\"month\">{{ monthNames[currentMonth] }}</div>\n      </div>\n      <button @click=\"nextMonth\">→</button>\n    </div>\n\n    <div class=\"calendar-weekdays\">\n      <div v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\n    </div>\n\n    <div class=\"calendar-grid\">\n      <div v-for=\"emptyDay in emptyDays\" :key=\"emptyDay\" class=\"empty-day\"></div>\n      <div v-for=\"day in daysInMonth\" :key=\"day\" class=\"calendar-day\" \n           :class=\"{ 'current-day': isToday(day), 'sunday': isSunday(day) }\" \n           @click=\"handleDayClick(day)\">\n        {{ day }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      currentYear: new Date().getFullYear(),\n      currentMonth: new Date().getMonth(),\n      monthNames: [\n        'Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno',\n        'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'\n      ],\n      weekdays: ['Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab', 'Dom']\n    };\n  },\n  computed: {\n    daysInMonth() {\n      return new Array(new Date(this.currentYear, this.currentMonth + 1, 0).getDate()).fill(null).map((_, i) => i + 1);\n    },\n    emptyDays() {\n      const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();\n      return new Array(firstDay === 0 ? 6 : firstDay - 1).fill(null);\n    }\n  },\n  methods: {\n    isToday(day) {\n      const today = new Date();\n      return (\n        day === today.getDate() &&\n        this.currentMonth === today.getMonth() &&\n        this.currentYear === today.getFullYear()\n      );\n    },\n    isSunday(day) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      return date.getDay() === 0;\n    },\n    prevMonth() {\n      this.currentMonth--;\n      if (this.currentMonth < 0) {\n        this.currentMonth = 11;\n        this.currentYear--;\n      }\n    },\n    nextMonth() {\n      this.currentMonth++;\n      if (this.currentMonth > 11) {\n        this.currentMonth = 0;\n        this.currentYear++;\n      }\n    },\n    handleDayClick(day) {\n      const date = new Date(this.currentYear, this.currentMonth, day);\n      console.log('Hai cliccato sulla data:', date);\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n.custom-btn {\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.calendar {\n  width: 500px;\n  margin: 0 auto;\n  text-align: center;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.year-month-display {\n  text-align: center;\n}\n\n.year {\n  font-size: 2em;\n}\n\n.month {\n  font-size: 1.5em;\n}\n\n.calendar-weekdays,\n.calendar-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px;\n  margin-bottom: 10px;\n}\n\n.calendar-weekdays div {\n  font-weight: bold;\n  padding: 10px 0;\n}\n\n.calendar-day {\n  padding: 10px;\n  border: 1px solid #ccc;\n  cursor: pointer;\n}\n\n.calendar-day:hover {\n  background-color: #d4edda;\n}\n\n.current-day {\n  border-color: red;\n  border-width: 3px;\n  border-radius: 10px;\n}\n\n.empty-day {\n  visibility: hidden;\n}\n\n.sunday {\n  font-weight: bold;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAO;;EAKjBA,KAAK,EAAC;AAAmB;;EAIzBA,KAAK,EAAC;AAAe;mBAf9B;;uBACEC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAOM,OAPNC,UAOM,GANJD,mBAAA,CAAqC;IAA5BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,GAAC,GAC5BJ,mBAAA,CAGM,OAHNO,UAGM,GAFJP,mBAAA,CAAyC,OAAzCQ,UAAyC,EAAAC,gBAAA,CAApBC,KAAA,CAAAC,WAAW,kBAChCX,mBAAA,CAAuD,OAAvDY,UAAuD,EAAAH,gBAAA,CAAjCC,KAAA,CAAAG,UAAU,CAACH,KAAA,CAAAI,YAAY,kB,GAE/Cd,mBAAA,CAAqC;IAA5BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAU,SAAA,IAAAV,QAAA,CAAAU,SAAA,IAAAX,IAAA,CAAS;KAAE,GAAC,E,GAG9BJ,mBAAA,CAEM,OAFNgB,UAEM,I,kBADJlB,mBAAA,CAAuDmB,SAAA,QAZ7DC,WAAA,CAYyBR,KAAA,CAAAS,QAAQ,EAAfC,GAAG;yBAAftB,mBAAA,CAAuD;MAAzBuB,GAAG,EAAED;IAAG,GAAAX,gBAAA,CAAKW,GAAG;oCAGhDpB,mBAAA,CAOM,OAPNsB,UAOM,I,kBANJxB,mBAAA,CAA2EmB,SAAA,QAhBjFC,WAAA,CAgB8Bb,QAAA,CAAAkB,SAAS,EAArBC,QAAQ;yBAApB1B,mBAAA,CAA2E;MAAvCuB,GAAG,EAAEG,QAAQ;MAAE3B,KAAK,EAAC;;qDACzDC,mBAAA,CAIMmB,SAAA,QArBZC,WAAA,CAiByBb,QAAA,CAAAoB,WAAW,EAAlBL,GAAG;yBAAftB,mBAAA,CAIM;MAJ2BuB,GAAG,EAAED,GAAG;MAAEvB,KAAK,EAjBtD6B,eAAA,EAiBuD,cAAc;QAAA,eACjCrB,QAAA,CAAAsB,OAAO,CAACP,GAAG;QAAA,UAAaf,QAAA,CAAAuB,QAAQ,CAACR,GAAG;MAAA;MAC5DlB,OAAK,EAAA2B,MAAA,IAAExB,QAAA,CAAAyB,cAAc,CAACV,GAAG;wBAC1BA,GAAG,gCApBdW,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}